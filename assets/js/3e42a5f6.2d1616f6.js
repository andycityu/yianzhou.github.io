"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1806],{72448:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>_,toc:()=>s});var l=t(87462),a=(t(67294),t(3905));t(61839);const o={sidebar_position:4},i="Block",_={unversionedId:"Objective-C/block",id:"Objective-C/block",title:"Block",description:"\u8bed\u6cd5",source:"@site/docs/language/Objective-C/block.md",sourceDirName:"Objective-C",slug:"/Objective-C/block",permalink:"/docs/language/Objective-C/block",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Category",permalink:"/docs/language/Objective-C/category"},next:{title:"Runtime",permalink:"/docs/language/Objective-C/runtime"}},c={},s=[{value:"\u8bed\u6cd5",id:"\u8bed\u6cd5",level:2},{value:"\u5e95\u5c42\u63a2\u7d22",id:"\u5e95\u5c42\u63a2\u7d22",level:2},{value:"self \u5982\u4f55\u6355\u83b7",id:"self-\u5982\u4f55\u6355\u83b7",level:2},{value:"block \u7684\u7c7b\u578b",id:"block-\u7684\u7c7b\u578b",level:2},{value:"<code>__block</code> \u4fee\u9970\u7b26",id:"__block-\u4fee\u9970\u7b26",level:2},{value:"<code>__forwarding</code> \u6307\u9488",id:"__forwarding-\u6307\u9488",level:2},{value:"\u57fa\u672c\u7c7b\u578b\u4e0e\u5bf9\u8c61\u7c7b\u578b\u88ab <code>__block</code> \u4fee\u9970\u7684\u533a\u522b",id:"\u57fa\u672c\u7c7b\u578b\u4e0e\u5bf9\u8c61\u7c7b\u578b\u88ab-__block-\u4fee\u9970\u7684\u533a\u522b",level:2},{value:"\u89e3\u51b3\u5faa\u73af\u5f15\u7528",id:"\u89e3\u51b3\u5faa\u73af\u5f15\u7528",level:2},{value:"1. weak-strong dance",id:"1-weak-strong-dance",level:3},{value:"2. \u4e34\u65f6\u53d8\u91cf",id:"2-\u4e34\u65f6\u53d8\u91cf",level:3},{value:"3. block \u4f20\u53c2",id:"3-block-\u4f20\u53c2",level:3},{value:"\u4ee3\u7801\u793a\u4f8b 1",id:"\u4ee3\u7801\u793a\u4f8b-1",level:2},{value:"\u4ee3\u7801\u793a\u4f8b 2",id:"\u4ee3\u7801\u793a\u4f8b-2",level:2}],r={toc:s};function p(e){let{components:n,...o}=e;return(0,a.kt)("wrapper",(0,l.Z)({},r,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"block"},"Block"),(0,a.kt)("h2",{id:"\u8bed\u6cd5"},"\u8bed\u6cd5"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(19588).Z,width:"1140",height:"420"})),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://goshdarnblocksyntax.com/"},"How Do I Declare A Block in Objective-C?")),(0,a.kt)("h2",{id:"\u5e95\u5c42\u63a2\u7d22"},"\u5e95\u5c42\u63a2\u7d22"),(0,a.kt)("p",null,"block \u662f\u5c01\u88c5\u4e86\u51fd\u6570\u8c03\u7528\u53ca\u5176\u4e0a\u4e0b\u6587\u73af\u5883\u7684 OC \u5bf9\u8c61\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'dispatch_block_t block = ^{};\nNSLog(@"%@", [block class]); // __NSGlobalBlock__\nNSLog(@"%@", [block superclass]); // NSBlock\nNSLog(@"%@", [[block superclass] superclass]); // NSObject\n')),(0,a.kt)("p",null,"\u60f3\u63a2\u7a76 block \u7684\u5e95\u5c42\uff0c\u53ef\u4ee5\u7528\u7f16\u8bd1\u5668\u524d\u7aef clang \u5c06 OC \u4ee3\u7801\u8f6c\u5199\u4e3a C++ \u4ee3\u7801\uff1a"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"xcrun -sdk iphoneos clang -arch arm64 -rewrite-objc main.m")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff0c\u771f\u6b63\u5728\u7f16\u8bd1\u65f6 llvm \u751f\u6210\u7684\u4e0d\u662f cpp \u4ee3\u7801\uff0c\u800c\u662f\u4e2d\u95f4\u4ee3\u7801\u3002\u6240\u4ee5 cpp \u4ee3\u7801\u53ea\u80fd\u4f5c\u4e3a\u7aa5\u63a2\u5e95\u5c42\u5b9e\u73b0\u7684\u53c2\u8003\uff0c\u5176\u548c\u6700\u7ec8\u4ea7\u7269\u5728\u4e00\u4e9b\u7ec6\u8282\u5b9e\u73b0\u4e0a\u662f\u6709\u533a\u522b\u7684\uff0c\u8fd8\u662f\u8981\u4ee5\u8fd0\u884c\u65f6\u7684\u7ed3\u679c\u4e3a\u51c6\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:"title='main.m'",title:"'main.m'"},'int cat = 3;\n\nint main(int argc, const char * argv[]) {\n    int apple = 1; // \u5373 auto int\uff0c\u81ea\u52a8\u53d8\u91cf\uff0c\u79bb\u5f00\u4f5c\u7528\u57df\u5c31\u9500\u6bc1\n    static int boy = 2;\n    void (^block)(void) = ^{\n        printf("%d", apple + boy + cat);\n    };\n    block();\n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='main.cpp'",title:"'main.cpp'"},'int cat = 3; // \u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u7528\u6355\u83b7\uff0c\u76f4\u63a5\u8bbf\u95ee\n\n// block \u5728\u5e95\u5c42\u53d8\u6210\u4e86\u8fd9\u6837\u7684\u7ed3\u6784\u4f53\n// block \u6355\u83b7\u7684\u53d8\u91cf\uff0c\u90fd\u5bf9\u5e94\u7740\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\nstruct __main_block_impl_0 { // \u610f\u4e3a main \u51fd\u6570\u4e2d\u7684\u7b2c 0 \u4e2a block\n  // \u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u6307\u9488\uff0c\u800c\u662f\u76f4\u63a5\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u628a __block_impl \u91cc\u7684\u4e1c\u897f\u90fd\u642c\u8fc7\u6765\n  // \u53ef\u4ee5\u770b\u5230\uff0cblock \u91cc\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u5c31\u662f isa \u6307\u9488\uff08\u7ee7\u627f\u81ea NSObject\uff09\uff0c\u56e0\u6b64\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a OC \u5bf9\u8c61\n  struct __block_impl impl;\n  struct __main_block_desc_0* Desc;\n  int apple; // \u503c\u4f20\u9012\n  int *boy; // \u6307\u9488\u4f20\u9012\n\n  // \u6784\u9020\u51fd\u6570\n  __main_block_impl_0(void *fp, struct __main_block_desc_0 *desc, int _apple, int *_boy, int flags=0) : apple(_apple), boy(_boy) {\n    impl.isa = &_NSConcreteStackBlock; // \u8fd9\u4e2a\u7c7b\u4e0d\u4ee3\u8868\u6700\u7ec8\u7684\u5b9e\u73b0\uff0c\u8981\u4ee5\u8fd0\u884c\u65f6\u4e3a\u51c6\n    impl.Flags = flags;\n    impl.FuncPtr = fp; // \u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u51fd\u6570\u5b9e\u73b0\n    Desc = desc;\n  }\n};\n\nstruct __block_impl {\n  void *isa;\n  int Flags;\n  int Reserved;\n  void *FuncPtr;\n};\n\n// block \u5185\u90e8\u7684\u4ee3\u7801\u5728\u8fd9\nstatic void __main_block_func_0(struct __main_block_impl_0 *__cself) {\n    int apple = __cself->apple; // bound by copy\n    int *boy = __cself->boy; // bound by copy\n    printf("%d", apple + (*boy) + cat);\n}\n\nstatic struct __main_block_desc_0 {\n  size_t reserved; // \u4fdd\u7559\u5b57\u6bb5\uff0c\u6ca1\u4ec0\u4e48\u7528\n  size_t Block_size; // sizeof \u8fd0\u7b97\u7b26\u5f97\u51fa\u7684\u5185\u5b58\u5927\u5c0f\n} __main_block_desc_0_DATA = { 0, sizeof(struct __main_block_impl_0)};\n\nint main(int argc, const char * argv[]) {\n    int apple = 1; // \u539f\u5c01\u4e0d\u52a8\n    static int boy = 2; // \u539f\u5c01\u4e0d\u52a8\n\n    // \u5b9a\u4e49 block \u53d8\u91cf\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0capple \u4f20\u503c\uff0cboy \u4f20\u5730\u5740\n    dispatch_block_t block = ((void (*)())&__main_block_impl_0((void *)__main_block_func_0,\n                                                                &__main_block_desc_0_DATA,\n                                                                apple,\n                                                                &boy));\n    // \u7b80\u5316\uff1ablock->FuncPtr(block);\n    ((void (*)(__block_impl *))((__block_impl *)block)->FuncPtr)((__block_impl *)block);\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"self-\u5982\u4f55\u6355\u83b7"},"self \u5982\u4f55\u6355\u83b7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'@implementation Person\n- (void)test {\n    void (^block)(void) = ^ {\n        NSLog(@"%p", self); // self \u662f\u51fd\u6570\u5b9e\u53c2\uff0c\u662f\u4e2a\u5c40\u90e8\u53d8\u91cf\n    };\n    block();\n}\n@end\n')),(0,a.kt)("p",null,"\u91cd\u5199\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"xcrun -sdk iphoneos clang -arch arm64 -rewrite-objc Person.m")),(0,a.kt)("p",null,"\u5f53\u6355\u83b7\u7684\u53d8\u91cf\u7c7b\u578b\u662f\u5bf9\u8c61\u800c\u4e0d\u662f\u57fa\u672c\u7c7b\u578b\u65f6\uff0c\u9700\u8981\u5bf9\u6355\u83b7\u7684\u5bf9\u8c61\u8fdb\u884c",(0,a.kt)("strong",{parentName:"p"},"\u5185\u5b58\u7ba1\u7406"),"\uff0c\u6b64\u65f6\u4f1a\u53d1\u73b0 ",(0,a.kt)("inlineCode",{parentName:"p"},"__Person__test_block_desc_0")," \u7ed3\u6784\u4f53\u91cc\u591a\u4e86\u4e24\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u5206\u522b\u662f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"void (*copy)"),"\uff1a\u5f53 block \u88ab\u62f7\u8d1d\u5230\u5806\u4e0a\u65f6\uff0c\u4f1a\u5bf9\u5bf9\u8c61\u8fdb\u884c\u5f15\u7528\uff08\u5f3a/\u5f31\u5f15\u7528\u7531\u6355\u83b7\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"auto")," \u53d8\u91cf\u7684\u4fee\u9970\u7b26\u51b3\u5b9a\uff09"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"void (*dispose)"),"\uff1a\u5f53 block \u4ece\u5806\u4e0a\u91ca\u653e\u65f6\uff0c\u53d6\u6d88\u5bf9\u5bf9\u8c61\u7684\u5f15\u7528")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// @implementation Person\nstruct __Person__test_block_impl_0 {\n  struct __block_impl impl;\n  struct __Person__test_block_desc_0* Desc;\n  Person *self;\n  __Person__test_block_impl_0(void *fp, struct __Person__test_block_desc_0 *desc, Person *_self, int flags=0) : self(_self) {\n    impl.isa = &_NSConcreteStackBlock;\n    impl.Flags = flags;\n    impl.FuncPtr = fp;\n    Desc = desc;\n  }\n};\n\nstatic void __Person__test_block_func_0(struct __Person__test_block_impl_0 *__cself) {\n    Person *self = __cself->self; // bound by copy\n    NSLog((NSString *)&__NSConstantStringImpl__var_folders_yb_d6gg31rn7snd9rnp12sctfb00000gn_T_Person_9d4d3e_mi_0, self);\n}\n\nstatic void __Person__test_block_copy_0(struct __Person__test_block_impl_0*dst, struct __Person__test_block_impl_0*src) {_Block_object_assign((void*)&dst->self, (void*)src->self, 3/*BLOCK_FIELD_IS_OBJECT*/);}\n\nstatic void __Person__test_block_dispose_0(struct __Person__test_block_impl_0*src) {_Block_object_dispose((void*)src->self, 3/*BLOCK_FIELD_IS_OBJECT*/);}\n\nstatic struct __Person__test_block_desc_0 {\n  size_t reserved;\n  size_t Block_size;\n  void (*copy)(struct __Person__test_block_impl_0*, struct __Person__test_block_impl_0*);\n  void (*dispose)(struct __Person__test_block_impl_0*);\n} __Person__test_block_desc_0_DATA = { 0, sizeof(struct __Person__test_block_impl_0), __Person__test_block_copy_0, __Person__test_block_dispose_0};\n\n// -(void)test\nstatic void _I_Person_test(Person * self, SEL _cmd) {\n    void (*block)(void) = (&__Person__test_block_impl_0(__Person__test_block_func_0,\n                                                        &__Person__test_block_desc_0_DATA,\n                                                        self,\n                                                        570425344));\n    ((void (*)(__block_impl *))((__block_impl *)block)->FuncPtr)((__block_impl *)block);\n}\n// @end\n")),(0,a.kt)("p",null,"\u5f53\u7528\u5230\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"__weak")," \u5f15\u7528\u65f6\uff0c\u91cd\u5199\u4ee3\u7801\u53ef\u80fd\u4f1a\u9047\u5230\u62a5\u9519\uff0c\u539f\u56e0\u662f\u5f31\u5f15\u7528\u9700\u8981\u4f9d\u8d56\u8fd0\u884c\u65f6\uff0c\u6b64\u65f6\u7684\u91cd\u5199\u6307\u4ee4\u9700\u6307\u5b9a ARC \u548c\u8fd0\u884c\u65f6\u7248\u672c\uff1a"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"xcrun -sdk iphoneos clang -arch arm64 -rewrite-objc -fobjc-arc -fobjc-runtime=ios-15.0.0 main.m")),(0,a.kt)("h2",{id:"block-\u7684\u7c7b\u578b"},"block \u7684\u7c7b\u578b"),(0,a.kt)("p",null,"\u53ea\u8981\u4e0d\u8bbf\u95ee ",(0,a.kt)("inlineCode",{parentName:"p"},"auto")," \u53d8\u91cf\uff0c\u90fd\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"__NSGlobalBlock__")," \u7c7b\u578b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'int cat = 3;\n\nint main(int argc, const char * argv[]) {\n    static int boy = 2;\n    void (^block)(void) = ^{\n        printf("%d", boy + cat);\n    };\n    NSLog(@"%@", [block class]); // __NSGlobalBlock__\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u5728 MRC \u4e0b\uff0c\u53ea\u8981\u8bbf\u95ee\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"auto")," \u53d8\u91cf\uff0c\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"__NSStackBlock__")," \u7c7b\u578b\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(42548).Z,width:"1636",height:"346"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u7f16\u8bd1\u8bbe\u7f6e\u4e3a MRC\nint main(int argc, const char * argv[]) {\n    int cat = 1;\n    void (^block)(void) = ^{\n        printf("%d", cat);\n    };\n    NSLog(@"%@", [block class]); // __NSStackBlock__\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u6808\u4e0a\u7684 block \u5b58\u5728\u4ec0\u4e48\u95ee\u9898\u5462\uff1f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u7f16\u8bd1\u8bbe\u7f6e\u4e3a MRC\nvoid (^block)(void) = nil;\n\nvoid test() {\n    int cat = 1; // cat\u662fauto\u53d8\u91cf\uff0c\u5b58\u653e\u5728\u6808\u4e0a\n    block = ^{\n        printf("%d", cat);\n    };\n}\n\nint main(int argc, const char * argv[]) {\n    test(); // test\u51fd\u6570\u8c03\u7528\u5b8c\u6bd5\u540e\uff0ccat\u5c31\u88ab\u91ca\u653e\u4e86\n    block(); // \u6253\u5370\u51fa\u6765\u5e76\u4e0d\u662f1\uff0c\u800c\u662f\u968f\u673a\u7684\u6570\u5b57\u4f8b\u598216176\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u5bf9 ",(0,a.kt)("inlineCode",{parentName:"p"},"__NSStackBlock__")," \u7c7b\u578b\u7684 block \u8c03\u7528 copy\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u62f7\u8d1d\u5230\u5806\u4e0a\uff0c\u53d8\u6210 ",(0,a.kt)("inlineCode",{parentName:"p"},"__NSMallocBlock__")," \u7c7b\u578b\uff0c\u5176\u6355\u83b7\u7684\u53d8\u91cf\u503c\u4e5f\u5c31\u80fd\u4fdd\u7559\u4e0b\u6765\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u7f16\u8bd1\u8bbe\u7f6e\u4e3a MRC\nvoid (^block)(void) = nil;\n\nvoid test() {\n    int cat = 1;\n    block = [^{\n        printf("%d", cat);\n    } copy];\n}\n\nint main(int argc, const char * argv[]) {\n    test();\n    block(); // 1\n    NSLog(@"%@", [block class]); // __NSMallocBlock__\n    return 0;\n}\n')),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(42010).Z,width:"2138",height:"492"})),(0,a.kt)("p",null,"\u4e3a\u4ec0\u4e48 block \u5c5e\u6027\u8981\u7528 copy \u4fee\u9970\u5462\uff1f\u6839\u636e",(0,a.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/WorkingwithBlocks/WorkingwithBlocks.html#//apple_ref/doc/uid/TP40011210-CH8-SW1"},"\u5b98\u65b9\u6587\u6863"),"\u7684\u89e3\u91ca\uff1a\u5728 ARC \u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210 copy\uff0c\u56e0\u6b64\u5efa\u8bae\u4f7f\u7528 copy \u4fee\u9970\u7b26\u6765\u6307\u51fa\u8fd9\u91cc\u7684\u5185\u5b58\u884c\u4e3a\u3002You should specify copy as the property attribute, because a block needs to be copied to ",(0,a.kt)("strong",{parentName:"p"},"keep track of its captured state outside of the original scope"),". This isn\u2019t something you need to worry about when using Automatic Reference Counting, as it will happen automatically, but it\u2019s best practice for the property attribute to show the resultant behavior."),(0,a.kt)("p",null,"\u5982\u679c block \u5c5e\u6027\u7528 strong \u4fee\u9970\u4f1a\u600e\u4e48\u6837\uff1fARC \u4e0b\uff0cblock \u88ab\u5f3a\u5f15\u7528\u65f6\u4f1a\u81ea\u52a8\u62f7\u8d1d\u5230\u5806\u4e0a\uff1bMRC \u4e0b\uff0c\u81ea\u5df1\u7ba1\u7406\u5185\u5b58\uff1b\u6240\u4ee5\u90fd\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"copy")," \u6ca1\u533a\u522b\u3002"),(0,a.kt)("p",null,"\u54ea\u4e9b\u60c5\u51b5\u4f1a\u81ea\u52a8 copy\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"block \u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c"),(0,a.kt)("li",{parentName:"ul"},"block \u8d4b\u503c\u7ed9 ",(0,a.kt)("inlineCode",{parentName:"li"},"__strong")," \u6307\u9488\uff08\u5373\u5f3a\u5f15\u7528\uff09"),(0,a.kt)("li",{parentName:"ul"},"block \u4f5c\u4e3a Cocoa API \u4e2d\u5e26\u6709 ",(0,a.kt)("inlineCode",{parentName:"li"},"usingBlock")," \u7684\u65b9\u6cd5\u53c2\u6570\u65f6"),(0,a.kt)("li",{parentName:"ul"},"block \u4f5c\u4e3a GCD API \u7684\u65b9\u6cd5\u53c2\u6570\u65f6")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u7f16\u8bd1\u8bbe\u7f6e\u4e3a ARC\nint main(int argc, const char * argv[]) {\n    int apple = 1;\n    void (^block)(void) block = ^{ // \u8d4b\u503c\u7ed9 __strong \u6307\u9488\n        printf("%d", apple);\n    };\n    NSLog(@"%@", [block class]); // __NSMallocBlock__\n    NSLog(@"%@", [^{\n        printf("%d", apple);\n    } class]); // __NSStackBlock__\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"__block-\u4fee\u9970\u7b26"},(0,a.kt)("inlineCode",{parentName:"h2"},"__block")," \u4fee\u9970\u7b26"),(0,a.kt)("p",null,"block \u4e2d\u4fee\u6539\u6355\u83b7\u7684\u53d8\u91cf\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a"),(0,a.kt)("p",null,"\u4e00\u3001\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u6216\u5168\u5c40\u53d8\u91cf\u3002\u4e0a\u9762\u5df2\u7ecf\u5c55\u793a\u8fc7\u4e86\u4e24\u8005\u88ab\u91cd\u5199\u540e\u7684\u4ee3\u7801\u3002"),(0,a.kt)("p",null,"\u4e8c\u3001\u6dfb\u52a0 ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4fee\u9970\u7b26\u3002\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4e0d\u80fd\u7528\u4e8e\u4fee\u9970\u9759\u6001\u53d8\u91cf\u6216\u5168\u5c40\u53d8\u91cf\uff09"),(0,a.kt)("p",null,"\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4fee\u9970\u7684\u53d8\u91cf\uff0c\u4f1a\u88ab\u7f16\u8bd1\u5668\u5305\u88c5\u6210\u4e00\u4e2a OC \u5bf9\u8c61\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"int main(int argc, const char * argv[]) {\n    __block int age = 18;\n    void (^block)(void) block = ^{\n        age++;\n    };\n    block();\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u4e0a\u9762\u4ee3\u7801\u91cd\u5199\u540e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"struct __Block_byref_age_0 {\n    void *__isa; // \u5728 OC \u8bed\u8a00\u91cc\u770b\u5230 isa \u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a OC \u5bf9\u8c61\n    __Block_byref_age_0 *__forwarding;\n    int __flags;\n    int __size;\n    int age; // 18\uff0c\u5916\u90e8\u7684\u503c\u5728\u8fd9\n};\n\nstruct __main_block_impl_0 {\n  struct __block_impl impl;\n  struct __main_block_desc_0* Desc;\n  __Block_byref_age_0 *age; // by ref\n  __main_block_impl_0(void *fp, struct __main_block_desc_0 *desc, __Block_byref_age_0 *_age, int flags=0) : age(_age->__forwarding) {\n    impl.isa = &_NSConcreteStackBlock;\n    impl.Flags = flags;\n    impl.FuncPtr = fp;\n    Desc = desc;\n  }\n};\n\nstatic void __main_block_func_0(struct __main_block_impl_0 *__cself) {\n    __Block_byref_age_0 *age = __cself->age; // bound by ref\n    (age->__forwarding->age)++;\n}\n\nstatic void __main_block_copy_0(struct __main_block_impl_0*dst, struct __main_block_impl_0*src) {_Block_object_assign((void*)&dst->age, (void*)src->age, 8/*BLOCK_FIELD_IS_BYREF*/);}\n\nstatic void __main_block_dispose_0(struct __main_block_impl_0*src) {_Block_object_dispose((void*)src->age, 8/*BLOCK_FIELD_IS_BYREF*/);}\n\nstatic struct __main_block_desc_0 {\n  size_t reserved;\n  size_t Block_size;\n  void (*copy)(struct __main_block_impl_0*, struct __main_block_impl_0*);\n  void (*dispose)(struct __main_block_impl_0*);\n} __main_block_desc_0_DATA = { 0, sizeof(struct __main_block_impl_0), __main_block_copy_0, __main_block_dispose_0};\n\nint main(int argc, const char * argv[]) {\n    __Block_byref_age_0 age = {\n        0,\n        &age, // \u5b58\u4e86\u81ea\u5df1\u7684\u5730\u5740\n        0,\n        sizeof(__Block_byref_age_0),\n        18\n    };\n    dispatch_block_t block = &__main_block_impl_0(__main_block_func_0,\n                                                  &__main_block_desc_0_DATA,\n                                                  &age,\n                                                  570425344);\n    block->FuncPtr(block);\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u4e3a\u4e86\u641e\u6e05\u695a ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4fee\u9970\u540e\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"age")," \u53d8\u91cf\uff0c\u5230\u5e95\u662f\u54ea\u5757\u5185\u5b58\uff0c\u6211\u4eec\u628a\u8f6c\u6362\u540e\u7684\u5e95\u5c42\u7ed3\u6784\u4f53\u5168\u90fd\u632a\u8fc7\u6765\u8c03\u8bd5\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(8785).Z,width:"2704",height:"1064"})),(0,a.kt)("p",null,"\u8fd9\u6837\u5c31\u53d1\u73b0\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"age")," \u7684\u5730\u5740\u5176\u5b9e\u662f\u5e95\u5c42\u7ed3\u6784\u4f53\u5bf9\u8c61\u91cc ",(0,a.kt)("inlineCode",{parentName:"p"},"age")," \u6210\u5458\u7684\u5730\u5740\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 block \u5916\u90e8\u8bbf\u95ee ",(0,a.kt)("inlineCode",{parentName:"p"},"age")," \u65f6\uff0c\u5b9e\u9645\u8bbf\u95ee\u7684\u662f\u5e95\u5c42\u7ed3\u6784\u4f53\u5bf9\u8c61\u91cc\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"age")," \u4e86\u3002"),(0,a.kt)("p",null,"\u524d\u9762\u8bf4\u8fc7\uff0c\u5f53\u6355\u83b7\u7684\u53d8\u91cf\u7c7b\u578b\u662f\u5bf9\u8c61\u800c\u4e0d\u662f\u57fa\u672c\u7c7b\u578b\u65f6\uff0c\u9700\u8981\u5bf9\u6355\u83b7\u7684\u5bf9\u8c61\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\u3002\u8fd9\u91cc\u867d\u7136\u6355\u83b7\u7684\u662f\u57fa\u672c\u7c7b\u578b ",(0,a.kt)("inlineCode",{parentName:"p"},"int"),"\uff0c\u4f46\u7531\u4e8e\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff0c\u56e0\u6b64\u5e95\u5c42\u5c06\u5176\u5305\u88c5\u6210\u4e86\u5bf9\u8c61\uff0c\u540c\u6837\u9700\u8981\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\uff0c\u56e0\u6b64\u4e5f\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"copy")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"dispose")," \u51fd\u6570\u3002\u4e0d\u540c\u7684\u662f\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"_Block_object_assign")," \u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u6355\u83b7\u7684\u662f\u5bf9\u8c61\uff0c\u4f20\u53c2\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"BLOCK_FIELD_IS_OBJECT")),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u6355\u83b7\u7684\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"__block"),"\uff0c\u4f20\u53c2\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"BLOCK_FIELD_IS_BYREF"))),(0,a.kt)("h2",{id:"__forwarding-\u6307\u9488"},(0,a.kt)("inlineCode",{parentName:"h2"},"__forwarding")," \u6307\u9488"),(0,a.kt)("p",null,"\u5f53 block \u4f4d\u4e8e\u6808\u4e0a\u65f6\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"__forwarding")," \u6307\u9488\u6307\u5411\u7684\u5c31\u662f block \u81ea\u5df1\uff1b"),(0,a.kt)("p",null,"\u5f53 block \u88ab\u62f7\u8d1d\u5230\u5806\u4e0a\u540e\uff0c\u6808\u4e0a block \u7684",(0,a.kt)("inlineCode",{parentName:"p"},"__forwarding")," \u4f1a\u6307\u5411\u5806\u533a\u7684 block\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(85584).Z,width:"713",height:"506"})),(0,a.kt)("h2",{id:"\u57fa\u672c\u7c7b\u578b\u4e0e\u5bf9\u8c61\u7c7b\u578b\u88ab-__block-\u4fee\u9970\u7684\u533a\u522b"},"\u57fa\u672c\u7c7b\u578b\u4e0e\u5bf9\u8c61\u7c7b\u578b\u88ab ",(0,a.kt)("inlineCode",{parentName:"h2"},"__block")," \u4fee\u9970\u7684\u533a\u522b"),(0,a.kt)("p",null,"\u57fa\u672c\u7c7b\u578b\u88ab ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4fee\u9970\u540e\u5305\u88c5\u6210\u7ed3\u6784\u4f53\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(31767).Z,width:"2400",height:"1506"})),(0,a.kt)("p",null,"\u5bf9\u8c61\u7c7b\u578b\u88ab ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4fee\u9970\u540e\u5305\u88c5\u6210\u7ed3\u6784\u4f53\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(29964).Z,width:"2288",height:"1324"})),(0,a.kt)("h2",{id:"\u89e3\u51b3\u5faa\u73af\u5f15\u7528"},"\u89e3\u51b3\u5faa\u73af\u5f15\u7528"),(0,a.kt)("h3",{id:"1-weak-strong-dance"},"1. weak-strong dance"),(0,a.kt)("p",null,"weak \u5f15\u7528\u53ef\u4ee5\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\uff0c\u56e0\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"__weak")," \u4fee\u9970\u7684\u53d8\u91cf\u4e0d\u4f1a\u6301\u6709\u5bf9\u8c61\uff0c\u4e00\u65e6\u6307\u5411\u7684\u5bf9\u8c61\u88ab\u91ca\u653e\uff0c\u53d8\u91cf\u5c31\u4f1a\u88ab\u7f6e\u4e3a\u7a7a\u3002"),(0,a.kt)("p",null,"\u4f46 weak \u5f15\u7528\u6709\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u5728 block \u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"weakSelf")," \u6307\u5411\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u88ab\u91ca\u653e\u3002\u4f8b\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'@interface DetailViewController ()\n@property (nonatomic, copy) dispatch_block_t handler;\n@end\n\n@implementation DetailViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    __weak typeof(self) weakSelf = self;\n    self.handler = ^{\n        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            NSLog(@"self is %@", weakSelf);\n        });\n    };\n    self.handler();\n}\n\n- (void)dealloc {\n    NSLog(@"%s", __FUNCTION__);\n}\n@end\n')),(0,a.kt)("p",null,"\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u53eb weak-strong dance\uff0c",(0,a.kt)("strong",{parentName:"p"},"weak-strong dance \u53ef\u4ee5\u4fdd\u8bc1 block \u5728\u88ab\u6267\u884c\u671f\u95f4\uff0c",(0,a.kt)("inlineCode",{parentName:"strong"},"strongSelf")," \u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u91ca\u653e"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'@interface DetailViewController ()\n@property (nonatomic, copy) dispatch_block_t handler;\n@end\n\n@implementation DetailViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    __weak typeof(self) weakSelf = self;\n    self.handler = ^{\n        __strong typeof(weakSelf) strongSelf = weakSelf;\n        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            NSLog(@"self is %@", strongSelf);\n        });\n    };\n    self.handler();\n}\n\n- (void)dealloc {\n    NSLog(@"%s", __FUNCTION__);\n}\n@end\n')),(0,a.kt)("p",null,"\u4f46 weak-strong dance \u4e0d\u4f1a\u963b\u6b62 ",(0,a.kt)("inlineCode",{parentName:"p"},"weakSelf")," \u6307\u5411\u7684\u5bf9\u8c61\u88ab\u91ca\u653e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'@interface DetailViewController ()\n@property (nonatomic, copy) dispatch_block_t handler;\n@end\n\n@implementation DetailViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    __weak typeof(self) weakSelf = self;\n    self.handler = ^{\n        __strong typeof(weakSelf) strongSelf = weakSelf;\n        NSLog(@"self is %@", strongSelf);\n    };\n\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(5.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), self.handler);\n}\n\n- (void)dealloc {\n    NSLog(@"%s", __FUNCTION__);\n}\n@end\n')),(0,a.kt)("p",null,"\u5047\u8bbe\u6267\u884c block \u7684\u65f6\u5019 ",(0,a.kt)("inlineCode",{parentName:"p"},"weakSelf")," \u5df2\u7ecf\u4e3a nil \u4e86\uff0c\u90a3\u4e48 ",(0,a.kt)("inlineCode",{parentName:"p"},"strongSelf")," \u53d8\u91cf\u4e5f\u662f nil\uff1b\u5047\u8bbe\u6267\u884c block \u65f6 ",(0,a.kt)("inlineCode",{parentName:"p"},"weakSelf")," \u4e0d\u4e3a nil\uff0c\u90a3\u4e48 ",(0,a.kt)("inlineCode",{parentName:"p"},"strongSelf")," \u5c31\u4f1a\u5f3a\u5f15\u7528\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u76f4\u5230 block \u6267\u884c\u5b8c\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"strongSelf")," \u53d8\u91cf\u9500\u6bc1\u3002"),(0,a.kt)("p",null,"\u53e6\u5916\uff0c\u4e00\u4e2a\u9898\u5916\u8bdd\uff0c\u5bf9\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"dispatch_after")," \u6765\u8bf4\uff0c\u4e0d\u5b58\u5728\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u4e0d\u7528 weak-strong dance \u90fd\u4e0d\u4f1a\u5185\u5b58\u6cc4\u6f0f\uff0c\u95ee\u9898\u4ec5\u4ec5\u662f\u5ef6\u65f6\u91ca\u653e\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'@interface DetailViewController ()\n@property (nonatomic, copy) dispatch_block_t handler;\n@end\n\n@implementation DetailViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(5.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n        NSLog(@"self is %@", self); // \u7528\u4e0d\u7528 weak-strong dance \u90fd\u4e0d\u4f1a\u9020\u6210\u5faa\u73af\u5f15\u7528\u7684\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\uff0c\u95ee\u9898\u4ec5\u4ec5\u662f\u5ef6\u65f6\u91ca\u653e\u3002\n    });\n}\n\n- (void)dealloc {\n    NSLog(@"%s", __FUNCTION__);\n}\n@end\n')),(0,a.kt)("h3",{id:"2-\u4e34\u65f6\u53d8\u91cf"},"2. \u4e34\u65f6\u53d8\u91cf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)viewDidLoad {\n    [super viewDidLoad];\n    __block BlockViewController* vc = self;\n    self.myBlock = ^{\n        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            NSLog(@"%@", vc.name);\n            vc = nil;\n        });\n    };\n    self.myBlock();\n}\n')),(0,a.kt)("h3",{id:"3-block-\u4f20\u53c2"},"3. block \u4f20\u53c2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)viewDidLoad {\n    [super viewDidLoad];\n    self.myBlock = ^(BlockViewController *vc){\n        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            NSLog(@"%@", vc.name);\n        });\n    };\n    self.myBlock(self);\n}\n')),(0,a.kt)("h2",{id:"\u4ee3\u7801\u793a\u4f8b-1"},"\u4ee3\u7801\u793a\u4f8b 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},'#import "ViewController.h"\n\n@interface ViewController ()\n@property(nonatomic, copy, nullable) void (^printA)(void);\n@property(nonatomic, assign) int a;\n@end\n\n@implementation ViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    self.printA = ^() {\n        // \u5728 block \u91cc\u9762\u4f7f\u7528\u5b9e\u4f8b\u53d8\u91cf\uff0c\u4f1a\u5f3a\u5f15\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u8b66\u544a\n        // Block implicitly retains \'self\'; explicitly mention \'self\' to indicate this is intended behavior\n        NSLog(@"%d", _a);\n\n        // \u5faa\u73af\u5f15\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u8b66\u544a\n        // Capturing \'self\' strongly in this block is likely to lead to a retain cycle\n        NSLog(@"%d", self->_a);\n        NSLog(@"%d", self.a);\n    };\n\n    __weak typeof(self) weakSelf = self;\n    self.printA = ^() {\n        if (weakSelf == nil) {\n            return;\n        }\n        // \u4f7f\u7528 weak \u6307\u9488\u8c03\u7528\u5b9e\u4f8b\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\n        // Dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first\n        NSLog(@"%d", weakSelf->_a);\n        // \u53ef\u4ee5\n        NSLog(@"%d", weakSelf.a);\n    };\n\n    // \u63a8\u8350\u7684\u5199\u6cd5\n    __weak typeof(self) weakSelf = self;\n    self.printA = ^() {\n        __strong typeof(weakSelf) strongSelf = weakSelf;\n        NSLog(@"%d", strongSelf.a);\n    };\n}\n@end\n')),(0,a.kt)("h2",{id:"\u4ee3\u7801\u793a\u4f8b-2"},"\u4ee3\u7801\u793a\u4f8b 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"NSMutableArray *array = [NSMutableArray array];\nvoid(^block)(void) = ^{\n    [array addObject:@123];\n};\nblock();\n")),(0,a.kt)("p",null,"\u8fd9\u91cc\u5bf9 array \u53ea\u662f\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u8d4b\u503c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981 ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u8fdb\u884c\u4fee\u9970\uff1b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"__block NSMutableArray *array = nil;\nvoid(^block)(void) = ^{\n    array = [NSMutableArray array];\n};\nblock();\n")),(0,a.kt)("p",null,"\u8fd9\u91cc\u5c31\u9700\u8981\u5728 array \u7684\u58f0\u660e\u5904\u6dfb\u52a0 ",(0,a.kt)("inlineCode",{parentName:"p"},"__block")," \u4fee\u9970\u7b26\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\u3002"))}p.isMDXComponent=!0},19588:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/blocks_2x-4f8253db57cfc82be622d0a24478193e.png"},85584:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/2D6112C1-3F8C-4DCD-825E-206D6CB68568-850d876555d4f3ba24f65eb171179377.jpeg"},42548:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/41456A7A-79A9-4B65-8D91-E3A2C4DD39B3-9c336b0cd4ac7c382645aff7984a38ca.png"},29964:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/4E05C5A6-D579-4A88-A74F-81E0B7459B39-adfed030ad89c8ea16d7d840fd1dd5bc.png"},42010:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/7E005CA2-855F-4B86-AA77-1D6C4AA59C93-4592f11cda40e6ffd82dcc616bc35607.png"},31767:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/83291357-B4DF-411D-90B5-1D52C0A43ABE-d653c256b9f0d64d33ecb34c9de6f5d6.png"},8785:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/B5941C09-1AC3-40B6-A332-D68C68A6E3BA-05d7c2e97d14b02ae065725a46217a99.png"}}]);