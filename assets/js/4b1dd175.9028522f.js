"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4181],{80763:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var n=a(87462),o=(a(67294),a(3905));a(61839);const i={},s="\u5d29\u6e83",r={unversionedId:"\u5e95\u5c42\u539f\u7406/crash",id:"\u5e95\u5c42\u539f\u7406/crash",title:"\u5d29\u6e83",description:"iOS Crash Dump Analysis, Second Edition",source:"@site/docs/apple/\u5e95\u5c42\u539f\u7406/crash.md",sourceDirName:"\u5e95\u5c42\u539f\u7406",slug:"/\u5e95\u5c42\u539f\u7406/crash",permalink:"/docs/apple/\u5e95\u5c42\u539f\u7406/crash",draft:!1,editUrl:"https://github.com/yianzhou/yianzhou.github.io/docs/apple/\u5e95\u5c42\u539f\u7406/crash.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u542f\u52a8\u65f6\u957f\u4f18\u5316",permalink:"/docs/apple/\u5e95\u5c42\u539f\u7406/app-launch"},next:{title:"\u5361\u987f",permalink:"/docs/apple/\u5e95\u5c42\u539f\u7406/lag"}},l={},c=[{value:"Exception Types",id:"exception-types",level:2},{value:"EXC_BREAKPOINT (SIGTRAP)",id:"exc_breakpoint-sigtrap",level:3},{value:"EXC_BAD_ACCESS (SIGSEGV)",id:"exc_bad_access-sigsegv",level:3},{value:"EXC_CRASH (SIGABRT)",id:"exc_crash-sigabrt",level:3},{value:"EXC_CRASH (SIGKILL)",id:"exc_crash-sigkill",level:3},{value:"EXC_CRASH (SIGQUIT)",id:"exc_crash-sigquit",level:3},{value:"EXC_GUARD",id:"exc_guard",level:3},{value:"EXC_RESOURCE",id:"exc_resource",level:3},{value:"Memory Errors",id:"memory-errors",level:2},{value:"Unrecognized Selector",id:"unrecognized-selector",level:3},{value:"Debug Tools",id:"debug-tools",level:3},{value:"\u5e38\u89c1\u5d29\u6e83\u539f\u56e0",id:"\u5e38\u89c1\u5d29\u6e83\u539f\u56e0",level:2},{value:"\u5d29\u6e83\u76d1\u63a7\u5de5\u5177",id:"\u5d29\u6e83\u76d1\u63a7\u5de5\u5177",level:2},{value:"\u6355\u83b7\u5d29\u6e83",id:"\u6355\u83b7\u5d29\u6e83",level:2},{value:"Crash Report",id:"crash-report",level:2}],p={toc:c};function d(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5d29\u6e83"},"\u5d29\u6e83"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://faisalmemon.github.io/ios-crash-dump-analysis-book/en/"},"iOS Crash Dump Analysis, Second Edition")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/xcode/diagnosing-issues-using-crash-reports-and-device-logs"},"Diagnosing Issues Using Crash Reports and Device Logs"))),(0,o.kt)("h2",{id:"exception-types"},"Exception Types"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/xcode/diagnosing_issues_using_crash_reports_and_device_logs/understanding_the_exception_types_in_a_crash_report?language=objc"},"Understanding the Exception Types in a Crash Report"))),(0,o.kt)("p",null,"\u82f9\u679c\u5b98\u65b9\u5df2\u7ecf\u6709\u660e\u786e\u7684\u5d29\u6e83\u5206\u7c7b\u4e86\uff0c\u6211\u4eec\u6536\u96c6\u4e0a\u6765\u7684\u5d29\u6e83\u4e5f\u662f\u6309\u7167\u4ee5\u4e0b\u7c7b\u578b\u6765\u5206\u7c7b\u7684\uff0c\u8fd9\u4e9b\u5f02\u5e38\u7c7b\u578b\u5b9a\u4e49\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"mach/exception_types.h")," \u91cc\u3002"),(0,o.kt)("h3",{id:"exc_breakpoint-sigtrap"},"EXC_BREAKPOINT (SIGTRAP)"),(0,o.kt)("p",null,"The breakpoint exception type indicates a trace trap interrupted the process. A trace trap gives an attached debugger the chance to interrupt the process at a specific point in its execution. \u65ad\u70b9\u8c03\u8bd5"),(0,o.kt)("p",null,"The Swift runtime uses trace traps for specific types of unrecoverable errors. Swift \u5f3a\u89e3\u5305\u6216\u5f3a\u8f6c\u7c7b\u578b\u3002"),(0,o.kt)("p",null,"Some lower-level libraries, such as Dispatch, trap the process with this exception upon encountering an unrecoverable error. \u5e95\u5c42\u5e93\u4f8b\u5982 Dispatch \u9047\u5230\u7684\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u3002"),(0,o.kt)("p",null,"On x86_64 processors, this appears as EXC_BAD_INSTRUCTION (SIGILL)."),(0,o.kt)("h3",{id:"exc_bad_access-sigsegv"},"EXC_BAD_ACCESS (SIGSEGV)"),(0,o.kt)("p",null,"This is an execute bad access exception, the segment violation signal. A crash due to a memory access issue occurs when an app uses memory in an unexpected way. Memory access problems have numerous causes, such as dereferencing a pointer to an invalid memory address, jumping to an instruction at an invalid address, or writing to read-only memory."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"EXC_BAD_ACCESS")," \u5d29\u6e83\u65f6\u8fd8\u4f1a\u5e26\u6709\u4e00\u4e2a\u9519\u8bef\u7801\uff0c\u5b9a\u4e49\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"mach/kern_return.h")," \u91cc\u3002\u6700\u5e38\u89c1\u7684\u5c31\u662f\u4ee5\u4e0b\u4e24\u79cd\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"KERN_INVALID_ADDRESS"),". Specified address is not currently valid."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"KERN_PROTECTION_FAILURE"),". Specified memory is valid, but does not permit the required forms of access.")),(0,o.kt)("p",null,"\u4ee3\u7801\u590d\u73b0\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},'memcpy(NULL, "Hello", 5); // code=1, address=0x0\nNSLog(@"%@", 1); // code=1, address=0x1\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(67246).Z,width:"1440",height:"264"})),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"#memory-errors"},"Memory Errors"),"."),(0,o.kt)("h3",{id:"exc_crash-sigabrt"},"EXC_CRASH (SIGABRT)"),(0,o.kt)("p",null,"EXC_CRASH (SIGABRT) indicates the process terminated because it received the SIGABRT signal. Typically, this signal is sent because a function in the process called ",(0,o.kt)("inlineCode",{parentName:"p"},"abort()"),", such as when an app encounters an uncaught Objective-C or C++ ",(0,o.kt)("strong",{parentName:"p"},"language exception"),"."),(0,o.kt)("p",null,"Language exceptions, such as those from Objective-C, indicate programming errors discovered at runtime, such as accessing an array with an index that\u2019s out-of-bounds or not implementing a required method of a protocol. \u6570\u7ec4\u8d8a\u754c\u3001\u65b9\u6cd5\u672a\u5b9e\u73b0\u3002"),(0,o.kt)("p",null,"If the API throwing the exception is ",(0,o.kt)("inlineCode",{parentName:"p"},"doesNotRecognizeSelector:"),", the crash may be due to a zombie object. See ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/xcode/diagnosing_issues_using_crash_reports_and_device_logs/identifying_the_cause_of_common_crashes/investigating_crashes_for_zombie_objects?language=objc"},"Investigating Crashes for Zombie Objects")," for additional information."),(0,o.kt)("p",null,"When an ",(0,o.kt)("strong",{parentName:"p"},"app extension")," takes too much time to initialize, the operating system sends a SIGABRT to the app extension process. These crashes include an Exception Subtype field with the value LAUNCH_HANG."),(0,o.kt)("h3",{id:"exc_crash-sigkill"},"EXC_CRASH (SIGKILL)"),(0,o.kt)("p",null,"EXC_CRASH (SIGKILL) indicates the operating system terminated the process. The crash report contains a Termination Reason field with a code that explains the reason for the crash. \u88ab\u7cfb\u7edf\u6740\u6b7b\uff0c\u6709\u5f02\u5e38\u7f16\u7801\uff01"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"0x8badf00d (pronounced \u201cate bad food\u201d). The operating system\u2019s watchdog terminated the app. See Addressing Watchdog Terminations. App \u592a\u4e45\u65e0\u54cd\u5e94\u800c\u88ab watchdog \u6740\u6389\uff01"),(0,o.kt)("li",{parentName:"ul"},"0xdead10cc (pronounced \u201cdead lock\u201d). The operating system terminated the app because it held on to a file lock or SQLite database lock during suspension. \u6b7b\u9501\uff01"),(0,o.kt)("li",{parentName:"ul"},"0xc00010ff (pronounced \u201ccool off\u201d). \u8bbe\u5907\u8fc7\u70ed\uff01"),(0,o.kt)("li",{parentName:"ul"},"0xbaadca11 (pronounced \u201cbad call\u201d). The operating system terminated the app for failing to report a CallKit call in response to a PushKit notification."),(0,o.kt)("li",{parentName:"ul"},"0xbad22222. The operating system terminated a VoIP application because it resumed too frequently.")),(0,o.kt)("p",null,"watchOS \u4e13\u7528\u7684\u5f02\u5e38\u7f16\u7801\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"0xc51bad01. watchOS terminated the app because it used too much CPU time while performing a background task."),(0,o.kt)("li",{parentName:"ul"},"0xc51bad02. watchOS terminated the app because it failed to complete a background task within the allocated time."),(0,o.kt)("li",{parentName:"ul"},"0xc51bad03. The system was sufficiently busy overall that the app may not have received much CPU time to perform the background task.")),(0,o.kt)("h3",{id:"exc_crash-sigquit"},"EXC_CRASH (SIGQUIT)"),(0,o.kt)("p",null,"EXC_CRASH (SIGQUIT) indicates the process terminated at the request of another process with privileges to manage its lifetime.\uff08\u4f8b\u5982\uff1a\u5bbf\u4e3b\u8fdb\u7a0b\u62e5\u6709\u7279\u6743\u53ef\u4ee5\u7ba1\u7406\u952e\u76d8\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\uff09SIGQUIT doesn\u2019t mean that the process crashed, but it likely misbehaved in a detectable manner."),(0,o.kt)("p",null,"With iOS and iPadOS keyboard extensions, the host app terminates the keyboard extension if it takes too long to load. \u952e\u76d8\u8fdb\u7a0b\u88ab\u5bbf\u4e3b\u8fdb\u7a0b\u6740\u6b7b\uff01"),(0,o.kt)("h3",{id:"exc_guard"},"EXC_GUARD"),(0,o.kt)("p",null,"EXC_GUARD indicates the process violated a guarded resource protection. Although there are multiple types of guarded system resources, most guarded resource crashes are from guarded file descriptors. \u5927\u90e8\u5206\u662f\u7531\u4e8e\u64cd\u4f5c\u6587\u4ef6\u53e5\u67c4\u4e0d\u5f53\uff01"),(0,o.kt)("h3",{id:"exc_resource"},"EXC_RESOURCE"),(0,o.kt)("p",null,"EXC_RESOURCE is a notification from the operating system that the process exceeded a resource consumption limit."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"CPU and CPU_FATAL. A thread in the process used too much CPU over a short period of time."),(0,o.kt)("li",{parentName:"ul"},"MEMORY. The process crossed a memory limit imposed by the system."),(0,o.kt)("li",{parentName:"ul"},"IO. The process caused an excessive amount of disk writes over a short period of time."),(0,o.kt)("li",{parentName:"ul"},"WAKEUPS. Threads in the process woke up too many times per second, which consumes battery life. Thread-to-thread communication APIs, such as ",(0,o.kt)("inlineCode",{parentName:"li"},"performSelector:onThread:withObject:waitUntilDone:"),", or ",(0,o.kt)("inlineCode",{parentName:"li"},"dispatch_async"),", cause this when unwittingly called far more often than expected. \u7ebf\u7a0b\u8fc7\u4e8e\u9891\u7e41\u88ab\u5524\u8d77\u3002")),(0,o.kt)("h2",{id:"memory-errors"},"Memory Errors"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/xcode/diagnosing_issues_using_crash_reports_and_device_logs/identifying_the_cause_of_common_crashes/investigating_memory_access_crashes?language=objc"},"Investigating Memory Access Crashes"))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"EXC_BAD_ACCESS")," \u6700\u5e38\u89c1\u7684\u60c5\u51b5\u5c31\u662f\u91ce\u6307\u9488\uff08\u5411\u4e00\u4e2a\u5df2\u7ecf\u91ca\u653e\u7684\u5bf9\u8c61\u53d1\u9001\u6d88\u606f\uff09\uff0c\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7684\u5c42\u9762\u8bf4\uff0c\u5f53\u5bf9\u8c61\u88ab\u91ca\u653e\u540e\uff0c\u5b83\u5728\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u5757\uff0c\u53ef\u80fd\u88ab\u56de\u6536\u3001\u590d\u5199\uff0c\u8fd9\u65f6\u518d\u5bf9\u5b83\u8fdb\u884c\u8bbf\u95ee\u5c31\u662f\u975e\u6cd5\u7684\u3002"),(0,o.kt)("p",null,"Once an Objective-C or Swift object no longer has any strong references to it, the object is deallocated. Attempting to further send messages to the object as if it were still a valid object is a \u201cuse after free\u201d issue, with the deallocated object still receiving messages called a ",(0,o.kt)("strong",{parentName:"p"},"zombie object"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2018/414/"},"WWDC 2018 - Understanding Crashes and Crash Logs"))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(13633).Z,width:"2560",height:"1434"})),(0,o.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u5411\u5df2\u91ca\u653e\u7684\u5bf9\u8c61\u53d1\u9001\u6d88\u606f\u7684\u4f8b\u5b50\u3002\u5982\u4f55\u770b\u51fa\u6765\u7684\u5462\uff1fThis particular bad value \"0x7fdd5e70700\" looks like it's inside the address range for the malloc memory allocator (0x7fdd5e400000 - 0x7fdd5e800000), but it's been ",(0,o.kt)("strong",{parentName:"p"},"shifted/rotated by 4 bits"),".\uff08\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u3001\u518d\u79fb\u4f4d\u8fd0\u7b97\uff0c\u53ef\u7528\u7cfb\u7edf\u8ba1\u7b97\u5668\u64cd\u4f5c\u9a8c\u8bc1\uff09"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Bit Rotation: A rotation (or circular shift) is an operation similar to shift except that the bits that fall off at one end are put back to the other end. In left rotation, the bits that fall off at left end are put back at right end. In right rotation, the bits that fall off at right end are put back at left end.")),(0,o.kt)("p",null,"\u5bf9\u8c61\u662f\u5982\u4f55\u88ab\u91ca\u653e\u7684\uff1aWhen the free function deletes an object it inserts it into a free list of other dead objects. It writes a rotated pointer into the object's ",(0,o.kt)("inlineCode",{parentName:"p"},"isa")," field to make sure that the value written there is not a valid memory address precisely so that bad use of the object will crash."),(0,o.kt)("p",null,"\u5f53\u8fd9\u4e2a\u5df2\u88ab\u91ca\u653e\u7684\u5bf9\u8c61\u518d\u6b21\u88ab\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u5b83\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"isa")," \u6307\u9488\u5730\u5740\u662f\u4e00\u4e2a\u88ab\u65cb\u8f6c\u4e86\u7684\u3001\u975e\u6cd5\u7684\u6307\u9488\u5730\u5740\uff0c\u5c31\u4f1a\u89e6\u53d1\u5d29\u6e83\u3002The memory allocator did that for us, it deliberately rotated that pointer to make sure we would crash if we tried to use it again."),(0,o.kt)("p",null,"\u90a3\u4e48\u80fd\u5426\u627e\u5230\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"LoginViewController")," \u7684\u54ea\u4e2a\u5c5e\u6027\u63a5\u6536\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"objc_release"),' \u6d88\u606f\u5bfc\u81f4\u5d29\u6e83\u5462\uff1fWe can see a +42 where the file and line number would\'ve been. And the +42 is our clue because the +42 is an offset in the assembly code of the function. We can use lldb. We can find the address of the ivar destroyer function "0x1000022ea" and disassemble it.'),(0,o.kt)("h3",{id:"unrecognized-selector"},"Unrecognized Selector"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-log"},"Application Specific Information:\n*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason:\n'-[NSURL _isResizable]: unrecognized selector sent to instance 0x280742c40'\n")),(0,o.kt)("p",null,"Another common memory error symptom is an unrecognized selector exception. These are often caused when you have an object of some type, a code that is using that object, and then the object gets deallocated and used again. It sounds like that we will get what we saw in that previous crash log - malloc free list signature. But in this case, a new object is allocated at the same address where the old object used to be. So when the code tries to call a function on the old object, we have a different object of a different type at that same address and it doesn't recognize that function at all and we get an unrecognized selector exception."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},"[self performSelector:@selector(forceToCloseXxxx)];\n")),(0,o.kt)("p",null,"\u901a\u8fc7\u7ed9 ",(0,o.kt)("inlineCode",{parentName:"p"},"NSObject")," \u6dfb\u52a0\u5206\u7c7b\uff0c\u4ecb\u5165",(0,o.kt)("strong",{parentName:"p"},"\u6d88\u606f\u8f6c\u53d1\u6d41\u7a0b"),"\uff0c\u53ef\u4ee5\u5e94\u5bf9\u8fd9\u79cd\u5d29\u6e83\u3002",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jasenhuang/NSObjectSafe"},"NSObjectSafe")," \u6709\u76f8\u5173\u5b9e\u73b0\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},"+ (void)load {\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        swizzleInstanceMethod([NSObject class], @selector(methodSignatureForSelector:), @selector(hookMethodSignatureForSelector:));\n        swizzleInstanceMethod([NSObject class], @selector(forwardInvocation:), @selector(hookForwardInvocation:));\n    });\n}\n")),(0,o.kt)("h3",{id:"debug-tools"},"Debug Tools"),(0,o.kt)("p",null,"Xcode contains a suite of debugging tools you can use to identify memory access issues as your app runs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Address Sanitizer")," for memory corruption bugs"),(0,o.kt)("li",{parentName:"ul"},"Undefined Behavior Sanitizer"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Thread Sanitizer")," for multithreading problems")),(0,o.kt)("p",null,"For difficult-to-diagnose memory access crashes, the malloc debugging features, such as ",(0,o.kt)("strong",{parentName:"p"},"Guard Malloc"),", can help."),(0,o.kt)("p",null,"You enable these tools through the Xcode scheme editor."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(70866).Z,width:"1832",height:"990"})),(0,o.kt)("p",null,"If your app contains code in Objectice-C, C, or C++, run the static analyzer, and fix all issues it discovers."),(0,o.kt)("h2",{id:"\u5e38\u89c1\u5d29\u6e83\u539f\u56e0"},"\u5e38\u89c1\u5d29\u6e83\u539f\u56e0"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u91ce\u6307\u9488\uff1a\u5411\u5df2\u7ecf\u91ca\u653e\u7684\u5bf9\u8c61\u53d1\u9001\u6d88\u606f"),(0,o.kt)("li",{parentName:"ul"},"\u7ed9\u6570\u7ec4\u6216\u96c6\u5408\u6dfb\u52a0 nil\u3001\u5b57\u5178\u7684 key \u4e3a nil"),(0,o.kt)("li",{parentName:"ul"},"\u6570\u7ec4\u8d8a\u754c"),(0,o.kt)("li",{parentName:"ul"},"\u5728\u5b50\u7ebf\u7a0b\u4e2d\u8fdb\u884c UI \u66f4\u65b0\u53ef\u80fd\u4f1a\u53d1\u751f\u5d29\u6e83"),(0,o.kt)("li",{parentName:"ul"},"\u591a\u7ebf\u7a0b\u95ee\u9898\uff1a\u591a\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u53d6\u64cd\u4f5c\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u7f6e\u7a7a\u6570\u636e\u7684\u540c\u65f6\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8bfb\u53d6\u8fd9\u4e2a\u6570\u636e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5d29\u6e83\u60c5\u51b5"),(0,o.kt)("li",{parentName:"ul"},"\u4e3b\u7ebf\u7a0b\u5361\u987f/\u65e0\u54cd\u5e94\uff1a\u5982\u679c\u4e3b\u7ebf\u7a0b\u8d85\u8fc7\u7cfb\u7edf\u89c4\u5b9a\u7684\u65f6\u95f4\u65e0\u54cd\u5e94\uff0c\u5c31\u4f1a\u88ab Watchdog \u6740\u6389"),(0,o.kt)("li",{parentName:"ul"},"\u5185\u5b58\u6d88\u8017\u8fc7\u9ad8\uff08OOM\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u540e\u53f0\u4efb\u52a1\u8d85\u65f6")),(0,o.kt)("h2",{id:"\u5d29\u6e83\u76d1\u63a7\u5de5\u5177"},"\u5d29\u6e83\u76d1\u63a7\u5de5\u5177"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Xcode - Organizer\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u5229\u7528\u5f00\u6e90\u6846\u67b6\u6536\u96c6\u5806\u6808\u4fe1\u606f\uff0c\u81ea\u5df1\u90e8\u7f72\u670d\u52a1\u5668\u76d1\u63a7\u3002\u5982 ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/microsoft/plcrashreporter"},"PLCrashReporter")," \u548c ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/kstenerud/KSCrash"},"KSCrash"),"\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u53cb\u76df\u3001Firebase\u3001Bugly\uff0c\u63d0\u4f9b\u96c6\u6210 SDK \u53ca\u5206\u6790\u670d\u52a1\u3002")),(0,o.kt)("h2",{id:"\u6355\u83b7\u5d29\u6e83"},"\u6355\u83b7\u5d29\u6e83"),(0,o.kt)("p",null,"\u793a\u4f8b\u4ee3\u7801\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Haley-Wong/RunLoopDemos/tree/master/RunLoopDemo04/RunLoopDemo04"},"https://github.com/Haley-Wong/RunLoopDemos/tree/master/RunLoopDemo04/RunLoopDemo04")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)setCatchExceptionHandler\n{\n    // 1.\u6355\u83b7\u4e00\u4e9b\u5f02\u5e38\u5bfc\u81f4\u7684\u5d29\u6e83\n    NSSetUncaughtExceptionHandler(&HandleException);\n\n    // 2.\u6355\u83b7\u975e\u5f02\u5e38\u60c5\u51b5\uff0c\u901a\u8fc7 signal \u4f20\u9012\u51fa\u6765\u7684\u5d29\u6e83\n    signal(SIGSEGV, handleSignalException);\n    signal(SIGFPE, handleSignalException);\n    signal(SIGBUS, handleSignalException);\n    signal(SIGPIPE, handleSignalException);\n    signal(SIGHUP, handleSignalException);\n    signal(SIGINT, handleSignalException);\n    signal(SIGQUIT, handleSignalException);\n    signal(SIGABRT, handleSignalException);\n    signal(SIGILL, handleSignalException);\n}\n")),(0,o.kt)("p",null,"\u6355\u83b7\u65b9\u6cd5\u76ee\u524d\u53ea\u53ef\u4ee5\u6267\u884c\u4e00\u6b21\uff0c\u4e0b\u6b21\u89e6\u53d1\u5d29\u6e83\u540e\uff0c\u4f1a\u8df3\u8fc7\u6355\u83b7\u65b9\u6cd5\uff0c\u76f4\u63a5\u5d29\u6e83\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)handleException:(NSException *)exception\n{\n    // \u5d29\u6e83\u4fe1\u606f\u8bb0\u5f55\u3001\u4e0a\u4f20\n    // \u56de\u5230\u7a0b\u5e8f\u4e3b\u9875\u9762\uff0c\u201c\u8d77\u6b7b\u56de\u751f\u201d\n    // \u5f3a\u5236\u8fd0\u884c RunLoop\n    // ...\n}\n")),(0,o.kt)("h2",{id:"crash-report"},"Crash Report"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2016/720/?time=257"},"WWDC 2016 - Concurrent Programming With GCD in Swift 3"))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(92041).Z,width:"2560",height:"1316"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2018/414/"},"WWDC 2018 - Understanding Crashes and Crash Logs"))),(0,o.kt)("p",null,'And if you upload an app that contains bitcode you should use the "Xcode - Organizer - Archives - Download Debug Symbols" to download any dSYMs that come from a store-side bitcode compilation.'))}d.isMDXComponent=!0},70866:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/00EB4311-ABEE-4DFD-A9E5-9885978821E8-b2f8dfed10f0e17a22c66fbf6492827c.png"},92041:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2f5c3f44-66b4-464a-9e0c-a1f94ac23d4a-7a291714d6a2324af05fe0d760d4fced.png"},13633:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/7b28d32a-f07b-4ab7-907c-f9422132fd53-5686ac0b191993ff6e77b5a938175611.png"},67246:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/C93290DE-203F-4B7F-A300-6C68D207C142-5f7e428e4af7568a6d9c8e3e70f6508d.png"}}]);