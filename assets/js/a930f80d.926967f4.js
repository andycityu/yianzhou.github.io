"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8535],{62600:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var l=n(87462),i=(n(67294),n(3905));n(61839);const a={},o="UIKit",r={unversionedId:"\u4ee3\u7801/uikit",id:"\u4ee3\u7801/uikit",title:"UIKit",description:"Masonry",source:"@site/docs/apple/\u4ee3\u7801/uikit.md",sourceDirName:"\u4ee3\u7801",slug:"/\u4ee3\u7801/uikit",permalink:"/docs/apple/\u4ee3\u7801/uikit",draft:!1,editUrl:"https://github.com/yianzhou/yianzhou.github.io/docs/apple/\u4ee3\u7801/uikit.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UIImage",permalink:"/docs/apple/\u4ee3\u7801/uiimage"},next:{title:"\u5305\u4f53\u5927\u5c0f\u4f18\u5316",permalink:"/docs/apple/\u5de5\u5177/app-size"}},s={},d=[{value:"Masonry",id:"masonry",level:2},{value:"UIViewController \u81ea\u5b9a\u4e49\u89c6\u56fe",id:"uiviewcontroller-\u81ea\u5b9a\u4e49\u89c6\u56fe",level:2},{value:"UITableView",id:"uitableview",level:2},{value:"-UITableView setTableFooterView:",id:"-uitableview-settablefooterview",level:2},{value:"UITableView \u9009\u4e2d\u6001",id:"uitableview-\u9009\u4e2d\u6001",level:2},{value:"UIScrollView \u5d4c\u5957",id:"uiscrollview-\u5d4c\u5957",level:2},{value:"\u6269\u5927\u6309\u94ae\u70b9\u51fb\u533a\u57df",id:"\u6269\u5927\u6309\u94ae\u70b9\u51fb\u533a\u57df",level:2},{value:"\u6309\u94ae\u8bbe\u7f6e\u6807\u9898\u4f1a\u95ea",id:"\u6309\u94ae\u8bbe\u7f6e\u6807\u9898\u4f1a\u95ea",level:2},{value:"\u91cd\u547d\u540d\u5f39\u7a97",id:"\u91cd\u547d\u540d\u5f39\u7a97",level:2},{value:"YYText",id:"yytext",level:2},{value:"UIImage",id:"uiimage",level:2}],c={toc:d};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"uikit"},"UIKit"),(0,i.kt)("h2",{id:"masonry"},"Masonry"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"NSArray *buttons = @[ button1, button2 ];\n[buttons mas_makeConstraints:^(MASConstraintMaker *make) {\n    make.centerY.mas_equalTo(0);\n    make.height.mas_equalTo(60);\n}];\n[buttons mas_distributeViewsAlongAxis:MASAxisTypeHorizontal withFixedSpacing:30 leadSpacing:30 tailSpacing:30];\n")),(0,i.kt)("h2",{id:"uiviewcontroller-\u81ea\u5b9a\u4e49\u89c6\u56fe"},"UIViewController \u81ea\u5b9a\u4e49\u89c6\u56fe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"- (void)loadView {\n    [super loadView];\n    self.bgView = [[FileView alloc] initWithFrame:self.view.bounds];\n    self.view = self.bgView;\n}\n")),(0,i.kt)("h2",{id:"uitableview"},"UITableView"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectZero style:UITableViewStyleGrouped];\nself.tableView = tableView;\n[self.view addSubview:tableView];\ntableView.delegate = self;\ntableView.dataSource = self;\ntableView.showsVerticalScrollIndicator = NO;\ntableView.separatorStyle = UITableViewCellSeparatorStyleNone;\ntableView.bounces = YES;\ntableView.allowsMultipleSelectionDuringEditing = YES;\ntableView.estimatedRowHeight = 72;\ntableView.directionalLockEnabled = YES;\ntableView.rowHeight = UITableViewAutomaticDimension;\ntableView.delaysContentTouches = NO;\ntableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;\n[tableView registerClass:[FileFieldLocalDocCell class] forCellReuseIdentifier:[FileFieldLocalDocCell identifier]];\n[tableView registerClass:[FileFieldOnlineFolderCell class] forCellReuseIdentifier:[FileFieldOnlineFolderCell identifier]];\n[tableView registerClass:[FileFieldOnlineDocCell class] forCellReuseIdentifier:[FileFieldOnlineDocCell identifier]];\ntableView.backgroundColor = [UIColor clearColor];\n// \u957f\u6309\u8fdb\u5165\u7f16\u8f91\u6001\nUILongPressGestureRecognizer *recognizer = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPressAction:)];\n[tableView addGestureRecognizer:recognizer];\n#ifdef __IPHONE_15_0\n    if (@available(iOS 15.0, *)) {\n        tableView.sectionHeaderTopPadding = 0;\n    }\n#endif\n")),(0,i.kt)("h2",{id:"-uitableview-settablefooterview"},"-","[UITableView setTableFooterView:]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"}," // \u5bbd\u9ad8\u8981\u7ed9\u4e2a\u6700\u5c0f\u503c\uff0c\u4e0d\u7136\u7684\u8bdd\u9ad8\u5ea6\u5c31\u4f1a\u53d8\u6210\u9ed8\u8ba4\u7684 35\uff0c\u5bfc\u81f4\u5934\u90e8\u7a7a\u51fa\u4e00\u6bb5\u8ddd\u79bb\nUIView *emptyView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, CGFLOAT_MIN, CGFLOAT_MIN)];\n[self.tableView setTableFooterView:emptyView];\n")),(0,i.kt)("h2",{id:"uitableview-\u9009\u4e2d\u6001"},"UITableView \u9009\u4e2d\u6001"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"// \u5982\u679c\u6709\u5df2\u9009\u4e2d\u7684cell\uff0c\u5219\u5148\u8bb0\u4f4f\u8def\u5f84\u3001\u518dreloadData\u3001\u518d\u91cd\u65b0\u9009\u4e2d\uff0c\u8ba9\u5b83\u4eec\u4fdd\u6301\u4f4f\u539f\u672c\u7684\u9009\u4e2d\u72b6\u6001\nNSArray<NSIndexPath *> *indexPaths = [self.tableView indexPathsForSelectedRows];\n[self.tableView reloadData];\nif (self.tableView.isEditing && indexPaths.count > 0) {\n    for (NSIndexPath *indexPath in indexPaths) {\n        [self.tableView selectRowAtIndexPath:indexPath animated:NO scrollPosition:UITableViewScrollPositionNone];\n    }\n}\n")),(0,i.kt)("h2",{id:"uiscrollview-\u5d4c\u5957"},"UIScrollView \u5d4c\u5957"),(0,i.kt)("p",null,"\u4e0a\u4e0b\u6ed1\u52a8\u65f6\u5de6\u53f3\u4e0d\u80fd\u6ed1\u52a8\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="FileScrollView.h"',title:'"FileScrollView.h"'},"@protocol FileScrollViewDelegate <NSObject>\n\n- (BOOL)fileScrollView:(FileScrollView *)scrollView\n    shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer;\n\n@end\n\n@interface FileScrollView : UIScrollView\n\n@property (nonatomic, weak) id<FileScrollViewDelegate> delegate;\n\n@end\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="FileScrollView.m"',title:'"FileScrollView.m"'},"- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer\n    shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {\n    // \u8fd4\u56deYES\u7684\u8bdd\uff0c\u6ed1\u52a8\u4e8b\u4ef6\u4f1a\u968f\u7740\u54cd\u5e94\u94fe\u4f20\u9012\uff0c\u672c\u5c42\u548c\u4e0a\u5c42\u5171\u540c\u5904\u7406\uff1b\u8fd4\u56deNo\u7684\u8bdd\u5219\u53ea\u5728\u672c\u5c42\u5904\u7406\u3002\n    if ([self.delegate respondsToSelector:@selector(fileScrollView:shouldRecognizeSimultaneouslyWithGestureRecognizer:)]) {\n        return [self.delegate fileScrollView:self shouldRecognizeSimultaneouslyWithGestureRecognizer:otherGestureRecognizer];\n    }\n    return NO;\n}\n")),(0,i.kt)("h2",{id:"\u6269\u5927\u6309\u94ae\u70b9\u51fb\u533a\u57df"},"\u6269\u5927\u6309\u94ae\u70b9\u51fb\u533a\u57df"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="ExpandAreaButton.h"',title:'"ExpandAreaButton.h"'},"#import <UIKit/UIKit.h>\n\nNS_ASSUME_NONNULL_BEGIN\n\n@interface ExpandAreaButton : UIButton\n\n/// \u9700\u8981\u6269\u5927\u7684\u77e9\u5f62\u54cd\u5e94\u533a\u57df\n- (instancetype)initWithExpandInsets:(UIEdgeInsets)expandInsets;\n\n/// \u9700\u8981\u54cd\u5e94\u7684\u5706\u5f62\u533a\u57df\uff0c\u4ee5UIButton\u7684center\u4e3a\u5706\u5fc3\n- (instancetype)initWithExpandRadius:(CGFloat)expandRadius;\n\n@end\n\nNS_ASSUME_NONNULL_END\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="ExpandAreaButton.m"',title:'"ExpandAreaButton.m"'},'#import "ExpandAreaButton.h"\n\n@interface ExpandAreaButton ()\n\n/// \u9700\u8981\u6269\u5927\u7684\u54cd\u5e94\u533a\u57df\n@property (nonatomic, assign) UIEdgeInsets expandInsets;\n\n/// \u4ee5UIButton\u7684center\u4e3a\u4e2d\u5fc3,radius\u4e3a\u534a\u5f84\u7684\u54cd\u5e94\u533a\u57df\n@property (nonatomic, assign) CGFloat expandRadius;\n\n@end\n\n@implementation ExpandAreaButton\n\n- (instancetype)initWithExpandInsets:(UIEdgeInsets)expandInsets {\n    self = [super init];\n    if (self) {\n        self.expandInsets = expandInsets;\n    }\n    return self;\n}\n\n- (instancetype)initWithExpandRadius:(CGFloat)expandRadius {\n    self = [super init];\n    if (self) {\n        self.expandRadius = expandRadius;\n    }\n    return self;\n}\n\n- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {\n    CGRect buttonBounds = self.bounds;\n    if (self.expandRadius > 0) {\n        CGPoint ivCenter = CGPointMake((buttonBounds.origin.x + buttonBounds.size.width) / 2, (buttonBounds.origin.y + buttonBounds.size.height) / 2);\n        double dx = fabs(point.x - ivCenter.x);\n        double dy = fabs(point.y - ivCenter.y);\n        double distance = hypot(dx, dy); # returns the square root of the sum of squares of its arguments\n        return distance <= self.expandRadius;\n    } else {\n        buttonBounds.origin.x -= self.expandInsets.left;\n        buttonBounds.origin.y -= self.expandInsets.top;\n        buttonBounds.size.width += self.expandInsets.left + self.expandInsets.right;\n        buttonBounds.size.height += self.expandInsets.top + self.expandInsets.bottom;\n        return CGRectContainsPoint(buttonBounds, point);\n    }\n}\n')),(0,i.kt)("h2",{id:"\u6309\u94ae\u8bbe\u7f6e\u6807\u9898\u4f1a\u95ea"},"\u6309\u94ae\u8bbe\u7f6e\u6807\u9898\u4f1a\u95ea"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"// \u5148\u8bbe\u7f6elabel\uff0c\u518d\u8bbe\u7f6etitle\uff0c\u5426\u5219\u4f1a\u95ea\u70c1\u4e00\u4e0b\nself.selectButton.titleLabel.text = title;\n[self.selectButton setTitle:title forState:UIControlStateNormal];\n")),(0,i.kt)("h2",{id:"\u91cd\u547d\u540d\u5f39\u7a97"},"\u91cd\u547d\u540d\u5f39\u7a97"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"\u91cd\u547d\u540d" message:@""\n                                                                      preferredStyle:UIAlertControllerStyleAlert];\n[alertController addTextFieldWithConfigurationHandler:^(UITextField *_Nonnull textField) {\n    textField.placeholder = @"\u6587\u4ef6\u540d";\n    textField.text = file.title;\n}];\nDefineWeakSelfBeforeBlock();\nUIAlertAction *confirmAction = [UIAlertAction actionWithTitle:@"\u786e\u8ba4" style:UIAlertActionStyleDefault handler:^(UIAlertAction *_Nonnull action) {\n    DefineStrongSelfInBlock(sSelf);\n    [sSelf doRenameWithText:[alertController textFields].firstObject.text onlineFile:file completion:completion];\n}];\n[alertController addAction:confirmAction];\nUIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"\u53d6\u6d88" style:UIAlertActionStyleCancel handler:^(UIAlertAction *_Nonnull action) {\n    BLOCK_SAFE_EXEC(completion, NO, YES);\n}];\n[alertController addAction:cancelAction];\n[viewController presentViewController:alertController animated:YES completion:^{\n    UITextField *textField = [alertController textFields].firstObject;\n    // \u5168\u9009\u6587\u672c\uff0c\u7ed9\u975e\u7a7a\u5bf9\u8c61\u4f1a\u5f39\u51fa\u83dc\u5355\uff0c\u7ed9\u7a7a\u5bf9\u8c61\u4e0d\u4f1a\u5f39\u51fa\u83dc\u5355\n    [textField selectAll:nil];\n}];\n')),(0,i.kt)("h2",{id:"yytext"},"YYText"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"+ (void)yyLabel:(YYLabel *)label setText:(NSString *)text {\n    label.attributedText = nil;\n    // \u8bbe\u7f6e\u4e86YYLabel\u7684attributedText\u5c5e\u6027\u540e\uff0c\u518d\u8bbe\u7f6etext\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u6837\u5f0f\u624d\u884c\n    label.textColor = UIColor.blackColor;\n    label.font = [UIFont systemFontOfSize:12.0];\n    label.numberOfLines = 0;\n    label.userInteractionEnabled = YES;\n    label.textAlignment = NSTextAlignmentCenter;\n    label.text = text;\n}\n\n+ (void)yyLabel:(YYLabel *)label setText:(NSString *)text highlightText:(NSString *)highlightText {\n    label.text = nil;\n    NSMutableAttributedString *attributedString = [[NSMutableAttributedString alloc] initWithString:text];\n    NSRange range = [text rangeOfString:highlightText];\n    attributedString.yy_color = UIColor.blackColor;\n    // clang-format off\n    [attributedString yy_setTextHighlightRange:range\n                                         color:UIColor.blackColor\n                               backgroundColor:UIColor.clearColor\n                                     tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {\n        [manager showLoginOrAuthView];\n    }];\n    // clang-format on\n    label.attributedText = attributedString;\n    // YYLabel \u7684\u5751\uff0c\u8bbe\u7f6e\u4e86 attributedText \u9700\u518d\u6b21\u8bbe\u7f6e textAlignment \u624d\u80fd\u751f\u6548\n    label.textAlignment = NSTextAlignmentCenter;\n}\n")),(0,i.kt)("h2",{id:"uiimage"},"UIImage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"- (UIImage *)imageFromImage:(UIImage *)image inRect:(CGRect)rect {\n    CGImageRef sourceImageRef = [image CGImage];\n    CGImageRef newImageRef = CGImageCreateWithImageInRect(sourceImageRef, rect);\n    UIImage *newImage = [UIImage imageWithCGImage:newImageRef];\n    return newImage;\n}\n\n- (void)saveToPath:(NSString *)filePath {\n    if (filePath.length == 0) {\n        return;\n    }\n    @autoreleasepool {\n        CFURLRef url = (__bridge CFURLRef)[NSURL fileURLWithPath:filePath];\n        CGImageDestinationRef destination = CGImageDestinationCreateWithURL(url, kUTTypePNG, 1, NULL);\n        CGImageDestinationAddImage(destination, [self CGImage], nil);\n        CFRelease(destination);\n    }\n}\n")))}u.isMDXComponent=!0}}]);