"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8832],{18684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(87462),l=(n(67294),n(3905));n(61839);const i={},a="Flutter Engine",o={unversionedId:"flutter-engine",id:"flutter-engine",title:"Flutter Engine",description:"\u4ee3\u7801\u89e3\u91ca",source:"@site/docs/flutter/flutter-engine.md",sourceDirName:".",slug:"/flutter-engine",permalink:"/docs/flutter/flutter-engine",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dart Concurrency",permalink:"/docs/flutter/flutter-concurrency"},next:{title:"Flutter Errors",permalink:"/docs/flutter/flutter-error"}},u={},p=[{value:"\u4ee3\u7801\u89e3\u91ca",id:"\u4ee3\u7801\u89e3\u91ca",level:2},{value:"\u542f\u52a8\u6d41\u7a0b",id:"\u542f\u52a8\u6d41\u7a0b",level:2},{value:"\u5f15\u64ce\u521d\u59cb\u5316",id:"\u5f15\u64ce\u521d\u59cb\u5316",level:2},{value:"\u5f15\u64ce\u8fd0\u884c",id:"\u5f15\u64ce\u8fd0\u884c",level:2}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"flutter-engine"},"Flutter Engine"),(0,l.kt)("h2",{id:"\u4ee3\u7801\u89e3\u91ca"},"\u4ee3\u7801\u89e3\u91ca"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"namespace fml"),': In the Flutter framework, the "fml" namespace refers to the ',(0,l.kt)("strong",{parentName:"p"},"Flutter Markup Language"),". FML is a declarative language for building Flutter UIs that is similar to HTML and XML. It is used to define the structure and layout of UI elements in a Flutter app."),(0,l.kt)("p",null,"\u4ec0\u4e48\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"scoped_nsobject<>"),"\uff1f\u4e3a\u4ec0\u4e48\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"FlutterViewController.mm")," \u91cc\u9762\u4e0d\u76f4\u63a5\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"FlutterView *_flutterView")," \u800c\u8981\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"fml::scoped_nsobject<FlutterView> _flutterView;"),"\uff1f"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"scoped_nsobject<>")," \u7684\u8bbe\u8ba1\u6a21\u4eff\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"scoped_ptr<>"),"\uff0c\u5e76\u4fdd\u6301\u4e86\u7c7b\u4f3c\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u4e8e\u5f00\u53d1\u8005\u4f7f\u7528\u3002\u8fd9\u4f7f\u5f97\u5728 Objective-C \u73af\u5883\u4e2d\uff0c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"scoped_nsobject<>")," \u53ef\u4ee5\u65b9\u4fbf\u5730\u7ba1\u7406 ",(0,l.kt)("inlineCode",{parentName:"p"},"NSObject")," \u5b50\u7c7b\u5bf9\u8c61\u7684\u5185\u5b58\uff0c\u800c\u4e0d\u9700\u8981\u624b\u52a8\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"retain")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"release")," \u65b9\u6cd5\u3002"),(0,l.kt)("h2",{id:"\u542f\u52a8\u6d41\u7a0b"},"\u542f\u52a8\u6d41\u7a0b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-mermard"},"")),(0,l.kt)("h2",{id:"\u5f15\u64ce\u521d\u59cb\u5316"},"\u5f15\u64ce\u521d\u59cb\u5316"),(0,l.kt)("p",null,"\u4e0a\u5c42\u8c03\u7528\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"[[FlutterEngine alloc] +[CocoaHotReload run]:name project:nil allowHeadlessExecution:NO];")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='FlutterEngine.mm'",title:"'FlutterEngine.mm'"},"- (instancetype)initWithName:(NSString*)labelPrefix\n                     project:(FlutterDartProject*)project\n      allowHeadlessExecution:(BOOL)allowHeadlessExecution\n          restorationEnabled:(BOOL)restorationEnabled {\n  _binaryMessenger = [[FlutterBinaryMessengerRelay alloc] initWithParent:self]; // self\u5373FlutterEngine\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FlutterBinaryMessengerRelay")," \u662f\u4ec0\u4e48\uff1f",(0,l.kt)("inlineCode",{parentName:"p"},"FlutterBinaryMessengerRelay : NSObject <FlutterBinaryMessenger>")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FlutterBinaryMessenger")," \u534f\u8bae\u662f\u4f9b native \u548c flutter \u901a\u4fe1\u4f7f\u7528\u7684\uff0c\u5176\u5b9e\u73b0\u6709\u4e09\u79cd\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"FlutterBasicMessageChannel"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"FlutterMethodChannel"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"FlutterEventChannel")),(0,l.kt)("h2",{id:"\u5f15\u64ce\u8fd0\u884c"},"\u5f15\u64ce\u8fd0\u884c"),(0,l.kt)("p",null,"\u4e0a\u5c42\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"+[FlutterEngine run]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='FlutterEngine.mm'",title:"'FlutterEngine.mm'"},"- (BOOL)runWithEntrypoint:(NSString*)entrypoint\n               libraryURI:(NSString*)libraryURI\n             initialRoute:(NSString*)initialRoute\n           entrypointArgs:(NSArray<NSString*>*)entrypointArgs {\n  if ([self createShell:entrypoint libraryURI:libraryURI initialRoute:initialRoute]) {\n    [self launchEngine:entrypoint libraryURI:libraryURI entrypointArgs:entrypointArgs];\n  }\n  return _shell != nullptr;\n}\n\n- (BOOL)createShell:(NSString*)entrypoint\n         libraryURI:(NSString*)libraryURI\n       initialRoute:(NSString*)initialRoute {\n    [self setupShell:std::move(shell)\n        withObservatoryPublication:settings.enable_observatory_publication];\n}\n")))}d.isMDXComponent=!0}}]);