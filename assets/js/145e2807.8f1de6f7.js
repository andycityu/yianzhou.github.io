"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2479],{13227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));n(61839);const r={},o="AVFoundation",l={unversionedId:"\u97f3\u89c6\u9891\u3001\u56fe\u5f62/avfoundation",id:"\u97f3\u89c6\u9891\u3001\u56fe\u5f62/avfoundation",title:"AVFoundation",description:"authorizationStatusForMediaType",source:"@site/docs/apple/\u97f3\u89c6\u9891\u3001\u56fe\u5f62/avfoundation.md",sourceDirName:"\u97f3\u89c6\u9891\u3001\u56fe\u5f62",slug:"/\u97f3\u89c6\u9891\u3001\u56fe\u5f62/avfoundation",permalink:"/docs/apple/\u97f3\u89c6\u9891\u3001\u56fe\u5f62/avfoundation",draft:!1,editUrl:"https://github.com/yianzhou/yianzhou.github.io/docs/apple/\u97f3\u89c6\u9891\u3001\u56fe\u5f62/avfoundation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u97f3\u89c6\u9891\u57fa\u7840\u77e5\u8bc6",permalink:"/docs/apple/\u97f3\u89c6\u9891\u3001\u56fe\u5f62/audio-video"},next:{title:"Core Animation",permalink:"/docs/apple/\u97f3\u89c6\u9891\u3001\u56fe\u5f62/core-animation"}},s={},p=[{value:"\u64ad\u653e\u548c\u5f55\u5236\u97f3\u9891",id:"\u64ad\u653e\u548c\u5f55\u5236\u97f3\u9891",level:2},{value:"\u97f3\u9891\u4f1a\u8bdd",id:"\u97f3\u9891\u4f1a\u8bdd",level:3},{value:"\u64ad\u653e\u97f3\u9891",id:"\u64ad\u653e\u97f3\u9891",level:3},{value:"\u97f3\u9891\u5f55\u5236",id:"\u97f3\u9891\u5f55\u5236",level:3},{value:"\u8d44\u6e90\u548c\u5143\u6570\u636e",id:"\u8d44\u6e90\u548c\u5143\u6570\u636e",level:2},{value:"\u5a92\u4f53\u6765\u6e90",id:"\u5a92\u4f53\u6765\u6e90",level:3},{value:"UIImagePickerController",id:"uiimagepickercontroller",level:4},{value:"NSURL",id:"nsurl",level:4},{value:"PhotoKit",id:"photokit",level:4},{value:"Media Library",id:"media-library",level:4},{value:"\u5f02\u6b65\u8f7d\u5165\u8d44\u6e90\u5c5e\u6027",id:"\u5f02\u6b65\u8f7d\u5165\u8d44\u6e90\u5c5e\u6027",level:3},{value:"\u5a92\u4f53\u5143\u6570\u636e",id:"\u5a92\u4f53\u5143\u6570\u636e",level:3},{value:"\u4f8b\u5b50\uff1aMetaManager",id:"\u4f8b\u5b50metamanager",level:3},{value:"\u4fdd\u5b58\u5143\u6570\u636e",id:"\u4fdd\u5b58\u5143\u6570\u636e",level:3},{value:"\u64ad\u653e\u89c6\u9891",id:"\u64ad\u653e\u89c6\u9891",level:2},{value:"\u5feb\u901f\u64ad\u653e",id:"\u5feb\u901f\u64ad\u653e",level:3},{value:"CMTime",id:"cmtime",level:3},{value:"\u4f8b\u5b50\uff1a\u89c6\u9891\u64ad\u653e\u5668",id:"\u4f8b\u5b50\u89c6\u9891\u64ad\u653e\u5668",level:3},{value:"\u521b\u5efa\u89c6\u9891\u7f29\u7565\u56fe",id:"\u521b\u5efa\u89c6\u9891\u7f29\u7565\u56fe",level:3},{value:"\u663e\u793a\u5b57\u5e55",id:"\u663e\u793a\u5b57\u5e55",level:3},{value:"\u7ae0\u8282",id:"\u7ae0\u8282",level:3},{value:"\u6355\u6349\u5a92\u4f53",id:"\u6355\u6349\u5a92\u4f53",level:2},{value:"AVCaptureSession",id:"avcapturesession",level:3},{value:"\u9884\u89c8\u89c6\u56fe",id:"\u9884\u89c8\u89c6\u56fe",level:3},{value:"\u542f\u52a8\u548c\u505c\u6b62\u4f1a\u8bdd",id:"\u542f\u52a8\u548c\u505c\u6b62\u4f1a\u8bdd",level:3},{value:"\u5207\u6362\u6444\u50cf\u5934",id:"\u5207\u6362\u6444\u50cf\u5934",level:3},{value:"\u914d\u7f6e\u6355\u6349\u8bbe\u5907",id:"\u914d\u7f6e\u6355\u6349\u8bbe\u5907",level:3},{value:"\u62cd\u6444\u9759\u6001\u56fe\u7247",id:"\u62cd\u6444\u9759\u6001\u56fe\u7247",level:3},{value:"\u89c6\u9891\u6355\u6349",id:"\u89c6\u9891\u6355\u6349",level:3},{value:"\u9ad8\u7ea7\u6355\u6349\u529f\u80fd",id:"\u9ad8\u7ea7\u6355\u6349\u529f\u80fd",level:2},{value:"\u89c6\u9891\u7f29\u653e",id:"\u89c6\u9891\u7f29\u653e",level:3},{value:"\u4eba\u8138\u68c0\u6d4b",id:"\u4eba\u8138\u68c0\u6d4b",level:3},{value:"\u673a\u5668\u53ef\u8bfb\u4ee3\u7801\u8bc6\u522b",id:"\u673a\u5668\u53ef\u8bfb\u4ee3\u7801\u8bc6\u522b",level:3},{value:"\u9ad8\u5e27\u7387\u6355\u6349",id:"\u9ad8\u5e27\u7387\u6355\u6349",level:3},{value:"\u5b9e\u65f6\u6355\u6349\u4e0e\u6e32\u67d3",id:"\u5b9e\u65f6\u6355\u6349\u4e0e\u6e32\u67d3",level:3},{value:"\u8bfb\u53d6\u548c\u5199\u5165\u5a92\u4f53",id:"\u8bfb\u53d6\u548c\u5199\u5165\u5a92\u4f53",level:2},{value:"\u5b9e\u65f6\u6355\u6349\u5199\u5165",id:"\u5b9e\u65f6\u6355\u6349\u5199\u5165",level:3},{value:"\u5a92\u4f53\u7ec4\u5408\u4e0e\u7f16\u8f91",id:"\u5a92\u4f53\u7ec4\u5408\u4e0e\u7f16\u8f91",level:2},{value:"\u6df7\u5408\u97f3\u9891",id:"\u6df7\u5408\u97f3\u9891",level:2},{value:"\u89c6\u9891\u8fc7\u6e21\u6548\u679c",id:"\u89c6\u9891\u8fc7\u6e21\u6548\u679c",level:2}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"avfoundation"},"AVFoundation"),(0,i.kt)("p",null,"authorizationStatusForMediaType"),(0,i.kt)("p",null,"AVFoundation Stack on iOS:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-60",src:n(50656).Z,width:"1048",height:"612"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/tapharmonic/Learning-AV-Foundation"},"Learning-AV-Foundation \u793a\u4f8b\u4ee3\u7801")),(0,i.kt)("h2",{id:"\u64ad\u653e\u548c\u5f55\u5236\u97f3\u9891"},"\u64ad\u653e\u548c\u5f55\u5236\u97f3\u9891"),(0,i.kt)("h3",{id:"\u97f3\u9891\u4f1a\u8bdd"},"\u97f3\u9891\u4f1a\u8bdd"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioSession")," \u5728\u5e94\u7528\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u626e\u6f14\u4e86\u4e2d\u95f4\u4eba\u7684\u89d2\u8272\u3002",(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/avfoundation/avaudiosession/category"},(0,i.kt)("inlineCode",{parentName:"a"},"AVAudioSessionCategory"))," \u5b9a\u4e49\u4e86 7 \u79cd\u5206\u7c7b\u6765\u63cf\u8ff0\u5e94\u7528\u7a0b\u5e8f\u7684\u97f3\u9891\u884c\u4e3a\u3002"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Category"),(0,i.kt)("th",{parentName:"tr",align:null},"\u662f\u5426\u88ab\u9501\u5c4f\u548c\u9759\u97f3\u5f00\u5173\u9759\u97f3"),(0,i.kt)("th",{parentName:"tr",align:null},"\u662f\u5426\u5141\u8bb8\u6df7\u97f3"),(0,i.kt)("th",{parentName:"tr",align:null},"\u97f3\u9891\u8f93\u5165"),(0,i.kt)("th",{parentName:"tr",align:null},"\u97f3\u9891\u8f93\u51fa"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"ambient"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"soloAmbient\uff08\u9ed8\u8ba4\uff09"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"playback"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"record"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"playAndRecord"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"multiRoute"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705")))),(0,i.kt)("p",null,"\u97f3\u9891\u4f1a\u8bdd\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u4e2d\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4f46\u901a\u5e38\u6211\u4eec\u53ea\u5bf9\u5176\u914d\u7f6e\u4e00\u6b21\uff0c\u6700\u4f73\u4f4d\u7f6e\u5c31\u662f\u5728\u542f\u52a8\u65f6\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    AVAudioSession *session = [AVAudioSession sharedInstance];\n    NSError *error;\n    if (![session setCategory:AVAudioSessionCategoryPlayback error:&error]) {\n        NSLog(@"Category Error: %@", [error localizedDescription]);\n    }\n    if (![session setActive:YES error:&error]) {\n        NSLog(@"Activation Error: %@", [error localizedDescription]);\n    }\n    return YES;\n}\n')),(0,i.kt)("p",null,"\u60f3\u8981\u5728\u540e\u53f0\u64ad\u653e\u97f3\u9891\uff0c\u9664\u4e86\u8bbe\u7f6e\u5408\u9002\u7684\u97f3\u9891\u4f1a\u8bdd\u5916\uff0c\u9700\u8981\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"Info.plist")," \u91cc\u9762\u589e\u52a0\u914d\u7f6e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<key>UIBackgroundModes</key>\n<array>\n    <string>audio</string>\n</array>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioPlayer")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioRecorder")," \u90fd\u6784\u5efa\u4e8e ",(0,i.kt)("inlineCode",{parentName:"p"},"CoreAudio")," \u4e4b\u4e0a\uff0c\u63d0\u4f9b\u4e86\u97f3\u9891\u64ad\u653e\u548c\u8bb0\u5f55\u7684\u529f\u80fd\u3002"),(0,i.kt)("h3",{id:"\u64ad\u653e\u97f3\u9891"},"\u64ad\u653e\u97f3\u9891"),(0,i.kt)("p",null,"\u521b\u5efa ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioPlayer"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (AVAudioPlayer *)playerForFile:(NSString *)name {\n    NSURL *fileURL = [[NSBundle mainBundle] URLForResource:name withExtension:@"caf"]; // \u4f8b\u5b50\u4e2d\u7684\u6587\u4ef6\u540e\u7f00\u540d\u662f "caf"\n    NSError *error;\n    AVAudioPlayer *player = [[AVAudioPlayer alloc] initWithContentsOfURL:fileURL error:&error];\n    if (player) {\n        player.numberOfLoops = -1; // loop indefinitely\n        player.enableRate = YES; // \u53ef\u8c03\u8282\u64ad\u653e\u901f\u7387\n        [player prepareToPlay]; // \u8fd9\u6837\u505a\u4f1a\u53d6\u5f97\u9700\u8981\u7684\u97f3\u9891\u786c\u4ef6\u3001\u5e76\u9884\u52a0\u8f7d AudioQueue \u7684\u7f13\u51b2\u533a\uff0c\u53ef\u964d\u4f4e\u8c03\u7528 play \u65b9\u6cd5\u5230\u542c\u5230\u58f0\u97f3\u8f93\u51fa\u7684\u5ef6\u65f6\n    } else {\n        NSLog(@"Error creating player: %@", [error localizedDescription]);\n    }\n    return player;\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-[AVAudioPlayer stop]")," \u4f1a\u64a4\u9500 ",(0,i.kt)("inlineCode",{parentName:"p"},"prepareToPlay")," \u4e2d\u6240\u505a\u7684\u8bbe\u7f6e\uff0c\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"pause")," \u65b9\u6cd5\u4e0d\u4f1a\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"volumn")," \u5c5e\u6027\u662f\u64ad\u653e\u5668\u7684\u97f3\u91cf\uff0c\u4ece 0.0\uff08\u9759\u97f3\uff09\u5230 1.0\uff08\u6700\u5927\uff0c\u9ed8\u8ba4\u503c\uff09\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pan")," \u5c5e\u6027\u662f\u7acb\u4f53\u58f0\u5e73\u79fb\uff0c\u4ece -1.0\uff08\u5168\u5de6\u58f0\u9053\uff09\u5230 1.0\uff08\u5168\u53f3\u58f0\u9053\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a 0.0 \uff08\u5c45\u4e2d\uff09\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"rate")," \u5c5e\u6027\u662f\u64ad\u653e\u901f\u7387\uff0c\u4ece 0.5 \u5230 2.0\uff0c\u9ed8\u8ba4 1.0\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"numberOfLoops")," \u5c5e\u6027\u4ee3\u8868\u5faa\u73af\u6b21\u6570\uff0c-1 \u4ee3\u8868\u65e0\u9650\u5faa\u73af\u3002MP3 \u97f3\u9891\u8981\u5b9e\u73b0\u65e0\u7f1d\u5faa\u73af\uff0c\u9700\u8981\u7279\u6b8a\u5de5\u5177\u8fdb\u884c\u5904\u7406\uff0c\u901a\u5e38\u5efa\u8bae\u4f7f\u7528 AAC\u3002"),(0,i.kt)("p",null,"\u672c\u8282\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e09\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioPlayer")," \u7684\u5b9e\u4f8b\uff0c\u5206\u522b\u64ad\u653e\u5409\u4ed6\u3001\u8d1d\u65af\u3001\u9f13\u7684\u58f0\u97f3\u3002\u4e3a\u4e86\u4f7f\u4e09\u4e2a\u64ad\u653e\u5668\u5b9e\u4f8b\u7684\u64ad\u653e\u7d27\u5bc6\u540c\u6b65\uff0c\u9700\u8981\u6355\u6349\u8bbe\u5907\u7684\u65f6\u95f4\u5e76\u589e\u52a0\u4e00\u4e2a\u5c0f\u7684\u5ef6\u65f6\uff0c\u8ba9\u4e09\u4e2a\u5b9e\u4f8b\u6309\u7167\u8fd9\u4e2a\u53c2\u7167\u65f6\u95f4\u5f00\u59cb\u64ad\u653e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)play {\n    if (!self.playing) {\n        NSTimeInterval delayTime = [self.players[0] deviceCurrentTime] + 0.01;\n        for (AVAudioPlayer *player in self.players) {\n            [player playAtTime:delayTime];\n        }\n        self.playing = YES;\n    }\n}\n")),(0,i.kt)("p",null,"\u505c\u6b62\u64ad\u653e\u65f6\uff0c\u5f00\u53d1\u8005\u53ef\u80fd\u8fd8\u9700\u8981\u8bbe\u7f6e ",(0,i.kt)("inlineCode",{parentName:"p"},"currentTime")," \u5c5e\u6027\u4e3a 0.0f\uff0c\u4ee5\u8ba9\u64ad\u653e\u8fdb\u5ea6\u56de\u5230\u539f\u70b9\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)stop {\n    if (self.playing) {\n        for (AVAudioPlayer *player in self.players) {\n            [player stop];\n            player.currentTime = 0.0f;\n        }\n        self.playing = NO;\n    }\n}\n")),(0,i.kt)("p",null,"\u97f3\u9891\u4f1a\u8bdd\u7684\u4e2d\u65ad\u5728\u624b\u673a\u7cfb\u7edf\u4e0a\u5f88\u5e38\u89c1\uff0c\u4f8b\u5982\u7535\u8bdd\u547c\u5165\u3001\u95f9\u949f\u54cd\u8d77\u3001FaceTime \u8bf7\u6c42\u7b49\u60c5\u51b5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"// \u5904\u7406\u4e2d\u65ad\u4e8b\u4ef6\uff0c\u9996\u5148\u9700\u8981\u6ce8\u518c\u4e2d\u65ad\u7684\u901a\u77e5\nNSNotificationCenter *nsnc = [NSNotificationCenter defaultCenter];\n[nsnc addObserver:self\n         selector:@selector(handleInterruption:)\n             name:AVAudioSessionInterruptionNotification\n           object:[AVAudioSession sharedInstance]];\n\n- (void)handleInterruption:(NSNotification *)notification {\n    NSDictionary *info = notification.userInfo;\n    // \u901a\u77e5\u7684\u5b57\u5178\u91cc\u6709\u9644\u5e26\u4e2d\u65ad\u7684\u4fe1\u606f\uff0c\u901a\u8fc7\u5408\u9002\u7684 key \u53d6\u51fa\u6765\n    AVAudioSessionInterruptionType type = [info[AVAudioSessionInterruptionTypeKey] unsignedIntegerValue]; // \u4e2d\u65ad\u7c7b\u578b\n    if (type == AVAudioSessionInterruptionTypeBegan) {\n        // \u5b9e\u9645\u4e0a\u5f53\u63a5\u6536\u5230\u901a\u77e5\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u97f3\u9891\u4f1a\u8bdd\u5df2\u7ecf\u88ab\u7ec8\u6b62\uff0cplayer \u5b9e\u4f8b\u5904\u4e8e\u6682\u505c\u72b6\u6001\uff0c\u8c03\u7528 stop \u65b9\u6cd5\u53ea\u662f\u505a\u5185\u90e8\u72b6\u6001\u66f4\u65b0\uff0c\u5e76\u4e0d\u80fd\u505c\u6b62\u64ad\u653e\u3002\n        [self stop];\n        if (self.delegate) {\n            [self.delegate playbackStopped];\n        }\n    } else {\n        // \u5f53\u4e2d\u65ad\u7ed3\u675f\u540e\uff0c\u5b57\u5178\u4f1a\u5305\u542b\u4fe1\u606f\uff0c\u8868\u793a\u97f3\u9891\u4f1a\u8bdd\u662f\u5426\u5df2\u91cd\u65b0\u6fc0\u6d3b\u3001\u662f\u5426\u53ef\u4ee5\u518d\u6b21\u64ad\u653e\n        AVAudioSessionInterruptionOptions options = [info[AVAudioSessionInterruptionOptionKey] unsignedIntegerValue];\n        if (options == AVAudioSessionInterruptionOptionShouldResume) {\n            [self play];\n            if (self.delegate) {\n                [self.delegate playbackBegan];\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"\u5728 iOS \u8bbe\u5907\u4e0a\u6dfb\u52a0\u6216\u79fb\u9664\u97f3\u9891\u8f93\u5165\u3001\u8f93\u51fa\u7ebf\u8def\u65f6\uff0c\u4f1a\u53d1\u751f\u7ebf\u8def\u6539\u53d8\u4e8b\u4ef6\u3002\u4e0e\u4e2d\u65ad\u4e8b\u4ef6\u4e00\u6837\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u5904\u7406\u597d\u4e86\u67d0\u4e9b\u573a\u666f\uff0c\u4f46\u6211\u4eec\u4e5f\u9700\u8981\u786e\u4fdd\u5bf9\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u5904\u7406\u662f\u7b26\u5408\u6211\u4eec\u9700\u8981\u7684\u3002\u8fd9\u91cc\u6211\u4eec\u5904\u7406\u7684\u662f\uff0c\u5f53\u7528\u6237\u62d4\u51fa\u8033\u673a\u65f6\uff0c\u6b63\u5728\u64ad\u653e\u7684\u5185\u5bb9\u5e0c\u671b\u4fdd\u5bc6\u6216\u4e0d\u6253\u6270\u5230\u5468\u56f4\uff0c\u9700\u8981\u505c\u6b62\u64ad\u653e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"// \u5904\u7406\u7ebf\u8def\u6539\u53d8\u4e8b\u4ef6\uff0c\u9996\u5148\u9700\u8981\u6ce8\u518c\u901a\u77e5\nNSNotificationCenter *nsnc = [NSNotificationCenter defaultCenter];\n[nsnc addObserver:self\n         selector:@selector(handleRouteChange:)\n             name:AVAudioSessionRouteChangeNotification\n           object:[AVAudioSession sharedInstance]];\n\n- (void)handleRouteChange:(NSNotification *)notification {\n    NSDictionary *info = notification.userInfo;\n    AVAudioSessionRouteChangeReason reason = [info[AVAudioSessionRouteChangeReasonKey] unsignedIntValue];\n    if (reason == AVAudioSessionRouteChangeReasonOldDeviceUnavailable) {\n        AVAudioSessionRouteDescription *previousRoute = info[AVAudioSessionRouteChangePreviousRouteKey];\n        AVAudioSessionPortDescription *previousOutput = previousRoute.outputs[0]; // \u627e\u8f93\u51fa\u63a5\u53e3\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8bbe\u5907\n        NSString *portType = previousOutput.portType;\n        if ([portType isEqualToString:AVAudioSessionPortHeadphones]) {\n            [self stop];\n            [self.delegate playbackStopped];\n        }\n    }\n}\n")),(0,i.kt)("h3",{id:"\u97f3\u9891\u5f55\u5236"},"\u97f3\u9891\u5f55\u5236"),(0,i.kt)("p",null,"\u60f3\u8981\u5f55\u5236\u97f3\u9891\uff0c\u9700\u8981\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"Info.plist")," \u91cc\u9762\u589e\u52a0\u914d\u7f6e\uff0c\u9996\u6b21\u8bbf\u95ee\u9ea6\u514b\u98ce\u4f1a\u8be2\u95ee\u7528\u6237\u540c\u610f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<key>NSMicrophoneUsageDescription</key>\n<string>To record memo.</string>\n")),(0,i.kt)("p",null,"\u521b\u5efa ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioRecorder")," \u5b9e\u4f8b\uff1a"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVFormatIDKey")," \u662f\u5199\u5165\u5185\u5bb9\u7684\u97f3\u9891\u683c\u5f0f\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"kAudioFormatLinearPCM")," \u662f\u672a\u538b\u7f29\u683c\u5f0f\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"kAudioFormatMPEG4AAC")," \u662f\u6700\u5e38\u7528\u7684 AAC \u683c\u5f0f\u3002\u6ce8\u610f\uff0c\u6307\u5b9a\u7684\u97f3\u9891\u683c\u5f0f\u4e00\u5b9a\u8981\u548c\u6587\u4ef6\u7c7b\u578b\u76f8\u517c\u5bb9\uff01"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVSampleRateKey")," \u662f\u91c7\u6837\u7387\u3002\u5f00\u53d1\u8005\u5e94\u8be5\u5c3d\u91cf\u4f7f\u7528\u6807\u51c6\u91c7\u6837\u7387\uff0c\u6bd4\u5982 8000\u300116000\u300122050\u300144100\uff08CD \u97f3\u8d28\u91c7\u6837\u7387\uff09\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVNumberOfChannelsKey")," \u662f\u901a\u9053\u6570\u3002\u9ed8\u8ba4\u503c 1 \u4ee3\u8868\u5355\u58f0\u9053\u5f55\u5236\uff1b\u8bbe\u7f6e\u4e3a 2 \u4ee3\u8868\u7acb\u4f53\u58f0\u5f55\u5236\u3002\u9664\u975e\u4f7f\u7528\u5916\u63a5\u8bbe\u5907\uff0c\u5426\u5219\u901a\u5e38\u9009\u62e9\u5355\u58f0\u9053\u5f55\u97f3\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'NSString *tmpDir = NSTemporaryDirectory();\nNSString *filePath = [tmpDir stringByAppendingPathComponent:@"memo.caf"];\nNSURL *fileURL = [NSURL fileURLWithPath:filePath];\nNSDictionary *settings = @{\n    AVFormatIDKey : @(kAudioFormatAppleIMA4),\n    AVSampleRateKey : @44100.0f,\n    AVNumberOfChannelsKey : @1,\n    AVEncoderBitDepthHintKey : @16,\n    AVEncoderAudioQualityKey : @(AVAudioQualityMedium)\n}\nNSError *error;\nself.recorder = [[AVAudioRecorder alloc] initWithURL:fileURL settings:settings error:&error];\nif (self.recorder) {\n    self.recorder.delegate = self;\n    self.recorder.meteringEnabled = YES; // \u5141\u8bb8\u5bf9\u97f3\u91cf\u8fdb\u884c\u6d4b\u91cf\n    [self.recorder prepareToRecord];\n} else {\n    NSLog(@"Error: %@", [error localizedDescription]);\n}\n')),(0,i.kt)("p",null,"\u5f00\u59cb\u5f55\u5236 ",(0,i.kt)("inlineCode",{parentName:"p"},"-[AVAudioRecorder record]"),"\uff0c\u6682\u505c\u5f55\u5236 ",(0,i.kt)("inlineCode",{parentName:"p"},"-[AVAudioRecorder pause]"),"\uff0c\u505c\u6b62\u5f55\u5236 ",(0,i.kt)("inlineCode",{parentName:"p"},"-[AVAudioRecorder stop]"),"\u3002\u505c\u6b62\u5f55\u5236\u540e\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioRecorder")," \u56de\u8c03\u59d4\u6258\u65b9\u6cd5\u901a\u77e5\u4ee3\u7406\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u56de\u8c03\u91cc\u5904\u7406\u5f55\u97f3\u6587\u4ef6\u7684\u4fdd\u5b58\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)saveRecordingWithName:(NSString *)name completionHandler:(THRecordingSaveCompletionHandler)handler {\n    NSTimeInterval timestamp = [NSDate timeIntervalSinceReferenceDate];\n    NSString *filename = [NSString stringWithFormat:@"%@-%f.m4a", name, timestamp];\n    NSString *docsDir = [self documentsDirectory];\n    NSString *destPath = [docsDir stringByAppendingPathComponent:filename];\n    NSURL *srcURL = self.recorder.url;\n    NSURL *destURL = [NSURL fileURLWithPath:destPath];\n    NSError *error;\n    BOOL success = [[NSFileManager defaultManager] copyItemAtURL:srcURL toURL:destURL error:&error];\n    if (success) {\n        handler(YES, [THMemo memoWithTitle:name url:destURL]); // \u56de\u4f20\u6570\u636e\u6a21\u578b\n        [self.recorder prepareToRecord];\n    } else {\n        handler(NO, error);\n    }\n}\n\n- (NSString *)documentsDirectory {\n    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\n    return [paths objectAtIndex:0];\n}\n')),(0,i.kt)("p",null,"\u6211\u4eec\u5e0c\u671b\u5c55\u793a\u7ed9\u7528\u6237\u5f55\u5236\u7684\u65f6\u95f4\u3002\u5c5e\u6027 ",(0,i.kt)("inlineCode",{parentName:"p"},"currentTime")," \u7ecf\u8fc7\u4e00\u5b9a\u7684\u683c\u5f0f\u5316\u5904\u7406\u53ef\u4ee5\u7528\u4e8e\u5c55\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (NSString *)formattedCurrentTime {\n    NSUInteger time = (NSUInteger)self.recorder.currentTime;\n    NSInteger hours = (time / 3600);\n    NSInteger minutes = (time / 60) % 60;\n    NSInteger seconds = time % 60;\n    NSString *format = @"%02i:%02i:%02i";\n    return [NSString stringWithFormat:format, hours, minutes, seconds];\n}\n')),(0,i.kt)("p",null,"\u5982\u4f55\u5b9e\u65f6\u66f4\u65b0\u663e\u793a\u65f6\u95f4\uff0c\u4f60\u53ef\u80fd\u60f3\u7528 KVO\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\u5e76\u4e0d\u53ef\u4ee5\uff0c\u56e0 ",(0,i.kt)("inlineCode",{parentName:"p"},"currentTime")," \u5c5e\u6027\u662f\u4e0d\u53ef\u89c1\u7684\u3002\u8fd9\u91cc\u9700\u8981\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"NSTimer")," \u6309\u7167\u4e00\u5b9a\u65f6\u95f4\u95f4\u9694\u8f6e\u8be2\u503c\u5e76\u66f4\u65b0\u754c\u9762\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)startTimer { // \u5f00\u59cb\u5f55\u5236\u65f6\u8c03\u7528\n    [self.timer invalidate];\n    self.timer = [NSTimer timerWithTimeInterval:0.5 // \u8fd9\u91cc\u6211\u4eec 0.5 \u79d2\u8f6e\u8be2\u4e00\u6b21\n                                         target:self\n                                       selector:@selector(updateTimeDisplay)\n                                       userInfo:nil\n                                        repeats:YES];\n    [[NSRunLoop mainRunLoop] addTimer:self.timer forMode:NSRunLoopCommonModes];\n}\n\n- (void)stopTimer { // \u6682\u505c\u3001\u505c\u6b62\u5f55\u5236\u65f6\u8c03\u7528\n    [self.timer invalidate];\n    self.timer = nil;\n}\n")),(0,i.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u5e0c\u671b\u80fd\u5c06\u6355\u6349\u5230\u7684\u4fe1\u53f7\u4ee5\u53ef\u89c6\u5316\u7684\u5f62\u5f0f\u8868\u73b0\u51fa\u6765\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioRecorder")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioPlayer")," \u90fd\u53ef\u4ee5\u5bf9\u97f3\u91cf\u8fdb\u884c\u6d4b\u91cf\u3002"),(0,i.kt)("p",null,"\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"averagePowerForChannel:")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"peakPowerForChannel:")," \u65b9\u6cd5\u83b7\u5f97\u7684\u8bfb\u6570\uff0c\u662f\u4e00\u4e2a\u63cf\u8ff0\u97f3\u91cf\u7b49\u7ea7\u7684\u5bf9\u6570\u5355\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4ece\u6700\u5927\u5206\u8d1d\u7684 0 (full scale\uff09\u5230\u6700\u5c0f\u5206\u8d1d\u6216\u9759\u97f3\u7684 -160dB\u3002\u6211\u4eec\u60f3\u5728\u7528\u6237\u754c\u9762\u4e0a\u5c55\u793a\u97f3\u91cf\u5927\u5c0f\uff0c\u9700\u8981\u628a\u8fd9\u4e2a\u503c\u8f6c\u5316\u4e3a 0 - 1 \u4e4b\u95f4\u7684\u503c\u3002\u4f8b\u5b50\u4e2d\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"THMeterTable")," \u5b8c\u6210\u4e86\u8fd9\u90e8\u5206\u5de5\u4f5c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"- (THLevelPair *)levels {\n    [self.recorder updateMeters]; // \u5728\u8bfb\u53d6\u5f53\u524d\u7b49\u7ea7\u503c\u524d\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u4ee5\u4fdd\u8bc1\u83b7\u53d6\u5230\u7684\u662f\u6700\u65b0\u7684\u6570\u636e\n    float avgPower = [self.recorder averagePowerForChannel:0]; // \u5355\u58f0\u9053\u5f55\u5236\uff0c\u83b7\u53d6\u901a\u9053 0 \u7684\u97f3\u91cf\n    float peakPower = [self.recorder peakPowerForChannel:0];\n    float linearLevel = [self.meterTable valueForPower:avgPower]; // \u5c06\u97f3\u91cf\u7b49\u7ea7\u8f6c\u6362\u4e3a 0 - 1 \u4e4b\u95f4\u7684\u503c\n    float linearPeak = [self.meterTable valueForPower:peakPower];\n    return [THLevelPair levelsWithLevel:linearLevel peakLevel:linearPeak]; // \u8fd4\u56de\u6570\u636e\u6a21\u578b\n}\n")),(0,i.kt)("p",null,"\u540c\u6837\u7528\u5b9a\u65f6\u5668\u8f6e\u8be2\u97f3\u91cf\u7b49\u7ea7\u503c\uff0c\u8fd9\u91cc\u4e3a\u4e86\u4f7f\u97f3\u91cf\u503c\u5237\u65b0\u7684\u52a8\u753b\u6548\u679c\u66f4\u52a0\u5e73\u6ed1\uff0c\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"CADisplayLink")," \u4ee5\u83b7\u5f97\u4e0e\u5c4f\u5e55\u5237\u65b0\u540c\u6b65\u7684\u56de\u8c03\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)startMeterTimer {\n    [self.levelTimer invalidate];\n    self.levelTimer = [CADisplayLink displayLinkWithTarget:self\n                                                  selector:@selector(updateMeter)];\n    self.levelTimer.frameInterval = 5;\n    [self.levelTimer addToRunLoop:[NSRunLoop currentRunLoop]\n                          forMode:NSRunLoopCommonModes];\n}\n")),(0,i.kt)("h2",{id:"\u8d44\u6e90\u548c\u5143\u6570\u636e"},"\u8d44\u6e90\u548c\u5143\u6570\u636e"),(0,i.kt)("p",null,"\u6709\u522b\u4e8e\u4f20\u7edf\u9762\u5411\u6587\u4ef6\u7684\u97f3\u9891\u7c7b\uff0cAVFoundation \u628a\u6240\u6709\u7684\u4ee3\u7801\u8bbe\u8ba1\u56f4\u7ed5\u7740\u201c\u8d44\u6e90\u201d\u8fdb\u884c\uff0c\u6700\u6838\u5fc3\u7684\u7c7b\u5c31\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset"),"\uff01"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u3002\u7b2c\u4e00\uff0c\u5b83\u63d0\u4f9b\u4e86\u5bf9\u57fa\u672c\u5a92\u4f53\u683c\u5f0f\u7684\u62bd\u8c61\uff0c\u5f00\u53d1\u8005\u4e0d\u9700\u8003\u8651\u4e0d\u540c\u7684\u7f16\u7801\u548c\u5bb9\u5668\u683c\u5f0f\u7ec6\u8282\uff0c\u53ea\u9700\u9762\u5bf9\u201c\u8d44\u6e90\u201d\u8fd9\u4e00\u6982\u5ff5\uff1b\u7b2c\u4e8c\uff0c\u5b83\u5c4f\u853d\u4e86\u8d44\u6e90\u4f4d\u7f6e\u7684\u7ec6\u8282\uff0c\u4e0d\u7ba1\u8d44\u6e90\u662f\u5728\u5e94\u7528\u7a0b\u5e8f bundle\u3001\u6c99\u76d2\u6587\u4ef6\u5939\u3001\u7528\u6237\u97f3\u4e50\u5e93\u6216\u8fdc\u7a0b\u97f3\u9891\u6d41\uff0c\u5f00\u53d1\u8005\u90fd\u53ef\u4ee5\u5408\u7406\u5730\u83b7\u53d6\u548c\u8f7d\u5165\u5a92\u4f53\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u672c\u8eab\u4e0d\u662f\u5a92\u4f53\u8d44\u6e90\uff0c\u5b83\u662f timed media \u7684\u5bb9\u5668\u3002\u5b83\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5e26\u6709\uff08\u63cf\u8ff0\u81ea\u8eab\u7684\uff09\u5143\u6570\u636e\u7684\u5a92\u4f53\u7ec4\u6210\uff0c\u5373 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetTrack"),"\uff0c\u6700\u5e38\u89c1\u7684\u5f62\u6001\u5c31\u662f\u97f3\u9891\u548c\u89c6\u9891\u6d41\uff0c\u8fd8\u6709\u6587\u672c\u3001\u526f\u6807\u9898\u3001\u9690\u85cf\u5b57\u5e55\u7b49\u7c7b\u578b\u3002\u8d44\u6e90\u7684\u66f2\u76ee\u53ef\u4ee5\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"tracks")," \u5c5e\u6027\u8bbf\u95ee\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"NSArray"),"\uff0c\u6570\u7ec4\u7684\u5143\u7d20\u662f\u4e13\u8f91\u7684\u6240\u6709\u66f2\u76ee\u3002"),(0,i.kt)("p",null,"\u83b7\u53d6\u4e00\u4e2a\u8d44\u6e90\u7684\u65b9\u5f0f\u5f88\u76f4\u63a5\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset *asset = [AVAsset assetWithURL:url];"),"\u3002"),(0,i.kt)("p",null,"\u5982\u679c\u521b\u5efa\u4e00\u4e2a\u7528\u5728\u97f3\u89c6\u9891\u7f16\u8f91\u573a\u666f\u4e2d\u7684\u8d44\u6e90\uff0c\u53ef\u4ee5\u7528\u66f4\u957f\u7684\u52a0\u8f7d\u65f6\u95f4\uff0c\u6765\u83b7\u53d6\u66f4\u7cbe\u786e\u7684\u8d44\u6e90\u65f6\u957f\u4fe1\u606f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"NSDictionary *options = @{AVURLAssetPreferPreciseDurationAndTimingKey: @YES};\nAVURLAsset *asset = [[AVURLAsset alloc] initWithURL:url options:options];\n")),(0,i.kt)("h3",{id:"\u5a92\u4f53\u6765\u6e90"},"\u5a92\u4f53\u6765\u6e90"),(0,i.kt)("h4",{id:"uiimagepickercontroller"},"UIImagePickerController"),(0,i.kt)("p",null,"\u65e0\u9700\u6388\u6743\uff0c\u65e0\u9700\u6743\u9650\u63cf\u8ff0\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'class ViewController: UIViewController, UINavigationControllerDelegate, UIImagePickerControllerDelegate {\n    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {\n        let pickerController = UIImagePickerController()\n        pickerController.sourceType = .photoLibrary\n        pickerController.delegate = self\n        pickerController.mediaTypes = ["public.movie"];\n        pickerController.modalPresentationStyle = .fullScreen\n        pickerController.videoExportPreset = AVAssetExportPresetPassthrough\n        self.present(pickerController, animated: true, completion: nil)\n    }\n\n    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {\n        if let url = info[.mediaURL] as? URL {\n            let asset = AVURLAsset(url: url)\n            print(asset.duration)\n        }\n        picker.dismiss(animated: true, completion: nil)\n    }\n\n    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {}\n}\n')),(0,i.kt)("h4",{id:"nsurl"},"NSURL"),(0,i.kt)("p",null,"\u6765\u81ea App Bundle \u6216\u7f51\u7edc\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'NSURL *url = [[NSBundle mainBundle] URLForResource:@"v0300fd00000btm8f4819jm9302jl26g" withExtension:@"MP4"];\nAVAsset *asset = [[AVURLAsset alloc] initWithURL:url options:nil];\n\nNSURL *remoteUrl = [NSURL URLWithString:@"..."];\nAVAsset *remoteAsset = [[AVURLAsset alloc] initWithURL:remoteUrl options:nil];\nNSLog(@"%lld", remoteAsset.duration.value);\n')),(0,i.kt)("h4",{id:"photokit"},"PhotoKit"),(0,i.kt)("p",null,"\u9700\u8981\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"Info.plist")," \u4e2d\u589e\u52a0 ",(0,i.kt)("inlineCode",{parentName:"p"},"NSPhotoLibraryUsageDescription"),"\uff0c\u5f00\u53d1\u8005\u81ea\u884c\u83b7\u53d6\u5e76\u51b3\u5b9a\u5c55\u793a\u65b9\u5f0f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"[PHPhotoLibrary requestAuthorizationForAccessLevel:PHAccessLevelReadWrite handler:^(PHAuthorizationStatus status) {\n    switch (status) {\n        case PHAuthorizationStatusAuthorized:\n        case PHAuthorizationStatusLimited:\n            [self fetchAllVideos];\n            break;\n        default:\n            break;\n    }\n}];\n")),(0,i.kt)("h4",{id:"media-library"},"Media Library"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'MPMediaPropertyPredicate *artistPredicate = [MPMediaPropertyPredicate predicateWithValue:@"Foo Fighters" forProperty:MPMediaItemPropertyArtist];\nMPMediaPropertyPredicate *albumPredicate = [MPMediaPropertyPredicate predicateWithValue:@"In Your Honor" forProperty:MPMediaItemPropertyAlbumTitle];\nMPMediaPropertyPredicate *songPredicate = [MPMediaPropertyPredicate predicateWithValue:@"Best of You" forProperty:MPMediaItemPropertyTitle];\n\nMPMediaQuery *query = [[MPMediaQuery alloc]init];\n[query addFilterPredicate:artistPredicate];\n[query addFilterPredicate:albumPredicate];\n[query addFilterPredicate:songPredicate];\n\nNSArray *result = [query items];\nif (result.count > 0) {\n    MPMediaItem *item = result[0];\n    NSURL *assetURL = [item valueForProperty:MPMediaItemPropertyAssetURL];\n    AVAsset *asset = [AVAsset assetWithURL:assetURL];\n    // do sth ...\n}\n')),(0,i.kt)("h3",{id:"\u5f02\u6b65\u8f7d\u5165\u8d44\u6e90\u5c5e\u6027"},"\u5f02\u6b65\u8f7d\u5165\u8d44\u6e90\u5c5e\u6027"),(0,i.kt)("p",null,"\u5f53\u521b\u5efa ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u65f6\uff0c\u8d44\u6e90\u5c31\u662f\u5bf9\u5a92\u4f53\u6587\u4ef6\u7684\u5904\u7406\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u91c7\u7528\u4e00\u79cd\u9ad8\u6548\u7684\u8bbe\u8ba1\uff0c\u5373\u5ef6\u8fdf\u8f7d\u5165\u8d44\u6e90\u7684\u5c5e\u6027\uff0c\u76f4\u5230\u5c5e\u6027\u88ab\u8bf7\u6c42\u65f6\u624d\u8f7d\u5165\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u8d44\u6e90\u6a21\u578b\u3002\u4f46\u6709\u4e00\u70b9\uff0c\u5c31\u662f\u540c\u6b65\u8bbf\u95ee\u5c5e\u6027\u65f6\uff0c\u5982\u679c\u5c5e\u6027\u6ca1\u6709\u8f7d\u5165\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u963b\u585e\u3002\u6bd4\u5982\uff0c\u8bf7\u6c42\u8d44\u6e90\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"duration")," \u53ef\u80fd\u662f\u4e00\u4e2a\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982 MP3 \u6587\u4ef6\u7684\u5934\u6ca1\u6709 TLEN \u6807\u7b7e\u65f6\uff0c\u5219\u9700\u8981\u89e3\u6790\u6574\u4e2a\u97f3\u9891\u6765\u786e\u5b9a\u5b83\u7684\u65f6\u957f\uff0c\u5047\u8bbe\u8fd9\u4e2a\u8bf7\u6c42\u53d1\u751f\u5728\u4e3b\u7ebf\u7a0b\uff0c\u5c31\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\u76f4\u5230\u64cd\u4f5c\u5b8c\u6210\u3002"),(0,i.kt)("p",null,"\u6b63\u56e0\u4e3a\u4e0a\u8ff0\u539f\u56e0\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetTrack")," \u90fd\u9075\u5faa ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsynchronousKeyValueLoading")," \u534f\u8bae\uff0c\u53ef\u4ee5\u5f02\u6b65\u67e5\u8be2\u8d44\u6e90\u7684\u5c5e\u6027\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'self.metadata = [[THMetadata alloc] init];\nNSArray *keys = @[COMMON_META_KEY, AVAILABLE_META_KEY]; // key \u7684\u540d\u79f0\u548c AVAsset \u7684\u5c5e\u6027\u540d\u79f0\u4e00\u6837\n[self.asset loadValuesAsynchronouslyForKeys:keys completionHandler:^{\n    // \u5373\u4f7f\u8bf7\u6c42\u4e86\u591a\u4e2a\u5c5e\u6027\uff0c\u8fd9\u4e2a block \u4e5f\u53ea\u4f1a\u88ab\u56de\u8c03\u4e00\u6b21\n    // \u9700\u8981\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u7684\u5c5e\u6027\u90fd\u8c03\u7528 statusOfValueForKey:error: \u65b9\u6cd5\uff0c\u4e0d\u80fd\u5047\u8bbe\u6240\u6709\u7684\u5c5e\u6027\u90fd\u8fd4\u56de\u76f8\u540c\u7684\u72b6\u6001\u503c\n    AVKeyValueStatus commonStatus = [self.asset statusOfValueForKey:COMMON_META_KEY error:nil];\n    AVKeyValueStatus formatsStatus = [self.asset statusOfValueForKey:AVAILABLE_META_KEY error:nil];\n    self.prepared = (commonStatus == AVKeyValueStatusLoaded) && (formatsStatus == AVKeyValueStatusLoaded);\n    if (self.prepared) {\n        for (AVMetadataItem *item in self.asset.commonMetadata) { // \u8bbf\u95ee\u5df2\u8f7d\u5165\u7684\u5c5e\u6027\u4e0d\u4f1a\u8017\u65f6\n            NSLog(@"%@: %@", item.keyString, item.value);\n            [self.metadata addMetadataItem:item withKey:item.commonKey];\n        }\n        for (id format in self.asset.availableMetadataFormats) {\n            if ([self.acceptedFormats containsObject:format]) {\n                NSArray *items = [self.asset metadataForFormat:format];\n                for (AVMetadataItem *item in items) {\n                    NSLog(@"%@: %@", item.keyString, item.value);\n                    [self.metadata addMetadataItem:item withKey:item.keyString];\n                }\n            }\n        }\n    }\n    dispatch_async(dispatch_get_main_queue(), ^{\n        completionHandler(self.prepared);\n    });\n}];\n')),(0,i.kt)("h3",{id:"\u5a92\u4f53\u5143\u6570\u636e"},"\u5a92\u4f53\u5143\u6570\u636e"),(0,i.kt)("p",null,"Apple \u73af\u5883\u4e0b\u7684\u5a92\u4f53\u7c7b\u578b\u4e3b\u8981\u6709\uff1aQuickTime (mov), MPEG-4 video (mp4, m4v), MPEG-4 audio (m4a), MPEG-Layer III audio (mp3)\u3002m4v \u662f\u5e26\u6709\u82f9\u679c\u9488\u5bf9 FairPlay \u52a0\u5bc6\u53ca AC3-audio \u6269\u5c55\u7684 mp4 \u683c\u5f0f\uff1bm4a \u4e13\u95e8\u9488\u5bf9\u97f3\u9891\u3002"),(0,i.kt)("p",null,"QuickTime \u6587\u4ef6\u7531\u4e00\u79cd\u79f0\u4e3a atom \u7684\u6570\u636e\u7ed3\u6784\u7ec4\u6210\uff1bMP4 \u76f4\u63a5\u6d3e\u751f\u81ea QuickTime\uff0c\u6570\u636e\u7ed3\u6784\u76f8\u4f3c\u3002MP3 \u4e0e\u524d\u9762\u4e24\u79cd\u683c\u5f0f\u5219\u6709\u663e\u8457\u533a\u522b\uff0c\u5b83\u4e0d\u4f7f\u7528\u5bb9\u5668\u683c\u5f0f\uff0c\u4f7f\u7528\u7f16\u7801\u97f3\u9891\u6570\u636e\uff0c\u6587\u4ef6\u5f00\u5934\u6709\u53ef\u9009\u5143\u6570\u636e\uff0c\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a ID3v2 \u7684\u683c\u5f0f\u6765\u4fdd\u5b58\u63cf\u8ff0\u4fe1\u606f\u3002AVFoundation \u652f\u6301\u8bfb\u53d6 ID3v2 \u6807\u7b7e\uff0c\u4f46\u4e0d\u652f\u6301\u5199\u5165\uff0c\u539f\u56e0\u662f MP3 \u683c\u5f0f\u6709\u4e13\u5229\u9650\u5236\u3002"),(0,i.kt)("p",null,"\u5bf9\u8fd9\u4e9b\u4e0d\u540c\u683c\u5f0f\uff0cAVFoundation \u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u5143\u6570\u636e\u63a5\u53e3 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataItem"),"\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6211\u4eec\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u63d0\u4f9b\u7684\u5143\u6570\u636e\uff1b\u6d89\u53ca\u66f2\u76ee\u4e00\u7ea7\u5143\u6570\u636e\u7b49\u60c5\u51b5\u4e5f\u4f1a\u7528\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetTrack")," \u63d0\u4f9b\u7684\u5143\u6570\u636e\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataItem"),": A metadata item associated with an audiovisual asset or one of its tracks."),(0,i.kt)("p",null,"AVFoundation \u4f7f\u7528\u952e\u7a7a\u95f4\u4f5c\u4e3a\u5c06\u4e00\u7ec4\u76f8\u5173\u7684\u952e\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u8d44\u6e90\u81f3\u5c11\u5305\u542b\u4e24\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataKeySpace"),"\uff08\u952e\u7a7a\u95f4\uff09\u3002Common \u952e\u7a7a\u95f4\u662f\u6240\u6709\u8d44\u6e90\u683c\u5f0f\u90fd\u6709\u7684\uff1b\u5176\u5b83\u952e\u7a7a\u95f4\u662f\u7279\u5b9a\u7684\u8d44\u6e90\u683c\u5f0f\u624d\u6709\u7684\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-60",src:n(42803).Z,width:"2400",height:"1662"})),(0,i.kt)("p",null,"Common \u952e\u7a7a\u95f4\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"commonMetadata")," \u67e5\u8be2\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let url = Bundle.main.url(forResource: "03 Demo ID3v2.3", withExtension: "mp3")!\nlet asset = AVURLAsset(url: url)\nlet commonMetadataKey = "commonMetadata"\nasset.loadValuesAsynchronously(forKeys: [commonMetadataKey]) {\n    let commonMetadata = asset.commonMetadata\n    // \u67e5\u627e Common \u952e\u7a7a\u95f4\u7684\u5143\u6570\u636e\n    let keySpace = AVMetadataKeySpace.common\n    let artistKey = AVMetadataKey.commonKeyArtist\n    let albumKey = AVMetadataKey.commonKeyAlbumName\n    let artistMetadata = AVMetadataItem.metadataItems(from: commonMetadata, withKey: artistKey, keySpace: keySpace)\n    let albumMetadata = AVMetadataItem.metadataItems(from: commonMetadata, withKey: albumKey, keySpace: keySpace)\n    print(artistMetadata)\n    print(albumMetadata)\n}\n')),(0,i.kt)("p",null,"\u5176\u4ed6\u7279\u5b9a\u7c7b\u578b\u952e\u7a7a\u95f4\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"metadataForFormat:")," \u67e5\u8be2\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let url = Bundle.main.url(forResource: "01 Demo AAC", withExtension: "m4a")!\nlet asset = AVURLAsset(url: url)\nlet availableMetadataFormatsKey = "availableMetadataFormats"\nasset.loadValuesAsynchronously(forKeys: [availableMetadataFormatsKey]) {\n    let availableMetadataFormats = asset.availableMetadataFormats\n    var metadata = [AVMetadataItem]()\n    // \u5c06\u6240\u6709\u5143\u6570\u636e\u4fe1\u606f\u6c47\u96c6\u5230\u6570\u7ec4\u4e2d\n    for format in availableMetadataFormats {\n        metadata.append(contentsOf: asset.metadata(forFormat: format))\n    }\n    print(metadata)\n    // \u67e5\u627e iTunes \u952e\u7a7a\u95f4\u7684\u5143\u6570\u636e\n    let keySpace = AVMetadataKeySpace.iTunes\n    let artistKey = AVMetadataKey.iTunesMetadataKeyArtist\n    let albumKey = AVMetadataKey.iTunesMetadataKeyAlbum\n    let artistMetadata = AVMetadataItem.metadataItems(from: metadata, withKey: artistKey, keySpace: keySpace)\n    let albumMetadata = AVMetadataItem.metadataItems(from: metadata, withKey: albumKey, keySpace: keySpace)\n    print(artistMetadata)\n    print(albumMetadata)\n}\n')),(0,i.kt)("p",null,"\u9664\u4e86\u901a\u8fc7\u952e\u548c\u952e\u7a7a\u95f4\u6765\u83b7\u53d6\u5143\u6570\u636e\u5916\uff0ciOS 8 \u4e4b\u540e\u65b0\u589e\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"keyForIdentifier:")," \u65b9\u6cd5\uff0cidentifier \u5c06\u952e\u548c\u952e\u7a7a\u95f4\u7edf\u4e00\u6210\u5355\u72ec\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\u83b7\u53d6\u5143\u6570\u636e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let url = Bundle.main.url(forResource: "03 Demo ID3v2.3", withExtension: "mp3")!\nlet asset = AVURLAsset(url: url)\nlet commonMetadataKey = "commonMetadata"\nasset.loadValuesAsynchronously(forKeys: [commonMetadataKey]) {\n    let commonMetadata = asset.commonMetadata\n    // \u67e5\u627e Common \u952e\u7a7a\u95f4\u7684\u5143\u6570\u636e\n    let artistMetadata = AVMetadataItem.metadataItems(from: commonMetadata, filteredByIdentifier: .commonIdentifierArtist)\n    let albumMetadata = AVMetadataItem.metadataItems(from: commonMetadata, filteredByIdentifier: .commonIdentifierAlbumName)\n    print(artistMetadata)\n    print(albumMetadata)\n}\n')),(0,i.kt)("h3",{id:"\u4f8b\u5b50metamanager"},"\u4f8b\u5b50\uff1aMetaManager"),(0,i.kt)("p",null,'\u4ece\u4e0a\u9762\u7684\u7ae0\u8282\u5f97\u77e5\uff0c\u4e00\u4e2a\u5143\u6570\u636e\u7684\u952e\uff0c\u5728\u4e0d\u540c\u7684\u5bb9\u5668\u683c\u5f0f\u4e0b\uff0c\u5b58\u5728\u4e0d\u540c\u7684\u8868\u793a\u3002\u4f8b\u5982 "artist" \u6709\u4e24\u79cd key \u5206\u522b\u662f ',(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataCommonKeyArtist")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataQuickTimeMetadataKeyProducer"),"\u3002"),(0,i.kt)("p",null,"\u793a\u4f8b\u7a0b\u5e8f\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"THMetadata")," \u8d1f\u8d23\u8bfb\u53d6\u5143\u6570\u636e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4e0d\u540c\u683c\u5f0f\u4e0b\u7684\u5143\u6570\u636e\u952e\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u3001\u4e00\u81f4\u7684\u952e\u503c\u96c6\u5408\u4e2d\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5c55\u73b0\u5230\u7528\u6237\u754c\u9762\u7684\u5c31\u662f\u201c\u827a\u672f\u5bb6\u201d\u8fd9\u4e2a\u7edf\u4e00\u7684\u9009\u9879\u3002\u5f53\u7528\u6237\u4fee\u6539\u5143\u6570\u636e\u540e\uff0c\u5b83\u8fd8\u8d1f\u8d23\u5c06\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\u8f6c\u6362\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataItem")," \u5e76\u8f93\u51fa\u4fdd\u5b58\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)addMetadataItem:(AVMetadataItem *)item withKey:(id)key {\n    NSString *normalizedKey = self.keyMapping[key]; // \u9996\u5148\u5c06 AVMetadataItem \u7684\u952e\u6620\u5c04\u5230\u6807\u51c6\u5316\u7684\u952e\n    if (normalizedKey) {\n        id <THMetadataConverter> converter = [self.converterFactory converterForKey:normalizedKey]; // 1\n        id value = [converter displayValueFromMetadataItem:item];\n        // Track and Disc numbers/counts are stored as NSDictionary\n        if ([value isKindOfClass:[NSDictionary class]]) {\n            NSDictionary *data = (NSDictionary *) value;\n            for (NSString *currentKey in data) {\n                if (![data[currentKey] isKindOfClass:[NSNull class]]) {\n                    [self setValue:data[currentKey] forKey:currentKey];\n                }\n            }\n        } else {\n            [self setValue:value forKey:normalizedKey];\n        }\n        self.metadata[normalizedKey] = item;\n    }\n}\n")),(0,i.kt)("p",null,"[1]"," \u627e\u5230\u9002\u5408\u5904\u7406\u8fd9\u4e2a\u952e\u7684\u8f6c\u6362\u5668\u3002\u5728\u5904\u7406 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMetadataItem")," \u65f6\uff0c\u6700\u96be\u7684\u90e8\u5206\u5c31\u662f\u4fdd\u5b58\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," \u5c5e\u6027\u91cc\u7684\u503c\u3002\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," \u662f\u7b80\u5355\u5b57\u7b26\u4e32\u65f6\uff0c\u6bd4\u5982\u827a\u672f\u5bb6\u540d\u5b57\u6216\u5531\u7247\u6807\u9898\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u5e76\u4e14\u4e0d\u9700\u8981\u8f6c\u6362\u3002\u4f46\u5982\u679c ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," \u91cc\u662f\u4e00\u4e9b\u6666\u6da9\u7684\u5185\u5bb9\uff0c\u5c31\u9700\u8981\u4e00\u4e9b\u989d\u5916\u5de5\u4f5c\u6765\u8f6c\u6362\u4e3a\u53ef\u4ee5\u5c55\u793a\u7684\u5185\u5bb9\u3002\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"THMetadata")," \u7c7b\u76f4\u63a5\u52a0\u5165\u8f6c\u6362\u903b\u8f91\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd\u4ee3\u7801\u91cf\u4f1a\u5f88\u5927\u800c\u4e14\u4e0d\u6613\u7ef4\u62a4\uff0c\u66f4\u597d\u7684\u505a\u6cd5\u662f\u5c06\u8f6c\u6362\u903b\u8f91\u5206\u79bb\u5230\u51e0\u4e2a\u72ec\u7acb\u7684\u7c7b\u4e2d\uff0c\u4f7f\u7528\u5de5\u5382\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u7c7b\u90fd\u9075\u5faa ",(0,i.kt)("inlineCode",{parentName:"p"},"THMetadataConverter")," \u534f\u8bae\u3002"),(0,i.kt)("h3",{id:"\u4fdd\u5b58\u5143\u6570\u636e"},"\u4fdd\u5b58\u5143\u6570\u636e"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u662f\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7c7b\uff0c\u4fdd\u5b58\u5143\u6570\u636e\u7684\u6539\u53d8\u4e0d\u4f1a\u76f4\u63a5\u4fee\u6539 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset"),"\uff0c\u800c\u662f\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetExportSession")," \u5bfc\u51fa\u4e00\u4e2a\u4fdd\u5b58\u4e86\u5143\u6570\u636e\u6539\u52a8\u7684\u8d44\u6e90\u526f\u672c\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetExportSession")," \u7528\u4e8e\u5c06 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u6839\u636e\u9884\u8bbe\u6761\u4ef6\u8fdb\u884c\u8f6c\u7801\u3001\u5bfc\u51fa\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)saveWithCompletionHandler:(THCompletionHandler)handler {\n    NSString *presetName = AVAssetExportPresetPassthrough; // 1\n    NSURL *outputURL = [self tempURL];\n    AVAssetExportSession *session = [[AVAssetExportSession alloc] initWithAsset:self.asset presetName:presetName];\n    session.outputURL = outputURL;\n    session.outputFileType = self.filetype;\n    session.metadata = [self.metadata metadataItems];\n    [session exportAsynchronouslyWithCompletionHandler:^{\n        AVAssetExportSessionStatus status = session.status;\n        BOOL success = (status == AVAssetExportSessionStatusCompleted);\n        if (success) {\n            NSURL *sourceURL = self.url;\n            NSFileManager *manager = [NSFileManager defaultManager];\n            [manager removeItemAtURL:sourceURL error:nil];\n            [manager moveItemAtURL:outputURL toURL:sourceURL error:nil];\n            [self reset];\n        }\n        if (handler) {\n            dispatch_async(dispatch_get_main_queue(), ^{\n                handler(success);\n            });\n        }\n    }];\n}\n")),(0,i.kt)("p",null,"[1]"," \u9884\u8bbe ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetExportPresetPassthrough")," \u53ef\u4ee5\u5728\u4e0d\u91cd\u65b0\u5bf9\u89c6\u9891\u8fdb\u884c\u7f16\u7801\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u5143\u6570\u636e\uff0c\u5bfc\u51fa\u65f6\u95f4\u5f88\u77ed\u3002\u4f46\u8981\u6ce8\u610f\u8fd9\u4e2a preset \u53ea\u9002\u7528\u4e8e\u4fee\u6539\u5143\u6570\u636e\uff0c\u5982\u679c\u8981\u65b0\u589e\u5143\u6570\u636e\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u8f6c\u7801 preset\u3002"),(0,i.kt)("h2",{id:"\u64ad\u653e\u89c6\u9891"},"\u64ad\u653e\u89c6\u9891"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-60",src:n(56403).Z,width:"865",height:"694"})),(0,i.kt)("h3",{id:"\u5feb\u901f\u64ad\u653e"},"\u5feb\u901f\u64ad\u653e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    NSURL *assetURL = [[NSBundle mainBundle] URLForResource:@"hubblecast" withExtension:@"m4v"];\n    AVAsset *asset = [AVAsset assetWithURL:assetURL];\n    AVPlayerItem *playerItem = [AVPlayerItem playerItemWithAsset:asset]; // 1\n    [playerItem addObserver:self\n                 forKeyPath:@"status"\n                    options:0\n                    context:&PlayerItemStatusContext];\n    self.player = [AVPlayer playerWithPlayerItem:playerItem]; // 2\n    AVPlayerLayer *playerLayer = [AVPlayerLayer playerLayerWithPlayer:self.player];\n    playerLayer.frame = self.view.bounds;\n    [self.view.layer addSublayer:playerLayer];\n}\n\n- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSKeyValueChangeKey,id> *)change context:(void *)context {\n    if (context == &PlayerItemStatusContext) {\n        AVPlayerItem *playerItem = (AVPlayerItem *)object;\n        [playerItem removeObserver:self forKeyPath:@"status"]; // \u6536\u5230\u901a\u77e5\u540e\uff0c\u79fb\u9664\u89c2\u5bdf\u8005\uff01\n        if (playerItem.status == AVPlayerStatusReadyToPlay) {\n            [self.player play];\n        }\n    }\n}\n')),(0,i.kt)("p",null,"[1]"," ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetTrack")," \u662f\u5a92\u4f53\u8d44\u6e90\u7684\u9759\u6001\u4fe1\u606f\uff0c\u64ad\u653e\u8d44\u6e90\u65f6\uff0c\u8981\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerItem"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerItemTrack")," \u6784\u5efa\u76f8\u5e94\u7684\u52a8\u6001\u5185\u5bb9\u3002"),(0,i.kt)("p",null,"[2]"," \u5c06 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerItem")," \u4e0e ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayer")," \u5173\u8054\u4f1a\u5c06\u5a92\u4f53\u653e\u5165\u961f\u5217\uff0c\u4f46\u5728\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5\u64ad\u653e\u524d\uff0c\u9700\u8981\u7b49\u5f85\u5bf9\u8c61\u7684\u72b6\u6001\u6539\u53d8\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerStatusReadyToPlay"),"\uff0c\u53ef\u4ee5\u901a\u8fc7 KVO \u6765\u89c2\u5bdf\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4ee5\u5f97\u77e5\u64ad\u653e\u5c31\u7eea\u7684\u65f6\u673a\u3002"),(0,i.kt)("h3",{id:"cmtime"},"CMTime"),(0,i.kt)("p",null,"A CMTime is represented as a rational number, with a numerator (an ",(0,i.kt)("inlineCode",{parentName:"p"},"int64_t")," value), and a denominator (an ",(0,i.kt)("inlineCode",{parentName:"p"},"int32_t")," timescale). Conceptually, the timescale specifies the fraction of a second each unit in the numerator occupies. Thus if the timescale is 4, each unit represents a quarter of a second."),(0,i.kt)("p",null,"\u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6d6e\u70b9\u578b\u8868\u793a\u65f6\u957f\u4f1a\u5b58\u5728\u4e22\u5931\u7cbe\u5ea6\u7684\u95ee\u9898\uff0cAVFoundation \u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"CMTime")," \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u4fdd\u5b58\u65f6\u957f\u4fe1\u606f\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"CMTime")," \u4e2d\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"timescale")," \u5206\u522b\u4f5c\u4e3a\u5206\u5b50\u548c\u5206\u6bcd\uff0c\u8868\u793a\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CMTime oneSample = CMTimeMake(1, 44100); // One sample from a 44.1 kHz audio file")),(0,i.kt)("p",null,"\u83b7\u53d6\u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u957f\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"CMTimeGetSeconds(duration);")),(0,i.kt)("p",null,"\u5904\u7406\u89c6\u9891\u5185\u5bb9\u65f6\u5e38\u89c1\u7684 timescale \u662f 600\uff0c\u8fd9\u662f\u5927\u90e8\u5206\u5e38\u7528\u89c6\u9891\u5e27\u7387 24FPS\u300125FPS\u300130FPS \u7684\u516c\u500d\u6570\u3002\u97f3\u9891\u5185\u5bb9\u5e38\u89c1\u7684 timescale \u5c31\u662f\u91c7\u6837\u7387\uff0c\u5982 44,100 \u548c 48,000\u3002"),(0,i.kt)("h3",{id:"\u4f8b\u5b50\u89c6\u9891\u64ad\u653e\u5668"},"\u4f8b\u5b50\uff1a\u89c6\u9891\u64ad\u653e\u5668"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"THPlayerView")," \u662f\u663e\u793a\u89c6\u9891\u5185\u5bb9\u3001\u4e3a\u7528\u6237\u63d0\u4f9b\u64cd\u4f5c\u7684 view\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'@implementation THPlayerView\n+ (Class)layerClass {\n    return [AVPlayerLayer class]; // 1\n}\n\n- (id)initWithPlayer:(AVPlayer *)player {\n    self = [super initWithFrame:CGRectZero];\n    if (self) {\n        self.backgroundColor = [UIColor blackColor];\n        self.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;\n        [(AVPlayerLayer *) [self layer] setPlayer:player];\n        [[NSBundle mainBundle] loadNibNamed:@"THOverlayView" owner:self options:nil];\n        [self addSubview:_overlayView];\n    }\n    return self;\n}\n\n- (void)layoutSubviews {\n    [super layoutSubviews];\n    self.overlayView.frame = self.bounds;\n}\n\n- (id <THTransport>)transport {\n    return self.overlayView;\n}\n@end\n')),(0,i.kt)("p",null,"[1]"," \u6307\u5b9a\u4ee5 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerLayer")," \u4f5c\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"THPlayerView")," \u7684\u652f\u6301\u5c42\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"THPlayerController")," \u662f\u8fd9\u4e2a\u4f8b\u5b50\u6838\u5fc3\u7684\u64ad\u653e\u63a7\u5236\u5668\u3002\u5b83\u4e3a\uff08\u7c7b\u7684\uff09\u7528\u6237\u63d0\u4f9b\u7684\u63a5\u53e3\u76f8\u5f53\u7b80\u5355\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"@interface THPlayerController : NSObject\n- (id)initWithURL:(NSURL *)assetURL; // 1\n@property (strong, nonatomic, readonly) UIView *view; // 2\n@end\n")),(0,i.kt)("p",null,"[1]"," \u7528\u6237\u53ef\u4f20\u5165\u672c\u5730\u6216\u8fdc\u7a0b URL \u521d\u59cb\u5316\u64ad\u653e\u63a7\u5236\u5668\u3002"),(0,i.kt)("p",null,"[2]"," \u4e3a\u64ad\u653e\u5668\u89c6\u56fe\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u7528\u6237\u53ef\u8bfb\u53d6\u5b83\u3001\u6dfb\u52a0\u5230\u4e1a\u52a1\u89c6\u56fe\u4e2d\u3002\u8fd9\u4e2a\u89c6\u56fe\u662f\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"THPlayerView"),"\uff0c\u4f46\u8fd9\u4e2a\u7ec6\u8282\u5e76\u4e0d\u9700\u8981\u5bf9\u7528\u6237\u53ef\u89c1\uff0c\u6240\u4ee5\u53ea\u8fd4\u56de\u4e00\u4e2a\u901a\u7528\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"UIView")," \u5373\u53ef\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"THPlayerController")," \u4e0e\u63d0\u4f9b\u7528\u6237\u63a7\u5236\u7684\u89c6\u56fe ",(0,i.kt)("inlineCode",{parentName:"p"},"THOverlayView")," \u4e4b\u95f4\u4f1a\u6709\u5f88\u591a\u4ea4\u4e92\uff0c\u4e0d\u8fc7\u5b83\u4eec\u4e0d\u9700\u8981\u76f4\u63a5\u4e86\u89e3\u5f7c\u6b64\u7684\u7ec6\u8282\uff0c\u8981\u65ad\u5f00\u8fd9\u4e2a\u5173\u8054\uff0c\u5c31\u4f1a\u7528\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"THTransport")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"THTransportDelegate")," \u534f\u8bae\uff08\u9762\u5411\u534f\u8bae\u7f16\u7a0b\u7684\u601d\u60f3\uff09\u3002"),(0,i.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"THPlayerController")," \u4e0d\u76f4\u63a5\u4e0e ",(0,i.kt)("inlineCode",{parentName:"p"},"THOverlayView")," \u901a\u4fe1\uff08\u64cd\u4f5c\u5b83\u7684\u5c5e\u6027\u6216\u8c03\u7528\u5b83\u7684\u5b9e\u4f8b\u65b9\u6cd5\uff09\uff0c\u800c\u662f\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"THTransport")," \u534f\u8bae\u91cc\u7684\u63a5\u53e3\uff01"),(0,i.kt)("p",null,"\u901a\u8fc7\u8d44\u6e90 URL \u521d\u59cb\u5316\u63a7\u5236\u5668\u540e\uff0c\u4e3a\u4e86\u64ad\u653e\u8d44\u6e90\uff0c\u8981\u505a\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)prepareToPlay {\n    NSArray *keys = @[\n        @"tracks",\n        @"duration",\n        @"commonMetadata",\n        @"availableMediaCharacteristicsWithMediaSelectionOptions"\n    ];\n    self.playerItem = [AVPlayerItem playerItemWithAsset:self.asset automaticallyLoadedAssetKeys:keys]; // 2\n    [self.playerItem addObserver:self\n                      forKeyPath:@"status"\n                         options:0\n                         context:&PlayerItemStatusContext];\n    self.player = [AVPlayer playerWithPlayerItem:self.playerItem]; // 3\n    self.playerView = [[THPlayerView alloc] initWithPlayer:self.player];\n    self.transport = self.playerView.transport;\n    self.transport.delegate = self;\n}\n')),(0,i.kt)("p",null,"[2]"," \u4e3a\u4e86\u8f7d\u5165\u8d44\u6e90\u7684\u5c5e\u6027\uff0c\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u7684\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"loadValuesAsynchronously(forKeys:completionHandler:)")," \u65b9\u6cd5\u3002\u4f46 iOS 7+ \u63d0\u4f9b\u4e86\u8fd9\u4e2a\u66f4\u7b80\u6613\u7684\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u901a\u8fc7\u4f20\u5165\u5c5e\u6027\u7684\u6570\u7ec4\uff0c\u8ba9\u6846\u67b6\u81ea\u52a8\u8f7d\u5165\u3002"),(0,i.kt)("p",null,"[3]"," \u540c\u4e0a\uff0c\u6dfb\u52a0\u89c2\u5bdf\u8005\uff0c\u4ee5\u5f97\u77e5\u64ad\u653e\u5c31\u7eea\u7684\u65f6\u673a\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)observeValueForKeyPath:(NSString *)keyPath\n                      ofObject:(id)object\n                        change:(NSDictionary *)change\n                       context:(void *)context {\n    if (context == &PlayerItemStatusContext) {\n        dispatch_async(dispatch_get_main_queue(), ^{\n            [self.playerItem removeObserver:self forKeyPath:@"status"];\n            if (self.playerItem.status == AVPlayerItemStatusReadyToPlay) {\n                [self addPlayerItemTimeObserver]; // \u66f4\u65b0\u64ad\u653e\u65f6\u95f4\n                [self addItemEndObserverForPlayerItem]; // \u64ad\u653e\u7ed3\u675f\u901a\u77e5\n                CMTime duration = self.playerItem.duration;\n                [self.transport setCurrentTime:CMTimeGetSeconds(kCMTimeZero)\n                                      duration:CMTimeGetSeconds(duration)];\n                [self.transport setTitle:self.asset.title]; // (extension) \u5230 common keyspace \u4e2d\u83b7\u53d6 title\n                [self.player play];\n                [self loadMediaOptions]; // \u83b7\u53d6\u5b57\u5e55\n                [self generateThumbnails]; // \u521b\u5efa\u7f29\u7565\u56fe\n            } else {\n                [UIAlertView showAlertWithTitle:@"Error" message:@"Failed to load video"];\n            }\n        });\n    }\n}\n')),(0,i.kt)("p",null,"KVO \u53ef\u4ee5\u7528\u6765\u76d1\u542c\u5f88\u591a\u5c5e\u6027\u7684\u53d8\u5316\uff0c\u4f46\u4e5f\u6709\u4e0d\u80fd\u80dc\u4efb\u7684\u573a\u666f\uff0c\u4f8b\u5982 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayer")," \u7684\u65f6\u95f4\u53d8\u5316\u2014\u2014\u5177\u6709\u660e\u663e\u7684\u52a8\u6001\u7279\u6027\u3001\u5e76\u4e14\u9700\u8981\u975e\u5e38\u9ad8\u7684\u7cbe\u786e\u5ea6\u3002\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayer")," \u63d0\u4f9b\u4e86\u4e24\u79cd\u57fa\u4e8e\u65f6\u95f4\u7684\u76d1\u542c\u65b9\u6cd5\uff0c\u5206\u522b\u662f\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"addPeriodicTimeObserverForInterval:queue:usingBlock:"),"\uff0c\u4ee5\u4e00\u5b9a\u65f6\u95f4\u95f4\u9694\u83b7\u5f97\u901a\u77e5\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"addBoundaryTimeObserverForTimes:queue:usingBlock:"),"\uff0c\u4ee5\u6570\u7ec4\u5f62\u5f0f\u4f20\u5165\u4e00\u7ec4\u65f6\u95f4\u6233\uff0c\u5728\u6bcf\u4e2a\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\u83b7\u5f97\u901a\u77e5\uff0c")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)addPlayerItemTimeObserver {\n    CMTime interval = CMTimeMakeWithSeconds(REFRESH_INTERVAL, NSEC_PER_SEC); // 0.5 \u79d2\n    dispatch_queue_t queue = dispatch_get_main_queue();\n    __weak THPlayerController *weakSelf = self;\n    void (^callback)(CMTime time) = ^(CMTime time) {\n        NSTimeInterval currentTime = CMTimeGetSeconds(time);\n        NSTimeInterval duration = CMTimeGetSeconds(weakSelf.playerItem.duration);\n        [weakSelf.transport setCurrentTime:currentTime duration:duration];\n    };\n    self.timeObserver = [self.player addPeriodicTimeObserverForInterval:interval queue:queue usingBlock:callback];\n}\n")),(0,i.kt)("p",null,"\u5f53\u8d44\u6e90\u64ad\u653e\u5b8c\u6bd5\u65f6\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerItem")," \u4f1a\u53d1\u51fa\u901a\u77e5\uff0c\u63a7\u5236\u5668\u5e94\u91c7\u53d6\u76f8\u5e94\u7684\u52a8\u4f5c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)addItemEndObserverForPlayerItem {\n    NSString *name = AVPlayerItemDidPlayToEndTimeNotification;\n    NSOperationQueue *queue = [NSOperationQueue mainQueue];\n    __weak THPlayerController *weakSelf = self;\n    void (^callback)(NSNotification *note) = ^(NSNotification *notification) {\n        [weakSelf.player seekToTime:kCMTimeZero completionHandler:^(BOOL finished) {\n            [weakSelf.transport playbackComplete];\n        }];\n    };\n    self.itemEndObserver =\n        [[NSNotificationCenter defaultCenter] addObserverForName:name\n                                                          object:self.playerItem\n                                                           queue:queue\n                                                      usingBlock:callback];\n}\n")),(0,i.kt)("p",null,"\u4e0e\u8fdb\u5ea6\u6761\u62d6\u62fd\u6709\u5173\u7684\u65b9\u6cd5\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)scrubbingDidStart {\n    self.lastPlaybackRate = self.player.rate;\n    [self.player pause];\n    [self.player removeTimeObserver:self.timeObserver]; // \u7528\u6237\u62d6\u62fd\u8fdb\u5ea6\u6761\u65f6\u505c\u7528\u5b9a\u65f6\u5668\n    self.timeObserver = nil;\n}\n\n- (void)scrubbedToTime:(NSTimeInterval)time {\n    [self.playerItem cancelPendingSeeks]; // \u53d6\u6d88\u4e4b\u524d\u7684 seek \u64cd\u4f5c\n    [self.player seekToTime:CMTimeMakeWithSeconds(time, NSEC_PER_SEC) toleranceBefore:kCMTimeZero toleranceAfter:kCMTimeZero];\n}\n\n- (void)scrubbingDidEnd {\n    [self addPlayerItemTimeObserver];\n    if (self.lastPlaybackRate > 0.0f) {\n        [self.player play];\n    }\n}\n")),(0,i.kt)("h3",{id:"\u521b\u5efa\u89c6\u9891\u7f29\u7565\u56fe"},"\u521b\u5efa\u89c6\u9891\u7f29\u7565\u56fe"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetImageGenerator")," \u53ef\u4ece ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u4e2d\u751f\u6210\u7f29\u7565\u56fe\uff0c\u53ef\u4ee5\u4ece\u672c\u5730\u6216\u662f\u6b63\u5728\u4e0b\u8f7d\u4e2d\u7684\u8d44\u6e90\u751f\u6210\uff0c\u4f46\u4e0d\u80fd\u4ece HTTP Live Stream \u4e2d\u751f\u6210\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)generateThumbnails {\n    self.imageGenerator = [AVAssetImageGenerator assetImageGeneratorWithAsset:self.asset]; // 1\n\n    // \u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u50cf\u7d20\u5bbd\u4e3a 200\uff0c\u9ad8\u5ea6\u81ea\u9002\u5e94\n    self.imageGenerator.maximumSize = CGSizeMake(200.0f, 0.0f);\n\n    CMTime duration = self.asset.duration;\n    NSMutableArray *times = [NSMutableArray array];\n    CMTimeValue increment = duration.value / 20; // \u5c06\u89c6\u9891\u65f6\u957f\u7b49\u5206\u4e3a 20 \u4e2a\u95f4\u9694\n    CMTimeValue currentValue = 2.0 * duration.timescale; // 2\n    while (currentValue <= duration.value) {\n        CMTime time = CMTimeMake(currentValue, duration.timescale);\n        [times addObject:[NSValue valueWithCMTime:time]];\n        currentValue += increment;\n    }\n\n    __block NSUInteger imageCount = times.count;\n    NSMutableArray *images = [NSMutableArray array];\n\n    AVAssetImageGeneratorCompletionHandler handler;\n    handler = ^(CMTime requestedTime, // \u6211\u4eec\u8981\u6c42\u7684\u7f29\u7565\u56fe\u7684\u65f6\u95f4\n                CGImageRef imageRef,\n                CMTime actualTime, // \u5b9e\u9645\u751f\u6210\u7684\u7f29\u7565\u56fe\u7684\u65f6\u95f4\n                AVAssetImageGeneratorResult result,\n                NSError *error) {\n        if (result == AVAssetImageGeneratorSucceeded) {\n            UIImage *image = [UIImage imageWithCGImage:imageRef];\n            id thumbnail = [THThumbnail thumbnailWithImage:image time:actualTime];\n            [images addObject:thumbnail]; // \u6570\u636e\u6a21\u578b\n        } else {\n            NSLog(@"Error: %@", [error localizedDescription]);\n        }\n\n        if (--imageCount == 0) {\n            dispatch_async(dispatch_get_main_queue(), ^{\n                NSString *name = THThumbnailsGeneratedNotification;\n                NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];\n                [nc postNotificationName:name object:images]; // \u5c06\u88c5\u6709\u6570\u636e\u6a21\u578b\u7684\u6570\u7ec4\u901a\u8fc7\u901a\u77e5\u5bf9\u8c61\u53d1\u9001\u51fa\u53bb\n            });\n        }\n    };\n\n    [self.imageGenerator generateCGImagesAsynchronouslyForTimes:times\n                                              completionHandler:handler];\n}\n')),(0,i.kt)("p",null,"[1]"," \u8fd9\u91cc\u6709\u5fc5\u8981\u4fdd\u6301\u5f3a\u5f15\u7528\uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u56de\u8c03\u3002"),(0,i.kt)("p",null,"[2]"," \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u7528 0 \u5462\uff1f\u56e0\u4e3a\u5bf9\u4e8e\u89c6\u9891\u6765\u8bf4\uff0c\u65f6\u95f4\u6233 0 \u901a\u5e38\u662f\u4e00\u5e27\u5168\u9ed1\u7684\u753b\u9762\uff0c\u56e0\u6b64\u8fd9\u91cc\u53d6\u65f6\u95f4\u6233\u4e3a\u7b2c 2 \u79d2\u7684\u753b\u9762\u3002"),(0,i.kt)("h3",{id:"\u663e\u793a\u5b57\u5e55"},"\u663e\u793a\u5b57\u5e55"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/avfoundation/media_playback_and_selection/selecting_subtitles_and_alternative_audio_tracks"},"Apple Developer - Selecting Subtitles and Alternative Audio Tracks"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaSelectionOption")," models an alternative audio, video, or text track contained within the source media. Media options are used to select alternative camera angles, present audio dubbed in a user\u2019s native language, or display subtitles and closed captions."),(0,i.kt)("p",null,"You determine which alternative media presentations are available by asynchronously loading and calling the asset\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"availableMediaCharacteristicsWithMediaSelectionOptions")," property, which returns an array of strings indicating the available media characteristics. The possible values returned are ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaCharacteristicAudible")," (alternative audio tracks), ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaCharacteristicVisual")," (alternative video tracks), and ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaCharacteristicLegible")," (subtitles and closed captions)."),(0,i.kt)("p",null,"After you\u2019ve retrieved the array of available options, you call the asset\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"mediaSelectionGroupForMediaCharacteristic:")," method, passing it the desired characteristic. This method returns the associated ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaSelectionGroup")," object, or nil if no groups exist for the specified characteristic."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaSelectionGroup")," acts as a container for a collection of mutually exclusive ",(0,i.kt)("inlineCode",{parentName:"p"},"AVMediaSelectionOption")," objects."),(0,i.kt)("p",null,"The output for an asset containing audio and subtitle media options looks similar to the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-log"},"[AVMediaCharacteristicAudible] -> group\n  Option: English\n  Option: Spanish\n\n[AVMediaCharacteristicLegible]\n  Option: English\n  Option: German\n  Option: Spanish\n  Option: French\n")),(0,i.kt)("p",null,"\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u524d\u9762\u6211\u4eec\u8f7d\u5165\u8d44\u6e90\u7684\u5c5e\u6027\u65f6\uff0c\u5df2\u7ecf\u4f20\u5165 key ",(0,i.kt)("inlineCode",{parentName:"p"},"availableMediaCharacteristicsWithMediaSelectionOptions"),"\uff0c\u56e0\u6b64\u5f53\u8f7d\u5165\u72b6\u6001\u5c31\u7eea\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u83b7\u53d6\u5b57\u5e55\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)loadMediaOptions {\n    NSString *mc = AVMediaCharacteristicLegible;\n    AVMediaSelectionGroup *group = [self.asset mediaSelectionGroupForMediaCharacteristic:mc];\n    if (group) {\n        // \u83b7\u53d6\u5a92\u4f53\u8d44\u6e90\u7684\u6240\u6709\u5b57\u5e55\uff0c\u6dfb\u52a0\u5230\u754c\u9762\u4e0a\uff0c\u4f9b\u7528\u6237\u9009\u62e9\n        NSMutableArray *subtitles = [NSMutableArray array];\n        for (AVMediaSelectionOption *option in group.options) {\n            [subtitles addObject:option.displayName];\n        }\n        [self.transport setSubtitles:subtitles];\n    } else {\n        [self.transport setSubtitles:nil];\n    }\n}\n")),(0,i.kt)("p",null,"\u7528\u6237\u9009\u62e9\u5b57\u5e55\u65f6\u7684\u8c03\u7528\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)subtitleSelected:(NSString *)subtitle {\n    NSString *mc = AVMediaCharacteristicLegible;\n    AVMediaSelectionGroup *group =\n        [self.asset mediaSelectionGroupForMediaCharacteristic:mc];\n    BOOL selected = NO;\n    for (AVMediaSelectionOption *option in group.options) {\n        if ([option.displayName isEqualToString:subtitle]) {\n            [self.playerItem selectMediaOption:option inMediaSelectionGroup:group]; // 1\n            selected = YES;\n        }\n    }\n    if (!selected) {\n        [self.playerItem selectMediaOption:nil // 2\n                     inMediaSelectionGroup:group];\n    }\n}\n")),(0,i.kt)("p",null,"[1]"," ",(0,i.kt)("inlineCode",{parentName:"p"},"selectMediaOption:inMediaSelectionGroup:")," \u8fd9\u4e2a\u8c03\u7528\u4f1a\u6fc0\u6d3b\u5b57\u5e55\u5e76\u7acb\u5373\u51fa\u73b0\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerLayer")," \u4e0a\u3002Selecting a media option makes it immediately available for presentation. Selecting a subtitle or closed-caption option displays the associated text within the video display provided by ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerViewController"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerView"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerLayer"),". Selecting an alternative audio or video option replaces the currently presented media with the new selection\u2019s media."),(0,i.kt)("p",null,"[2]"," \u9009\u4e2d nil \u4f1a\u6e05\u7a7a\u5b57\u5e55\u3002"),(0,i.kt)("h3",{id:"\u7ae0\u8282"},"\u7ae0\u8282"),(0,i.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u8981\u4ecb\u7ecd\u65f6\u95f4\u76f8\u5173\u7684\u5143\u6570\u636e\uff0c\u5b83\u4e0e\u7b2c\u4e09\u7ae0\u6211\u4eec\u4ecb\u7ecd\u7684\u9759\u6001\u5143\u6570\u636e\u540c\u6837\u91cd\u8981\u3002"),(0,i.kt)("p",null,"\u65f6\u95f4\u76f8\u5173\u7684\u5143\u6570\u636e\u53ea\u7528\u4e8e\u8d44\u6e90\u7684\u65f6\u95f4\u8f74\u5185\u7279\u5b9a\u7684\u4e00\u4e2a\u8303\u56f4\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"AVTimedMetadataGroup"),": A collection of metadata items that are valid for use during a specific time range. For example, are used to represent chapters, optionally containing metadata items for chapter titles and chapter images."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (NSArray *)chaptersForAsset:(AVAsset *)asset {\n    NSArray *languages = [NSLocale preferredLanguages];\n    NSArray *metadataGroups = [asset chapterMetadataGroupsBestMatchingPreferredLanguages:languages]; // 1\n\n    NSMutableArray *chapters = [NSMutableArray array];\n    for (NSUInteger i = 0; i < metadataGroups.count; i++) {\n        AVTimedMetadataGroup *group = metadataGroups[i];\n        CMTime time = group.timeRange.start; // timeRange \u5c5e\u6027\u8bb0\u5f55\u4e86\u7ae0\u8282\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u65f6\u957f\n        NSArray<AVMetadataItem *> *items = group.items;\n        NSString *title = [self titleInMetadata:items];\n\n        THChapter *chapter = [THChapter chapterWithTime:time number:i + 1 title:title];\n        [chapters addObject:chapter];\n    }\n    return chapters;\n}\n")),(0,i.kt)("p",null,"[1]"," \u83b7\u53d6\u7ae0\u8282\u4fe1\u606f\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c\u90fd\u9700\u8981\u5148\u8f7d\u5165\u8d44\u6e90\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"availableChapterLocales")," \u952e\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:"),"\u3002"),(0,i.kt)("p",null,"\u4e86\u89e3\u4e86\u5982\u4f55\u83b7\u53d6\u7ae0\u8282\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u6765\u5b9e\u73b0\u201c\u8df3\u5230\u4e0a\u4e00\u7ae0\u201d\u548c\u201c\u8df3\u5230\u4e0b\u4e00\u7ae0\u201d\u7684\u65b9\u6cd5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (THChapter *)findPreviousChapter {\n    CMTime playerTime = self.playerItem.currentTime;\n    CMTime currentTime = CMTimeSubtract(playerTime, CMTimeMake(3, 1));\n    CMTime pastTime = kCMTimeNegativeInfinity;\n    CMTimeRange timeRange = CMTimeRangeMake(pastTime, currentTime);\n    return [self findChapterInTimeRange:timeRange reverse:YES]; // 1\n}\n\n- (THChapter *)findNextChapter {\n    CMTime currentTime = self.playerItem.currentTime;\n    CMTime futureTime = kCMTimePositiveInfinity;\n    CMTimeRange timeRange = CMTimeRangeMake(currentTime, futureTime);\n    return [self findChapterInTimeRange:timeRange reverse:NO];\n}\n\n- (THChapter *)findChapterInTimeRange:(CMTimeRange)timeRange\n                              reverse:(BOOL)reverse {\n    __block THChapter *matchingChapter = nil;\n    NSEnumerationOptions options = reverse ? NSEnumerationReverse : 0;\n    [self.chapters enumerateObjectsWithOptions:options\n                                    usingBlock:^(id obj,\n                                                 NSUInteger idx,\n                                                 BOOL *stop) {\n        if ([(THChapter *)obj isInTimeRange:timeRange]) {\n            matchingChapter = obj;\n            *stop = YES;\n        }\n    }];\n    return matchingChapter;\n}\n\n- (BOOL)isInTimeRange:(CMTimeRange)timeRange {\n    return CMTIME_COMPARE_INLINE(_time, >, timeRange.start) && CMTIME_COMPARE_INLINE(_time, <, timeRange.duration); // 2\n}\n")),(0,i.kt)("p",null,"[1]"," \u521b\u5efa\u4e00\u4e2a\u65f6\u95f4\u8303\u56f4\uff0c\u5de6\u8fb9\u754c\u662f\u8d1f\u65e0\u7a77\u3001\u53f3\u8fb9\u754c\u662f\u5f53\u524d\u64ad\u653e\u65f6\u95f4\u51cf\u53bb 3 \u79d2\u3002\u62ff\u7740\u8fd9\u4e2a\u65f6\u95f4\u8303\u56f4\uff0c\u4ece\u540e\u5f80\u524d\u904d\u5386\u7ae0\u8282\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u4f4d\u4e8e\u8fd9\u4e2a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u7ae0\u8282\u8d77\u59cb\u65f6\u95f4\u3002\u4e3a\u4ec0\u4e48\u8981\u51cf\u53bb 3 \u79d2\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u7ecf\u9a8c\u503c\u3002\u5f53\u89c6\u9891\u64ad\u653e\u65f6\uff0c\u65f6\u95f4\u4e0d\u65ad\u524d\u8fdb\uff0c\u5e94\u8be5\u7ed9\u7528\u6237\u7684\u64cd\u4f5c\u7559\u4e00\u70b9\u65f6\u95f4\u4f59\u5730\uff0c\u5426\u5219\u7528\u6237\u5c31\u4f1a\u9677\u5165\u518d\u6b21\u56de\u5230\u7ae0\u8d77\u59cb\u65f6\u95f4\u7684\u5faa\u73af\u4e2d\u3002"),(0,i.kt)("p",null,"[2]"," Core Media \u5b9a\u4e49\u4e86\u5927\u91cf\u6709\u7528\u7684\u51fd\u6570\u548c\u5b8f\u3002"),(0,i.kt)("h2",{id:"\u6355\u6349\u5a92\u4f53"},"\u6355\u6349\u5a92\u4f53"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-80",src:n(57622).Z,width:"1357",height:"625"})),(0,i.kt)("h3",{id:"avcapturesession"},"AVCaptureSession"),(0,i.kt)("p",null,"\u6355\u6349\u7684\u6838\u5fc3\u7c7b\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureSession"),"\uff0c\u5b83\u5c31\u50cf\u4e00\u4e2a\u201c\u63d2\u7ebf\u677f\u201d\uff0c\u7528\u4e8e\u8fde\u63a5\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8d44\u6e90\u3002\u6355\u6349\u4f1a\u8bdd\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u9884\u8bbe\u503c\uff0c\u9ed8\u8ba4\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureSessionPresetHigh"),"\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureDevice")," \u5b9a\u4e49\u4e86\u5927\u91cf\u7c7b\u65b9\u6cd5\u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u7684\u6355\u6349\u8bbe\u5907\u3002\u5728\u4f7f\u7528\u6355\u6349\u8bbe\u5907\u524d\uff0c\u8981\u5c06\u5b83\u6dfb\u52a0\u4e3a\u6355\u6349\u4f1a\u8bdd\u7684\u8f93\u5165\uff0c\u4e0d\u8fc7\u8bbe\u5907\u4e0d\u80fd\u76f4\u63a5\u6dfb\u52a0\u5230\u4f1a\u8bdd\u4e2d\uff0c\u9700\u8981\u5c01\u88c5\u6210 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureDeviceInput"),"\u3002"),(0,i.kt)("p",null,"\u6355\u6349\u7684\u8f93\u51fa\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u57fa\u7c7b ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureOutput"),"\uff0c\u5b83\u88ab\u6269\u5c55\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureStillImageOutput")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureMovieFileOutput"),"\uff0c\u5206\u522b\u5b9e\u73b0\u6355\u6349\u9759\u6001\u56fe\u7247\u548c\u89c6\u9891\u7684\u529f\u80fd\u3002\u8fd8\u6709\u66f4\u5e95\u5c42\u7684\u6269\u5c55 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureAudioDataOutput")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureVideoDataOutput"),"\uff0c\u4f7f\u7528\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6355\u6349\u5230\u7684\u6570\u5b57\u6837\u672c\uff0c\u5bf9\u97f3\u9891\u548c\u89c6\u9891\u6d41\u8fdb\u884c\u5b9e\u65f6\u5904\u7406\u3002"),(0,i.kt)("p",null,"\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u8bbe\u7f6e\u4e00\u4e2a\u4f1a\u8bdd\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (BOOL)setupSession:(NSError **)error {\n    self.captureSession = [[AVCaptureSession alloc] init];\n    self.captureSession.sessionPreset = AVCaptureSessionPresetHigh;\n\n    // Set up default camera device\n    AVCaptureDevice *videoDevice = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];\n    AVCaptureDeviceInput *videoInput = [AVCaptureDeviceInput deviceInputWithDevice:videoDevice error:error];\n    if (videoInput) {\n        if ([self.captureSession canAddInput:videoInput]) {\n            [self.captureSession addInput:videoInput];\n            self.activeVideoInput = videoInput;\n        }\n    } else {\n        return NO;\n    }\n\n    // Setup default microphone\n    AVCaptureDevice *audioDevice = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeAudio];\n    AVCaptureDeviceInput *audioInput = [AVCaptureDeviceInput deviceInputWithDevice:audioDevice error:error];\n    if (audioInput) {\n        if ([self.captureSession canAddInput:audioInput]) {\n            [self.captureSession addInput:audioInput];\n        }\n    } else {\n        return NO;\n    }\n\n    // Setup the still image output\n    self.imageOutput = [[AVCaptureStillImageOutput alloc] init];\n    self.imageOutput.outputSettings = @{AVVideoCodecKey : AVVideoCodecJPEG};\n\n    if ([self.captureSession canAddOutput:self.imageOutput]) {\n        [self.captureSession addOutput:self.imageOutput];\n    }\n\n    // Setup movie file output\n    self.movieOutput = [[AVCaptureMovieFileOutput alloc] init];\n    if ([self.captureSession canAddOutput:self.movieOutput]) {\n        [self.captureSession addOutput:self.movieOutput];\n    }\n\n    return YES;\n}\n")),(0,i.kt)("h3",{id:"\u9884\u89c8\u89c6\u56fe"},"\u9884\u89c8\u89c6\u56fe"),(0,i.kt)("p",null,"\u6355\u6349\u4f1a\u8bdd\u7684\u9884\u89c8\u662f\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureVideoPreviewLayer"),"\uff0c\u50cf ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayer")," \u4e00\u6837\uff0c\u4e5f\u652f\u6301\u89c6\u9891\u91cd\u529b\u7684\u6982\u5ff5\u3002"),(0,i.kt)("p",null,"\u5bf9\u4e8e iPhone 5 \u7ad6\u5c4f\u72b6\u6001\u4e0b\uff0c\u5c4f\u5e55\u5750\u6807\u7cfb\u5de6\u4e0a\u89d2\u4e3a (0, 0)\uff0c\u53f3\u4e0b\u89d2\u4e3a (320, 568)\u3002\u800c\u6355\u6349\u8bbe\u5907\u7684\u5750\u6807\u7cfb\u5219\u5b9a\u4e49\u4e0d\u540c\uff0c\u5de6\u4e0a\u89d2\u4e3a (0, 0)\uff0c\u53f3\u4e0b\u89d2\u4e3a (1, 1)\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureVideoPreviewLayer")," \u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\u5b8c\u6210\u8fd9\u4e24\u79cd\u5750\u6807\u7cfb\u4e4b\u95f4\u7684\u8f6c\u6362\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"captureDevicePointOfInterestForPoint")," \u4f20\u5165\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u70b9\uff0c\u8fd4\u56de\u8bbe\u5907\u5750\u6807\u7cfb\u7684\u70b9\uff1b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pointForCaptureDevicePointOfInterest")," \u4f20\u5165\u8bbe\u5907\u5750\u6807\u7cfb\u7684\u70b9\uff0c\u8fd4\u56de\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u70b9\u3002")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"THPreviewView")," \u4f7f\u7528\u4e86\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7528\u4e8e\u5b9e\u73b0\u70b9\u51fb\u5bf9\u7126\u529f\u80fd\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)setupView {\n    [(AVCaptureVideoPreviewLayer *)self.layer setVideoGravity:AVLayerVideoGravityResizeAspectFill];\n\n    _singleTapRecognizer =\n    [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleSingleTap:)];\n\n    _doubleTapRecognizer =\n    [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleDoubleTap:)];\n    _doubleTapRecognizer.numberOfTapsRequired = 2;\n\n    _doubleDoubleTapRecognizer =\n    [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleDoubleDoubleTap:)];\n    _doubleDoubleTapRecognizer.numberOfTapsRequired = 2;\n    _doubleDoubleTapRecognizer.numberOfTouchesRequired = 2;\n\n    [self addGestureRecognizer:_singleTapRecognizer];\n    [self addGestureRecognizer:_doubleTapRecognizer];\n    [self addGestureRecognizer:_doubleDoubleTapRecognizer];\n    [_singleTapRecognizer requireGestureRecognizerToFail:_doubleTapRecognizer];\n\n    _focusBox = [self viewWithColor:[UIColor colorWithRed:0.102 green:0.636 blue:1.000 alpha:1.000]];\n    _exposureBox = [self viewWithColor:[UIColor colorWithRed:1.000 green:0.421 blue:0.054 alpha:1.000]];\n    [self addSubview:_focusBox];\n    [self addSubview:_exposureBox];\n}\n\n- (void)handleSingleTap:(UIGestureRecognizer *)recognizer {\n    CGPoint point = [recognizer locationInView:self];\n    [self runBoxAnimationOnView:self.focusBox point:point];\n    if (self.delegate) {\n        [self.delegate tappedToFocusAtPoint:[self captureDevicePointForPoint:point]];\n    }\n}\n\n- (CGPoint)captureDevicePointForPoint:(CGPoint)point {\n    AVCaptureVideoPreviewLayer *layer = (AVCaptureVideoPreviewLayer *)self.layer;\n    return [layer captureDevicePointOfInterestForPoint:point];\n}\n")),(0,i.kt)("h3",{id:"\u542f\u52a8\u548c\u505c\u6b62\u4f1a\u8bdd"},"\u542f\u52a8\u548c\u505c\u6b62\u4f1a\u8bdd"),(0,i.kt)("p",null,"\u542f\u52a8\u548c\u505c\u6b62\u4f1a\u8bdd\u662f\u4e00\u4e2a\u540c\u6b65\u8c03\u7528\u5e76\u4f1a\u6d88\u8017\u4e00\u5b9a\u7684\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8981\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u597d\u7684\u505a\u6cd5\u662f\u628a\u5bf9\u4f1a\u8bdd\u7684\u64cd\u4f5c\u90fd\u5f02\u6b65\u6d3e\u53d1\u5230\u5168\u5c40\u961f\u5217\u91cc\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)startSession {\n    if (![self.captureSession isRunning]) {\n        dispatch_async([self globalQueue], ^{\n            [self.captureSession startRunning];\n        });\n    }\n}\n\n- (void)stopSession {\n    if ([self.captureSession isRunning]) {\n        dispatch_async([self globalQueue], ^{\n            [self.captureSession stopRunning];\n        });\n    }\n}\n\n- (dispatch_queue_t)globalQueue {\n    return dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n}\n")),(0,i.kt)("h3",{id:"\u5207\u6362\u6444\u50cf\u5934"},"\u5207\u6362\u6444\u50cf\u5934"),(0,i.kt)("p",null,"\u83b7\u53d6\u4e0d\u540c\u6444\u50cf\u5934\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (AVCaptureDevice *)cameraWithPosition:(AVCaptureDevicePosition)position {\n    NSArray *devices = [AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo];\n    for (AVCaptureDevice *device in devices) {\n        if (device.position == position) {\n            return device;\n        }\n    }\n    return nil;\n}\n")),(0,i.kt)("p",null,"\u5207\u6362\u6444\u50cf\u5934\u9700\u8981\u91cd\u65b0\u914d\u7f6e ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureSession"),"\uff0c\u5728\u4f1a\u8bdd\u521d\u59cb\u5316\u4ee5\u540e\uff0c\u5bf9\u4f1a\u8bdd\u7684\u4efb\u4f55\u6539\u53d8\uff0c\u90fd\u8981\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"beginConfiguration")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"commitConfiguration")," \u8fdb\u884c\u539f\u5b50\u6027\u7684\u6539\u53d8\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (BOOL)switchCameras {\n    if (![self canSwitchCameras]) {\n        return NO;\n    }\n    NSError *error;\n    AVCaptureDevice *videoDevice = [self inactiveCamera];\n    AVCaptureDeviceInput *videoInput = [AVCaptureDeviceInput deviceInputWithDevice:videoDevice error:&error];\n    if (videoInput) {\n        [self.captureSession beginConfiguration];\n        [self.captureSession removeInput:self.activeVideoInput];\n        if ([self.captureSession canAddInput:videoInput]) {\n            [self.captureSession addInput:videoInput];\n            self.activeVideoInput = videoInput;\n        } else {\n            [self.captureSession addInput:self.activeVideoInput];\n        }\n        [self.captureSession commitConfiguration];\n    } else {\n        [self.delegate deviceConfigurationFailedWithError:error];\n        return NO;\n    }\n    return YES;\n}\n")),(0,i.kt)("h3",{id:"\u914d\u7f6e\u6355\u6349\u8bbe\u5907"},"\u914d\u7f6e\u6355\u6349\u8bbe\u5907"),(0,i.kt)("p",null,"\u5e94\u7528\u4efb\u4f55\u914d\u7f6e\u9879\u4e4b\u524d\uff0c\u90fd\u9700\u8981\u68c0\u67e5\u5b83\u662f\u5426\u53ef\u7528\u3002\u4fee\u6539\u7684\u8fc7\u7a0b\u662f\u5148\u83b7\u53d6\u9501\u3001\u4fee\u6539\u914d\u7f6e\u3001\u89e3\u9501\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)resetFocusAndExposureModes {\n    AVCaptureDevice *device = [self activeCamera];\n    AVCaptureExposureMode exposureMode = AVCaptureExposureModeContinuousAutoExposure;\n    AVCaptureFocusMode focusMode = AVCaptureFocusModeContinuousAutoFocus;\n    BOOL canResetFocus = [device isFocusPointOfInterestSupported] && [device isFocusModeSupported:focusMode];\n    BOOL canResetExposure = [device isExposurePointOfInterestSupported] && [device isExposureModeSupported:exposureMode];\n\n    CGPoint centerPoint = CGPointMake(0.5f, 0.5f);\n    NSError *error;\n    if ([device lockForConfiguration:&error]) {\n        if (canResetFocus) {\n            device.focusMode = focusMode;\n            device.focusPointOfInterest = centerPoint;\n        }\n        if (canResetExposure) {\n            device.exposureMode = exposureMode;\n            device.exposurePointOfInterest = centerPoint;\n        }\n        [device unlockForConfiguration];\n    } else {\n        [self.delegate deviceConfigurationFailedWithError:error];\n    }\n}\n")),(0,i.kt)("h3",{id:"\u62cd\u6444\u9759\u6001\u56fe\u7247"},"\u62cd\u6444\u9759\u6001\u56fe\u7247"),(0,i.kt)("p",null,"\u5f53\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\u5e76\u6dfb\u52a0\u8bbe\u5907\u540e\uff0c\u4f1a\u8bdd\u81ea\u52a8\u5efa\u7acb\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u8fde\u63a5\uff0c\u6309\u9700\u9009\u62e9\u4fe1\u53f7\u6d41\u7ebf\u8def\u3002\u8bbf\u95ee\u8fd9\u4e9b\u8fde\u63a5\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u5bf9\u53d1\u9001\u5230\u8f93\u51fa\u7aef\u7684\u6570\u636e\u8fdb\u884c\u7cbe\u786e\u7684\u63a7\u5236\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)captureStillImage {\n    AVCaptureConnection *connection = [self.imageOutput connectionWithMediaType:AVMediaTypeVideo]; // \u83b7\u53d6\u4e00\u4e2a\u8f93\u51fa\u7684\u8fde\u63a5\n    if (connection.isVideoOrientationSupported) {\n        connection.videoOrientation = [self currentVideoOrientation];\n    }\n    id handler = ^(CMSampleBufferRef sampleBuffer, NSError *error) {\n        if (sampleBuffer != NULL) {\n            NSData *imageData = [AVCaptureStillImageOutput jpegStillImageNSDataRepresentation:sampleBuffer];\n            UIImage *image = [[UIImage alloc] initWithData:imageData];\n            [self writeImageToAssetsLibrary:image];\n        } else {\n            NSLog(@"NULL sampleBuffer: %@", [error localizedDescription]);\n        }\n    };\n    // Capture still image\n    [self.imageOutput captureStillImageAsynchronouslyFromConnection:connection completionHandler:handler];\n}\n')),(0,i.kt)("h3",{id:"\u89c6\u9891\u6355\u6349"},"\u89c6\u9891\u6355\u6349"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureMovieFileOutput")," \u7ee7\u627f\u4e8e ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureFileOutput"),"\uff0c\u8fd9\u4e2a\u62bd\u8c61\u8d85\u7c7b\u5b9a\u4e49\u4e86\u8bb8\u591a\u529f\u80fd\uff0c\u4f8b\u5982\u5f55\u5236\u5230\u6700\u957f\u65f6\u9650\u3001\u5f55\u5236\u5230\u6700\u5927\u6587\u4ef6\u5927\u5c0f\u4e3a\u6b62\u7b49\u3002"),(0,i.kt)("p",null,"QuickTime \u5f71\u7247\u6587\u4ef6\u7684\u5f00\u59cb\u4f4d\u7f6e\u6709\u5f71\u7247\u5934\u5143\u6570\u636e\uff0c\u4ee5\u4fbf\u8ba9\u64ad\u653e\u5668\u5feb\u901f\u8bfb\u53d6\u5934\u7684\u4fe1\u606f\u3002\u6211\u4eec\u5f55\u5236\u5f71\u7247\u65f6\uff0c\u76f4\u5230\u6240\u6709\u7684\u6837\u672c\u6355\u6349\u5b8c\u6210\u540e\u624d\u80fd\u521b\u5efa\u4fe1\u606f\u5934\uff0c\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9047\u5230\u5d29\u6e83\u6216\u8005\u7535\u8bdd\u62e8\u5165\u7b49\u4e2d\u65ad\uff0c\u5f71\u7247\u5934\u5c31\u4e0d\u4f1a\u6b63\u786e\u5199\u5165\uff0c\u4f1a\u5728\u78c1\u76d8\u751f\u6210\u4e00\u4e2a\u4e0d\u53ef\u8bfb\u7684\u5f71\u7247\u6587\u4ef6\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureMovieFileOutput")," \u63d0\u4f9b\u4e86\u5206\u6bb5\u6355\u6349\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"movieFragmentInterval")," \u6765\u4fee\u6539\u8f93\u51fa\u7684\u95f4\u9694\u3002\u9ed8\u8ba4\u6bcf 10 \u79d2\u5199\u5165\u4e00\u4e2a\u7247\u6bb5\uff0c\u5e76\u66f4\u65b0\u5934\u4fe1\u606f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)startRecording {\n    if (![self isRecording]) {\n        AVCaptureConnection *videoConnection = [self.movieOutput connectionWithMediaType:AVMediaTypeVideo];\n        if ([videoConnection isVideoOrientationSupported]) {\n            // \u8bbe\u7f6e\u89c6\u9891\u65b9\u5411\u540e\uff0c\u8f93\u51fa\u6587\u4ef6\u4f1a\u5e94\u7528\u76f8\u5e94\u7684\u77e9\u9635\u53d8\u5316\n            videoConnection.videoOrientation = self.currentVideoOrientation;\n        }\n        if ([videoConnection isVideoStabilizationSupported]) {\n            // \u7a33\u5b9a\u6548\u679c\u4e0d\u4f1a\u5728\u9884\u89c8\u5c42\u770b\u5230\uff0c\u53ea\u4f1a\u4f53\u73b0\u5728\u8f93\u51fa\u6587\u4ef6\u91cc\n            videoConnection.preferredVideoStabilizationMode = AVCaptureVideoStabilizationModeAuto;\n        }\n        AVCaptureDevice *device = [self activeCamera];\n        if (device.isSmoothAutoFocusSupported) {\n            NSError *error;\n            if ([device lockForConfiguration:&error]) {\n                // \u5e73\u6ed1\u5bf9\u7126\uff0c\u907f\u514d\u5207\u6362\u7126\u70b9\u65f6\u7684\u8109\u51b2\u5f0f\u5bf9\u7126\n                device.smoothAutoFocusEnabled = YES;\n                [device unlockForConfiguration];\n            } else {\n                [self.delegate deviceConfigurationFailedWithError:error];\n            }\n        }\n        self.outputURL = [self uniqueURL];\n        [self.movieOutput startRecordingToOutputFileURL:self.outputURL recordingDelegate:self];\n    }\n}\n\n- (void)captureOutput:(AVCaptureFileOutput *)captureOutput\ndidFinishRecordingToOutputFileAtURL:(NSURL *)outputFileURL\n      fromConnections:(NSArray *)connections\n                error:(NSError *)error {\n    if (error) {\n        [self.delegate mediaCaptureFailedWithError:error];\n    } else {\n        [self writeVideoToAssetsLibrary:[self.outputURL copy]];\n    }\n    self.outputURL = nil;\n}\n")),(0,i.kt)("h2",{id:"\u9ad8\u7ea7\u6355\u6349\u529f\u80fd"},"\u9ad8\u7ea7\u6355\u6349\u529f\u80fd"),(0,i.kt)("h3",{id:"\u89c6\u9891\u7f29\u653e"},"\u89c6\u9891\u7f29\u653e"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureDevice")," \u652f\u6301\u7f29\u653e\u53c2\u6570\uff0c\u6240\u6709\u4f1a\u8bdd\u7684\u8f93\u51fa\uff0c\u5305\u62ec\u9884\u89c8\u5c42\uff0c\u90fd\u4f1a\u81ea\u52a8\u5e94\u7528\u8fd9\u4e00\u72b6\u6001\u3002\u8bbe\u7f6e ",(0,i.kt)("inlineCode",{parentName:"p"},"videoZoomFactor")," \u5c5e\u6027\u4f1a\u7acb\u5373\u8c03\u6574\u7f29\u653e\uff0c\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"rampToVideoZoomFactor:withRate:")," \u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u9010\u6e10\u8c03\u6574\u7f29\u653e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)setZoomValue:(CGFloat)zoomValue {\n    if (!self.activeCamera.isRampingVideoZoom) {\n        NSError *error;\n        if ([self.activeCamera lockForConfiguration:&error]) {\n            // Provide linear feel to zoom slider\n            CGFloat zoomFactor = pow([self maxZoomFactor], zoomValue);\n            self.activeCamera.videoZoomFactor = zoomFactor;\n            [self.activeCamera unlockForConfiguration];\n        } else {\n            [self.delegate deviceConfigurationFailedWithError:error];\n        }\n    }\n}\n")),(0,i.kt)("p",null,"\u76d1\u542c\u7f29\u653e\u5c5e\u6027\u7684\u53d8\u5316\u4ee5\u66f4\u65b0\u754c\u9762\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'[self.activeCamera addObserver:self\n                forKeyPath:@"videoZoomFactor"\n                    options:0\n                    context:&THRampingVideoZoomFactorContext];\n[self.activeCamera addObserver:self\n                forKeyPath:@"rampingVideoZoom"\n                    options:0\n                    context:&THRampingVideoZoomContext];\n')),(0,i.kt)("h3",{id:"\u4eba\u8138\u68c0\u6d4b"},"\u4eba\u8138\u68c0\u6d4b"),(0,i.kt)("p",null,"\u4e3a\u4f1a\u8bdd\u6dfb\u52a0\u4e00\u4e2a\u8f93\u51fa",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureOutput")," \u7684\u5b50\u7c7b ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureMetadataOutput")," \uff0c\u4ee3\u8868\u5143\u6570\u636e\u7c7b\u578b\u7684\u8f93\u51fa\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u6211\u4eec\u611f\u5174\u8da3\u7684\u7c7b\u578b\uff08\u5373\u4eba\u8138\uff09\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (BOOL)setupSessionOutputs:(NSError **)error {\n    self.metadataOutput = [[AVCaptureMetadataOutput alloc] init];\n    if ([self.captureSession canAddOutput:self.metadataOutput]) {\n        [self.captureSession addOutput:self.metadataOutput];\n        NSArray *metadataObjectTypes = @[AVMetadataObjectTypeFace];\n        self.metadataOutput.metadataObjectTypes = metadataObjectTypes;\n        dispatch_queue_t mainQueue = dispatch_get_main_queue();\n        [self.metadataOutput setMetadataObjectsDelegate:self queue:mainQueue];\n        return YES;\n    } else {\n        if (error) {\n            NSDictionary *userInfo = @{NSLocalizedDescriptionKey: @"Failed to still image output."};\n            *error = [NSError errorWithDomain:THCameraErrorDomain\n                                         code:THCameraErrorFailedToAddOutput\n                                     userInfo:userInfo];\n        }\n        return NO;\n    }\n}\n\n- (void)captureOutput:(AVCaptureOutput *)captureOutput\ndidOutputMetadataObjects:(NSArray *)metadataObjects\n       fromConnection:(AVCaptureConnection *)connection {\n    for (AVMetadataFaceObject *face in metadataObjects) {\n        NSLog(@"Face detected with ID: %li", (long)face.faceID);\n        NSLog(@"Face bounds: %@", NSStringFromCGRect(face.bounds));\n    }\n    [self.faceDetectionDelegate didDetectFaces:metadataObjects];\n}\n')),(0,i.kt)("p",null,"\u4e3a\u6355\u6349\u5230\u7684\u4eba\u8138\u6dfb\u52a0\u56fe\u5c42\uff0c\u5e76\u5e94\u7528 transform\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)didDetectFaces:(NSArray *)faces {\n    // \u83b7\u53d6\u5230\u7684\u4eba\u8138\u6570\u636e\u5148\u505a\u4e00\u6b21\u5750\u6807\u7cfb\u7684\u8f6c\u6362\uff0c\u4ece\u6355\u6349\u8bbe\u5907\u5750\u6807\u7cfb\u8f6c\u6362\u6210\u5c4f\u5e55\u89c6\u56fe\u5750\u6807\u7cfb\n    NSArray *transformedFaces = [self transformedFacesFromFaces:faces];\n    // \u5df2\u7ecf\u4e0d\u5728\u753b\u9762\u4e2d\u7684\u4eba\u8138\uff0c\u9700\u8981\u79fb\u9664\u5bf9\u5e94\u7684\u56fe\u5c42\n    NSMutableArray *lostFaces = [self.faceLayers.allKeys mutableCopy];\n    for (AVMetadataFaceObject *face in transformedFaces) {\n        NSNumber *faceID = @(face.faceID);\n        [lostFaces removeObject:faceID];\n        CALayer *layer = [self.faceLayers objectForKey:faceID];\n        if (!layer) {\n            // no layer for faceID, create new face layer\n            layer = [self makeFaceLayer];\n            [self.overlayLayer addSublayer:layer];\n            self.faceLayers[faceID] = layer;\n        }\n        layer.transform = CATransform3DIdentity;\n        layer.frame = face.bounds;\n\n        // \u5e94\u7528\u4eba\u8138\u7684\u89d2\u5ea6\u53d8\u6362\n        if (face.hasRollAngle) {\n            CATransform3D t = [self transformForRollAngle:face.rollAngle];\n            layer.transform = CATransform3DConcat(layer.transform, t);\n        }\n        if (face.hasYawAngle) {\n            CATransform3D t = [self transformForYawAngle:face.yawAngle];\n            layer.transform = CATransform3DConcat(layer.transform, t);\n        }\n    }\n\n    for (NSNumber *faceID in lostFaces) {\n        CALayer *layer = [self.faceLayers objectForKey:faceID];\n        [layer removeFromSuperlayer];\n        [self.faceLayers removeObjectForKey:faceID];\n    }\n}\n")),(0,i.kt)("h3",{id:"\u673a\u5668\u53ef\u8bfb\u4ee3\u7801\u8bc6\u522b"},"\u673a\u5668\u53ef\u8bfb\u4ee3\u7801\u8bc6\u522b"),(0,i.kt)("p",null,"\u8bbe\u7f6e\u4f1a\u8bdd\u8f93\u5165\u6709\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u5c31\u662f\u53ef\u4ee5\u628a\u81ea\u52a8\u5bf9\u7126\u529f\u80fd\u9650\u5236\u5728\u8fd1\u8ddd\u79bb\u5185\uff0c\u53ef\u4ee5\u63d0\u9ad8\u8bc6\u522b\u6210\u529f\u7387\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (BOOL)setupSessionInputs:(NSError *__autoreleasing *)error {\n    BOOL success = [super setupSessionInputs:error];\n    if (success) {\n        if (self.activeCamera.autoFocusRangeRestrictionSupported) {\n            if ([self.activeCamera lockForConfiguration:error]) {\n                self.activeCamera.autoFocusRangeRestriction = AVCaptureAutoFocusRangeRestrictionNear;\n                [self.activeCamera unlockForConfiguration];\n            }\n        }\n    }\n    return success;\n}\n")),(0,i.kt)("p",null,"\u4f1a\u8bdd\u7684\u8f93\u51fa\u8bbe\u7f6e\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCaptureMetadataOutput"),"\uff0c\u5e76\u8bbe\u7f6e\u63a5\u53d7\u7684\u5143\u6570\u636e\u7c7b\u578b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (BOOL)setupSessionOutputs:(NSError **)error {\n    self.metadataOutput = [[AVCaptureMetadataOutput alloc] init];\n\n    if ([self.captureSession canAddOutput:self.metadataOutput]) {\n        [self.captureSession addOutput:self.metadataOutput];\n\n        dispatch_queue_t mainQueue = dispatch_get_main_queue();\n        [self.metadataOutput setMetadataObjectsDelegate:self queue:mainQueue];\n\n        NSArray *types = @[AVMetadataObjectTypeQRCode,\n                           AVMetadataObjectTypeAztecCode,\n                           AVMetadataObjectTypeUPCECode];\n        self.metadataOutput.metadataObjectTypes = types;\n    } else {\n        NSDictionary *userInfo = @{NSLocalizedDescriptionKey: @"Failed to still image output."};\n        *error = [NSError errorWithDomain:THCameraErrorDomain\n                                     code:THCameraErrorFailedToAddOutput\n                                 userInfo:userInfo];\n        return NO;\n    }\n    return YES;\n}\n')),(0,i.kt)("p",null,"\u68c0\u6d4b\u5230\u6761\u5f62\u7801\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)didDetectCodes:(NSArray *)codes {\n    // \u5750\u6807\u7cfb\u8f6c\u6362\n    NSArray *transformedCodes = [self transformedCodesFromCodes:codes];\n    // \u79fb\u9664\u5df2\u7ecf\u4e0d\u5728\u753b\u9762\u5185\u7684\u6761\u5f62\u7801\n    NSMutableArray *lostCodes = [self.codeLayers.allKeys mutableCopy];\n    for (AVMetadataMachineReadableCodeObject *code in transformedCodes) {\n        NSString *stringValue = code.stringValue;\n        if (stringValue) {\n            [lostCodes removeObject:stringValue];\n        } else {\n            continue;\n        }\n        NSArray *layers = self.codeLayers[stringValue];\n        if (!layers) {\n            // no layers for stringValue, create new code layers\n            layers = @[[self makeBoundsLayer], [self makeCornersLayer]];\n            self.codeLayers[stringValue] = layers;\n            [self.previewLayer addSublayer:layers[0]];\n            [self.previewLayer addSublayer:layers[1]];\n        }\n\n        CAShapeLayer *boundsLayer  = layers[0]; // \u77e9\u5f62\u8fb9\u6846\n        boundsLayer.path  = [self bezierPathForBounds:code.bounds].CGPath;\n        boundsLayer.hidden = NO;\n\n        CAShapeLayer *cornersLayer = layers[1]; // \u4e0e\u6761\u5f62\u7801\u7684\u56db\u4e2a\u89d2\u7684\u70b9\u5bf9\u9f50\u7684\u8fb9\u6846\n        cornersLayer.path = [self bezierPathForCorners:code.corners].CGPath;\n        cornersLayer.hidden = NO;\n\n        NSLog(@"String: %@", stringValue); // \u6761\u5f62\u7801\u5185\u5bb9\n    }\n\n    for (NSString *stringValue in lostCodes) {\n        for (CALayer *layer in self.codeLayers[stringValue]) {\n            [layer removeFromSuperlayer];\n        }\n        [self.codeLayers removeObjectForKey:stringValue];\n    }\n}\n')),(0,i.kt)("h3",{id:"\u9ad8\u5e27\u7387\u6355\u6349"},"\u9ad8\u5e27\u7387\u6355\u6349"),(0,i.kt)("h3",{id:"\u5b9e\u65f6\u6355\u6349\u4e0e\u6e32\u67d3"},"\u5b9e\u65f6\u6355\u6349\u4e0e\u6e32\u67d3"),(0,i.kt)("p",null,"\u8ba9\u6355\u6349\u4f1a\u8bdd\u76f4\u63a5\u8f93\u51fa\u89c6\u9891\u539f\u59cb\u5e27\u6570\u636e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (BOOL)setupSessionOutputs:(NSError **)error {\n    self.videoDataOutput = [[AVCaptureVideoDataOutput alloc] init];\n    self.videoDataOutput.alwaysDiscardsLateVideoFrames = YES; // \u4e22\u6389\u6765\u4e0d\u53ca\u5904\u7406\u7684\u5e27\n    self.videoDataOutput.videoSettings = @{\n        (id)kCVPixelBufferPixelFormatTypeKey : @(kCVPixelFormatType_32BGRA)\n    }; // \u6444\u50cf\u5934\u8272\u5f69\u4e8c\u6b21\u62bd\u6837\u7684\u683c\u5f0f\n\n    [self.videoDataOutput setSampleBufferDelegate:self\n                                            queue:dispatch_get_main_queue()]; // \u6309\u7167\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u961f\u5217\uff0c\u672c\u4f8b\u4e2d\u6837\u672c\u76f4\u63a5\u9001\u5230 OpenGL \u6e32\u67d3\u7ba1\u7ebf\uff0c\u56e0\u6b64\u9009\u62e9\u4e3b\u961f\u5217\n    if ([self.captureSession canAddOutput:self.videoDataOutput]) {\n        [self.captureSession addOutput:self.videoDataOutput];\n        return YES;\n    }\n    return NO;\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CMSampleBuffer")," is a Core Foundation object containing zero or more compressed (or uncompressed) samples of a particular media type (audio, video, muxed, etc), that are used to move media sample data through the media pipeline."),(0,i.kt)("p",null,"\u4e0b\u9762\u7684\u4ee3\u7801\u76f4\u63a5\u64cd\u4f5c\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"CMSampleBuffer")," \u6837\u672c\u7684\u6570\u636e\u5e76\u5e94\u7528\u4e00\u4e2a\u7070\u5ea6\u6548\u679c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"- (void)captureOutput:(AVCaptureOutput *)captureOutput\ndidOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer\n       fromConnection:(AVCaptureConnection *)connection {\n    const int BYTES_PER_PIXEL = 4;\n\n    // CVPixelBufferRef \u5728\u4e3b\u5b58\u4e2d\u4fdd\u5b58\u50cf\u7d20\u6570\u636e\uff0c\u63d0\u4f9b\u4e86\u64cd\u4f5c\u5185\u5bb9\u7684\u673a\u4f1a\u3002\n    CVPixelBufferRef pixelBuffer = CMSampleBufferGetImageBuffer(sampleBuffer);\n\n    // \u5728\u4e0e CVPixelBuffer \u6570\u636e\u4ea4\u4e92\u524d\uff0c\u5fc5\u987b\u83b7\u53d6\u76f8\u5e94\u5185\u5b58\u5757\u7684\u9501\n    CVPixelBufferLockBaseAddress(pixelBuffer, 0);\n\n    // \u786e\u5b9a\u50cf\u7d20 buffer \u7684\u5bbd\u548c\u9ad8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fed\u4ee3\u5b83\u7684\u884c\u548c\u5217\n    size_t bufferWidth = CVPixelBufferGetWidth(pixelBuffer);\n    size_t bufferHeight = CVPixelBufferGetHeight(pixelBuffer);\n\n    // \u83b7\u53d6\u50cf\u7d20 buffer \u7684\u57fa\u5740\u6307\u9488\uff0c\u4ee5\u8fed\u4ee3\u5176\u6570\u636e\n    unsigned char *pixel = (unsigned char *)CVPixelBufferGetBaseAddress(pixelBuffer);\n    unsigned char grayPixel;\n    // \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u7b80\u5355\u5730\u8fdb\u884c\u50cf\u7d20\u7070\u5ea6\u5e73\u5747\n    for (int row = 0; row < bufferHeight; ++row) {\n        for (int column = 0; column < bufferWidth; ++column) {\n            grayPixel = (pixel[0] + pixel[1] + pixel[2]) / 3;\n            pixel[0] = pixel[1] = pixel[2] = grayPixel;\n            pixel += BYTES_PER_PIXEL;\n        }\n    }\n\n    CVPixelBufferUnlockBaseAddress(pixelBuffer, 0);\n\n    // \u63a5\u4e0b\u6765\u628a\u5904\u7406\u597d\u7684 pixelBuffer \u6570\u636e\u8f6c\u6362\u6210\u56fe\u7247\u2026\u2026\n}\n")),(0,i.kt)("p",null,"\u9664\u4e86\u539f\u59cb\u5a92\u4f53\u6837\u672c\u4e4b\u5916\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"CMSampleBuffer")," \u8fd8\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"CMFormatDescription")," \u63d0\u4f9b\u4e86\u6837\u672c\u7684\u683c\u5f0f\u4fe1\u606f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"- (void)captureOutput:(AVCaptureOutput *)captureOutput\ndidOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer\n       fromConnection:(AVCaptureConnection *)connection {\n    CMFormatDescriptionRef formatDesc = CMSampleBufferGetFormatDescription(sampleBuffer);\n    CMMediaType mediaType = CMFormatDescriptionGetMediaType(formatDesc);\n    if (mediaType == kCMMediaType_Video) {\n        // \u83b7\u53d6\u89c6\u9891\u5e27\u7684\u5bbd\u9ad8\n        CMVideoDimensions dimensions = CMVideoFormatDescriptionGetDimensions(formatDesc);\n        // ...\n    } else if (mediaType == kCMMediaType_Audio) {\n        CMBlockBufferRef blockBuffer = CMSampleBufferGetDataBuffer(sampleBuffer); // 1\n        // ...\n    }\n}\n")),(0,i.kt)("p",null,"[1]"," blockBuffer \u7528\u4e8e\u5728 Core Media \u901a\u9053\u4e2d\u4f20\u8f93\u4efb\u610f\u5b57\u8282\u7684\u6570\u636e\u3002"),(0,i.kt)("h2",{id:"\u8bfb\u53d6\u548c\u5199\u5165\u5a92\u4f53"},"\u8bfb\u53d6\u548c\u5199\u5165\u5a92\u4f53"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:n(27147).Z,width:"675",height:"508"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetReader")," \u7528\u4e8e\u4ece ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u4e2d\u8bfb\u53d6\u5a92\u4f53\u6837\u672c\uff0c\u4ee5\u8bbf\u95ee\u97f3\u9891\u6837\u672c\u548c\u89c6\u9891\u5e27\u3002\u5b83\u662f\u4ee5\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u4e0d\u65ad\u63d0\u4f9b\u4e0b\u4e00\u4e2a\u53ef\u7528\u6837\u672c\u7684\uff0c\u5c3d\u7ba1\u63d0\u4f9b\u4e86\u4f4e\u65f6\u5ef6\u7684\u68c0\u7d22\u64cd\u4f5c\uff0c\u4f46\u662f\u4e0d\u503e\u5411\u4e8e\u5b9e\u65f6\u64cd\u4f5c\u4f8b\u5982\u64ad\u653e\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetWriter")," \u5219\u7528\u4e8e\u5bf9\u5a92\u4f53\u8d44\u6e90\u8fdb\u884c\u7f16\u7801\u5e76\u5199\u5165\u5bb9\u5668\u6587\u4ef6\u4e2d\u3002\u5b83\u53ef\u4ee5\u652f\u6301\u81ea\u52a8\u4ea4\u53c9\u5a92\u4f53\u6837\u672c\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-80",src:n(49875).Z,width:"1368",height:"226"})),(0,i.kt)("p",null,"\u4e0b\u9762\u901a\u8fc7\u4e00\u6bb5\u7b80\u5355\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5bf9\u8fd9\u4e24\u4e2a\u7c7b\u8fdb\u884c\u4e00\u4e2a\u76f4\u89c2\u7684\u4e86\u89e3\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    NSURL *url = [[NSBundle mainBundle] URLForResource:@"v03" withExtension:@"mp4"];\n    AVAsset *asset = [AVURLAsset assetWithURL:url];\n    AVAssetTrack *track = [[asset tracksWithMediaType:AVMediaTypeVideo] firstObject];\n\n    self.assetReader = [[AVAssetReader alloc]initWithAsset:asset error:nil];\n    // \u5c06\u89c6\u9891\u5e27\u89e3\u538b\u7f29\u4e3a BGRA \u683c\u5f0f\n    NSDictionary *readerOutputSettings = @{\n        (id)kCVPixelBufferPixelFormatTypeKey: @(kCVPixelFormatType_32BGRA)\n    };\n    AVAssetReaderTrackOutput *trackOutput = [[AVAssetReaderTrackOutput alloc] initWithTrack:track outputSettings:readerOutputSettings];\n    [self.assetReader addOutput:trackOutput];\n    [self.assetReader startReading]; // validates, initiates\n\n    NSURL *outputURL = [self outputURL];\n    NSLog(@"%@", outputURL);\n    self.assetWriter = [[AVAssetWriter alloc] initWithURL:outputURL fileType:AVFileTypeQuickTimeMovie error:nil];\n    NSDictionary *writerInputSettings = @{\n        AVVideoCodecKey: AVVideoCodecTypeH264,\n        AVVideoWidthKey: @720,\n        AVVideoHeightKey: @1280,\n        AVVideoCompressionPropertiesKey: @{\n                AVVideoMaxKeyFrameIntervalKey: @1,\n                AVVideoAverageBitRateKey: @10500000,\n                AVVideoProfileLevelKey: AVVideoProfileLevelH264Main31,\n        }\n    }; // 1\n    AVAssetWriterInput *writerInput = [[AVAssetWriterInput alloc] initWithMediaType:AVMediaTypeVideo outputSettings:writerInputSettings];\n    [self.assetWriter addInput:writerInput];\n    [self.assetWriter startWriting]; // validates, initiates\n\n    dispatch_queue_t queue = dispatch_queue_create("com.demo.writer", nil);\n    [self.assetWriter startSessionAtSourceTime:kCMTimeZero];\n    [writerInput requestMediaDataWhenReadyOnQueue:queue usingBlock:^{ // 2\n        BOOL complete = NO;\n        while ([writerInput isReadyForMoreMediaData] && !complete) {\n            CMSampleBufferRef sampleBuffer = [trackOutput copyNextSampleBuffer];\n            if (sampleBuffer) {\n                BOOL result = [writerInput appendSampleBuffer:sampleBuffer];\n                CFRelease(sampleBuffer);\n                complete = !result;\n            } else {\n                [writerInput markAsFinished];\n                complete = YES;\n            }\n        }\n        if (complete) {\n            [self.assetWriter finishWritingWithCompletionHandler:^{\n                AVAssetWriterStatus status = self.assetWriter.status;\n                if (status == AVAssetWriterStatusCompleted) {\n                    NSLog(@"completed");\n                } else {\n                    NSLog(@"error");\n                }\n            }];\n        }\n    }];\n}\n\n- (NSURL *)outputURL {\n    NSString *filePath =\n        [NSTemporaryDirectory() stringByAppendingPathComponent:THVideoFilename];\n    NSURL *url = [NSURL fileURLWithPath:filePath];\n    if ([[NSFileManager defaultManager] fileExistsAtPath:url.path]) {\n        [[NSFileManager defaultManager] removeItemAtURL:url error:nil];\n    }\n    return url;\n}\n')),(0,i.kt)("p",null,"[1]"," AVAssetWriter \u80fd\u591f\u5bf9\u8f93\u51fa\u7f16\u7801\u65f6\u8fdb\u884c\u7ec6\u81f4\u7684\u538b\u7f29\u8bbe\u7f6e\uff0c\u4f8b\u5982\u5173\u952e\u5e27\u95f4\u9694\u3001\u6bd4\u7279\u7387\u3001H.264 \u914d\u7f6e\u6587\u4ef6\u3001\u50cf\u7d20\u5bbd\u9ad8\u6bd4\u3001\u7eaf\u51c0\u5149\u5708\u7b49\u3002"),(0,i.kt)("p",null,"[2]"," \u672c\u4f8b\u4e2d\u7684\u5199\u5165\u4f1a\u8bdd\uff0c\u4f7f\u7528\u7684\u662f\u62c9\u6a21\u5f0f (pull mode)\uff0c\u5373\u5f53 writer \u51c6\u5907\u9644\u52a0\u66f4\u591a\u7684\u6837\u672c\u65f6\uff0c\u4ece\u8d44\u6e90\u4e2d\u62c9\u53d6\u6837\u672c\u3002\u8fd9\u662f\u6211\u4eec\u4ece\u4e00\u4e2a\u975e\u5b9e\u65f6\u8d44\u6e90\u4e2d\u5199\u5165\u6837\u672c\u65f6\u6240\u7528\u7684\u6a21\u5f0f\u3002\u8fd9\u4e2a block \u4f1a\u5728 writer \u51c6\u5907\u597d\u6dfb\u52a0\u66f4\u591a\u6837\u672c\u65f6\u88ab\u4e0d\u65ad\u8c03\u7528\u3002"),(0,i.kt)("h3",{id:"\u5b9e\u65f6\u6355\u6349\u5199\u5165"},"\u5b9e\u65f6\u6355\u6349\u5199\u5165"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'- (void)startWriting {\n    dispatch_async(self.dispatchQueue, ^{\n        NSError *error = nil;\n        NSString *fileType = AVFileTypeQuickTimeMovie;\n        self.assetWriter = [AVAssetWriter assetWriterWithURL:[self outputURL] fileType:fileType error:&error];\n        if (!self.assetWriter || error) {\n            NSString *formatString = @"Could not create AVAssetWriter: %@";\n            NSLog(@"%@", [NSString stringWithFormat:formatString, error]);\n            return;\n        }\n        self.assetWriterVideoInput =\n            [[AVAssetWriterInput alloc] initWithMediaType:AVMediaTypeVideo\n                                            outputSettings:self.videoSettings];\n        self.assetWriterVideoInput.expectsMediaDataInRealTime = YES; // \u6307\u660e\u8fd9\u4e2a\u8f93\u5165\u5e94\u8be5\u9488\u5bf9\u5b9e\u65f6\u6027\u8fdb\u884c\u4f18\u5316\n\n        UIDeviceOrientation orientation = [UIDevice currentDevice].orientation;\n        self.assetWriterVideoInput.transform = THTransformForDeviceOrientation(orientation);\n\n        NSDictionary *attributes = @{\n            (id)kCVPixelBufferPixelFormatTypeKey : @(kCVPixelFormatType_32BGRA),\n            (id)kCVPixelBufferWidthKey : self.videoSettings[AVVideoWidthKey],\n            (id)kCVPixelBufferHeightKey : self.videoSettings[AVVideoHeightKey],\n            (id)kCVPixelFormatOpenGLESCompatibility : (id)kCFBooleanTrue\n        };\n\n        // \u8fd9\u4e2a adaptor \u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f18\u5316\u7684 CVPixelBufferPool\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u521b\u5efa CVPixelBuffer \u5bf9\u8c61\u6765\u6e32\u67d3\u7ecf\u8fc7\u6ee4\u955c\u5904\u7406\u7684\u89c6\u9891\u5e27\uff0c\u5728\u9644\u52a0\u89c6\u9891\u6837\u672c\u65f6\u63d0\u4f9b\u6700\u4f18\u6027\u80fd\u3002\n        self.assetWriterInputPixelBufferAdaptor =\n            [[AVAssetWriterInputPixelBufferAdaptor alloc]\n                initWithAssetWriterInput:self.assetWriterVideoInput\n                sourcePixelBufferAttributes:attributes];\n\n        if ([self.assetWriter canAddInput:self.assetWriterVideoInput]) {\n            [self.assetWriter addInput:self.assetWriterVideoInput];\n        } else {\n            NSLog(@"Unable to add video input.");\n            return;\n        }\n\n        self.assetWriterAudioInput =\n            [[AVAssetWriterInput alloc] initWithMediaType:AVMediaTypeAudio\n                                            outputSettings:self.audioSettings];\n        self.assetWriterAudioInput.expectsMediaDataInRealTime = YES;\n\n        if ([self.assetWriter canAddInput:self.assetWriterAudioInput]) {\n            [self.assetWriter addInput:self.assetWriterAudioInput];\n        } else {\n            NSLog(@"Unable to add audio input.");\n        }\n\n        self.isWriting = YES;\n        self.firstSample = YES;\n    });\n}\n\n- (void)processSampleBuffer:(CMSampleBufferRef)sampleBuffer {\n    if (!self.isWriting) {\n        return;\n    }\n    // \u5224\u65ad\u5a92\u4f53\u7684\u6837\u672c\u7c7b\u578b\uff0c\u4ee5\u4f20\u9012\u7ed9\u6b63\u786e\u7684 writer\n    CMFormatDescriptionRef formatDesc = CMSampleBufferGetFormatDescription(sampleBuffer);\n    CMMediaType mediaType = CMFormatDescriptionGetMediaType(formatDesc);\n    if (mediaType == kCMMediaType_Video) {\n        CMTime timestamp = CMSampleBufferGetPresentationTimeStamp(sampleBuffer);\n        if (self.firstSample) {\n            if ([self.assetWriter startWriting]) {\n                [self.assetWriter startSessionAtSourceTime:timestamp];\n            } else {\n                NSLog(@"Failed to start writing.");\n            }\n            self.firstSample = NO;\n        }\n        // \u4ece pixelBufferPool \u4e2d\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 CVPixelBufferRef\uff0c\u4f7f\u7528\u8be5\u50cf\u7d20 buffer \u6765\u6e32\u67d3\u7ecf\u8fc7\u6ee4\u955c\u5904\u7406\u7684\u89c6\u9891\u5e27\n        CVPixelBufferRef outputRenderBuffer = NULL;\n        CVPixelBufferPoolRef pixelBufferPool = self.assetWriterInputPixelBufferAdaptor.pixelBufferPool;\n        OSStatus err = CVPixelBufferPoolCreatePixelBuffer(NULL, pixelBufferPool, &outputRenderBuffer);\n        if (err) {\n            NSLog(@"Unable to obtain a pixel buffer from the pool.");\n            return;\n        }\n        CVPixelBufferRef imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer);\n        CIImage *sourceImage = [CIImage imageWithCVPixelBuffer:imageBuffer options:nil];\n        [self.activeFilter setValue:sourceImage forKey:kCIInputImageKey];\n        CIImage *filteredImage = self.activeFilter.outputImage;\n        if (!filteredImage) {\n            filteredImage = sourceImage;\n        }\n        [self.ciContext render:filteredImage\n               toCVPixelBuffer:outputRenderBuffer\n                        bounds:filteredImage.extent\n                    colorSpace:self.colorSpace];\n        if (self.assetWriterVideoInput.readyForMoreMediaData) {\n            if (![self.assetWriterInputPixelBufferAdaptor\n                            appendPixelBuffer:outputRenderBuffer\n                         withPresentationTime:timestamp]) {\n                NSLog(@"Error appending pixel buffer.");\n            }\n        }\n        CVPixelBufferRelease(outputRenderBuffer);\n    } else if (!self.firstSample && mediaType == kCMMediaType_Audio) {\n        if (self.assetWriterAudioInput.isReadyForMoreMediaData) {\n            if (![self.assetWriterAudioInput appendSampleBuffer:sampleBuffer]) {\n                NSLog(@"Error appending audio sample buffer.");\n            }\n        }\n    }\n}\n\n- (void)stopWriting {\n    self.isWriting = NO;\n    dispatch_async(self.dispatchQueue, ^{\n        [self.assetWriter finishWritingWithCompletionHandler:^{\n            if (self.assetWriter.status == AVAssetWriterStatusCompleted) {\n                dispatch_async(dispatch_get_main_queue(), ^{\n                    NSURL *fileURL = [self.assetWriter outputURL];\n                    [self.delegate didWriteMovieAtURL:fileURL];\n                });\n            } else {\n                NSLog(@"Failed to write movie: %@", self.assetWriter.error);\n            }\n        }];\n    });\n}\n')),(0,i.kt)("h2",{id:"\u5a92\u4f53\u7ec4\u5408\u4e0e\u7f16\u8f91"},"\u5a92\u4f53\u7ec4\u5408\u4e0e\u7f16\u8f91"),(0,i.kt)("p",null,"AVFoundation \u63d0\u4f9b\u4e86\u4e00\u4e9b API \u6765\u521b\u5efa\u975e\u7ebf\u6027\u3001\u65e0\u635f\u7684\u7f16\u8f91\u5de5\u5177\u3002\u201c\u975e\u7ebf\u6027\u201d\u6307\u7684\u662f\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\u3001\u5206\u5f00\u3001\u4fee\u5efa\u3001\u8986\u76d6\u548c\u4ee5\u4efb\u4f55\u987a\u5e8f\u91cd\u6392\u5a92\u4f53\u7247\u6bb5\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-80",src:n(36396).Z,width:"1498",height:"546"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVComposition")," \u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u7684\u5b50\u7c7b\uff0c\u662f\u5305\u542b\u4e86\u4e00\u4e2a\u6216\u591a\u4e2a\u5a92\u4f53\u8f68\u9053\u7684\u5bb9\u5668\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVComposition"),": An object that combines media data from multiple file-based sources to present or process media data from multiple sources."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVComposition")," \u4e2d\u7684\u8f68\u9053\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetTrack")," \u7684\u5b50\u7c7b ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCompositionTrack"),"\uff0c\u8f68\u9053\u53c8\u7531\u591a\u4e2a\u7247\u6bb5 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCompositionTrackSegment")," \u7ec4\u6210\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-80",src:n(52595).Z,width:"1552",height:"552"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVComposition")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVCompositionTrack")," \u90fd\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u63d0\u4f9b\u5bf9\u8d44\u6e90\u7684\u53ea\u8bfb\u64cd\u4f5c\u3002\u521b\u5efa\u81ea\u5df1\u7684\u7ec4\u5408\u65f6\uff0c\u9700\u4f7f\u7528\u53ef\u53d8\u5b50\u7c7b\u3002"),(0,i.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5c06\u4e24\u4e2a\u89c6\u9891\u7684\u524d\u4e94\u79d2\u62ff\u51fa\u6765\u3001\u518d\u4ece\u53e6\u5916\u4e00\u4e2a\u89c6\u9891\u4e2d\u63d0\u53d6\u97f3\u9891\uff0c\u5c06\u5b83\u4eec\u7ec4\u5408\u5230\u4e00\u8d77\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'NSURL *url1 = [[NSBundle mainBundle] URLForResource:@"v03" withExtension:@"mp4"];\nNSURL *url2 = [[NSBundle mainBundle] URLForResource:@"v04" withExtension:@"mp4"];\nNSURL *url3 = [[NSBundle mainBundle] URLForResource:@"v05" withExtension:@"mp4"];\nAVAsset *asset1 = [AVURLAsset assetWithURL:url1];\nAVAsset *asset2 = [AVURLAsset assetWithURL:url2];\nAVAsset *asset3 = [AVURLAsset assetWithURL:url3];\n\nAVMutableComposition *composition = [AVMutableComposition composition];\nAVMutableCompositionTrack *videoTrack = [composition addMutableTrackWithMediaType:AVMediaTypeVideo preferredTrackID:kCMPersistentTrackID_Invalid];\nAVMutableCompositionTrack *audioTrack = [composition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid]; // [1]\n\nCMTime cursorTime = kCMTimeZero;\nCMTime videoDuration = CMTimeMake(5, 1);\nCMTimeRange videoTimeRange = CMTimeRangeMake(kCMTimeZero, videoDuration);\n\n// \u5f80\u89c6\u9891\u8f68\u9053\u63d2\u5165\u7b2c\u4e00\u6bb5\u89c6\u9891\nAVAssetTrack *assetTrack = [[asset1 tracksWithMediaType:AVMediaTypeVideo] firstObject];\n[videoTrack insertTimeRange:videoTimeRange ofTrack:assetTrack atTime:cursorTime error:nil];\n// \u79fb\u52a8\u5149\u6807\ncursorTime = CMTimeAdd(cursorTime, videoDuration);\n// \u5f80\u89c6\u9891\u8f68\u9053\u63d2\u5165\u7b2c\u4e8c\u6bb5\u89c6\u9891\nassetTrack = [[asset2 tracksWithMediaType:AVMediaTypeVideo] firstObject];\n[videoTrack insertTimeRange:videoTimeRange ofTrack:assetTrack atTime:cursorTime error:nil];\n// \u91cd\u7f6e\u5149\u6807\ncursorTime = kCMTimeZero;\n\nCMTime audioDuration = composition.duration; // \u76ee\u524d\u5df2\u7ecf\u63d2\u5165\u7684\u957f\u5ea6\nCMTimeRange audioTimeRange = CMTimeRangeMake(kCMTimeZero, audioDuration);\n\n// \u5f80\u97f3\u9891\u8f68\u9053\u63d2\u5165\u97f3\u9891\nassetTrack = [[asset3 tracksWithMediaType:AVMediaTypeAudio] firstObject];\n[audioTrack insertTimeRange:audioTimeRange ofTrack:assetTrack atTime:cursorTime error:nil];\n\n// \u73b0\u5728\u8fd9\u4e2a AVComposition \u4e0e\u5176\u5b83\u4efb\u4f55 AVAsset \u4e00\u6837\uff0c\u53ef\u4ee5\u64ad\u653e\u3001\u5bfc\u51fa\u6216\u5904\u7406\u4e86\n')),(0,i.kt)("p",null,"[1]"," kCMPersistentTrackID_Invalid \u8fd9\u4e2a\u5947\u602a\u7684\u540d\u5b57\u7684\u610f\u601d\u662f\u6211\u4eec\u5c06\u521b\u5efa\u5408\u9002\u7684\u8f68\u9053 ID \u7684\u4efb\u52a1\u59d4\u6258\u7ed9\u6846\u67b6\u3002"),(0,i.kt)("h2",{id:"\u6df7\u5408\u97f3\u9891"},"\u6df7\u5408\u97f3\u9891"),(0,i.kt)("p",null,"\u4e0a\u4e00\u7ae0\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7f16\u8f91\u548c\u7ec4\u5408\u4e86\u4e09\u4e2a\u89c6\u9891\u3002\u4f46\u8fd8\u6709\u4e24\u4e2a\u4f18\u5316\u70b9\uff0c\u4e00\u662f\u89c6\u9891\u58f0\u97f3\u7684\u6de1\u5165\u6de1\u51fa\u6548\u679c\uff1b\u4e8c\u662f\u5f53\u89c6\u9891\u753b\u5916\u97f3\u6301\u7eed\u671f\u95f4\uff0c\u80cc\u666f\u97f3\u4e50\u58f0\u97f3\u8c03\u4f4e\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioMix")," \u7528\u4e8e\u5728\u7ec4\u5408\u7684\u97f3\u9891\u8f68\u9053\u4e2d\u81ea\u5b9a\u4e49\u97f3\u9891\u7684\u5904\u7406\uff0c\u5b83\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"NSObject")," \u7684\u5b50\u7c7b\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img-80",src:n(61628).Z,width:"1469",height:"866"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioMix"),": An object that manages the input parameters for mixing audio tracks."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioMixInputParameters"),": An object that represents the parameters that you apply when adding an audio track to a mix."),(0,i.kt)("p",null,"An instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioMixInputParameters")," isn't required for each audio track that contributes to the mix. Audio for those without associated AVAudioMixInputParameters objects are included in the mix and processed according to the default behavior."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVMutableAudioMixInputParameters")," \u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u97f3\u91cf\u8c03\u8282\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"setVolume:atTime:")," \u5728\u6307\u5b9a\u65f6\u95f4\u70b9\u7acb\u5373\u8c03\u6574\u97f3\u91cf"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"setVolumeRampFromStartVolumn:toEndVolume:timeRange:")," \u5728\u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u5e73\u6ed1\u8fc7\u6e21")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},"// \u6df7\u5408\u97f3\u9891\nCMTime twoSeconds = CMTimeMake(2, 1);\nCMTime fourSeconds = CMTimeMake(4, 1);\nCMTime sevenSeconds = CMTimeMake(7, 1);\n\nAVMutableAudioMixInputParameters *parameters = [AVMutableAudioMixInputParameters audioMixInputParametersWithTrack:audioTrack];\n[parameters setVolume:0.5f atTime:kCMTimeZero];\n\nCMTimeRange range = CMTimeRangeFromTimeToTime(twoSeconds, fourSeconds);\n[parameters setVolumeRampFromStartVolume:0.5f toEndVolume:0.8f timeRange:range];\n\n[parameters setVolume:0.3f atTime:sevenSeconds];\n\nAVMutableAudioMix *audioMix = [AVMutableAudioMix audioMix];\naudioMix.inputParameters = @[parameters];\n// \u73b0\u5728\u8fd9\u4e2a audioMix \u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a AVPlayerItem \u7684 audioMix \u5c5e\u6027\u6765\u8fdb\u884c\u64ad\u653e\uff1b\n// \u6216\u8005\u88ab\u8bbe\u7f6e\u4e3a AVAssetExportSession \u7684 audioMix \u5c5e\u6027\u6765\u8fdb\u884c\u5bfc\u51fa\u3002\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioMix")," \u5728\u5e38\u89c4\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAsset")," \u4e0a\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u97f3\u91cf\u8c03\u6574\uff0c\u7528\u4e8e\u7279\u5b9a\u7684\u64ad\u653e\u548c\u5bfc\u51fa\u573a\u666f\uff0c\u4f8b\u5982\u589e\u52a0\u6de1\u5165\u6de1\u51fa\u6548\u679c\u3002"),(0,i.kt)("h2",{id:"\u89c6\u9891\u8fc7\u6e21\u6548\u679c"},"\u89c6\u9891\u8fc7\u6e21\u6548\u679c"),(0,i.kt)("p",null,"\u89c6\u9891\u8fc7\u6e21\u7684\u6838\u5fc3\u7c7b\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"AVVideoComposition"),"\uff0c\u5b83\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"NSObject")," \u7684\u5b50\u7c7b\uff0c\u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"AVComposition")," \u6ca1\u6709\u5173\u8054\u3002\u4f46\u5b83\u50cf ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAudioMix"),"\u4e00\u6837\uff0c\u53ef\u4ee5\u88ab ",(0,i.kt)("inlineCode",{parentName:"p"},"AVPlayerItem")," \u64ad\u653e\u3001\u88ab ",(0,i.kt)("inlineCode",{parentName:"p"},"AVAssetExportSession")," \u5bfc\u51fa\u7b49\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:n(22400).Z,width:"799",height:"423"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AVVideoComposition")," \u7531\u4e00\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"AVVideoCompositionInstruction")," \u5b9a\u4e49\u7684\u6307\u4ee4\u7ec4\u6210\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"AVVideoCompositionInstruction")," \u6700\u4e3b\u8981\u662f\u63d0\u4f9b\u65f6\u95f4\u8f74\u4e0a\u7684\u4fe1\u606f\uff1b",(0,i.kt)("inlineCode",{parentName:"p"},"AVVideoCompositionLayerInstruction")," \u5219\u5b9a\u4e49\u5bf9\u7ed9\u5b9a\u89c6\u9891\u8f68\u9053\u5e94\u7528\u7684\u6a21\u7cca\u3001\u53d8\u5f62\u3001\u88c1\u526a\u3001\u6eb6\u89e3\u3001\u6de1\u51fa\u7b49\u6548\u679c\u3002"))}d.isMDXComponent=!0},57622:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1619A895-E1D6-420C-AC3A-9E2AB5C55956-545bb7e1e5e6c2f32f67368a00d2e67c.jpg"},50656:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1_zY4oLLDPVGW1cMdhzSHElg-b3a559c821e2925e34240113461be0be.png"},56403:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/4EB5C76B-8346-48FB-87B9-980997AB5C72-24217ad6378f36022fe8b3218ae19d93.jpg"},52595:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/5088C6A0-BECA-4A26-ABB3-9562C6CB8FFA-e768de5d4b2aaf638e2671476eee4c97.jpg"},42803:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/57913ED8-77F7-4955-8676-7932F0F600CF-f2e56fbaa97b0e152f4f8de6b014afb9.jpg"},49875:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/9722A531-B781-480F-9E5D-0A21BEA9EFD3-06b4b88ee9e347d29f83e7f5e1b509e6.jpg"},61628:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/9C9F9D2E-D487-4E85-91FD-69508D2E3076-ba7f04d6d3916d681fc0bb0e142665a5.jpg"},27147:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ACDD1FBC-E058-4EFA-BD1A-F62B4808DA1E-2e2bfd1e764bff5c7ef982c7f0800edf.png"},22400:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/F285A3D2-19CF-4190-903A-E1078789A986-bd2ade7cc784b8bfc1465f81c5825b04.jpg"},36396:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/F4E312F9-71C1-4CE1-8C4D-F1B01B1BBA2A-fe88cacd0e484f727a3bfd2b5fde3bdd.jpg"}}]);