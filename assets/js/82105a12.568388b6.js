"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[189],{91658:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>p,metadata:()=>r,toc:()=>s});var l=t(87462),a=(t(67294),t(3905));t(61839);const p={},i="C++",r={unversionedId:"cpp/cpp",id:"cpp/cpp",title:"C++",description:"C++ Primer, 5th Edition",source:"@site/docs/language/cpp/cpp.md",sourceDirName:"cpp",slug:"/cpp/",permalink:"/docs/language/cpp/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CMake",permalink:"/docs/language/cmake"},next:{title:"C++\u5b9e\u6218 30 \u5929",permalink:"/docs/language/cpp/30days"}},o={},s=[{value:"Hello world",id:"hello-world",level:2},{value:"\u53d8\u91cf\u548c\u57fa\u672c\u7c7b\u578b",id:"\u53d8\u91cf\u548c\u57fa\u672c\u7c7b\u578b",level:2},{value:"\u6ea2\u51fa",id:"\u6ea2\u51fa",level:3},{value:"\u6a21\u9664",id:"\u6a21\u9664",level:3},{value:"\u57fa\u672c\u5185\u7f6e\u7c7b\u578b",id:"\u57fa\u672c\u5185\u7f6e\u7c7b\u578b",level:3},{value:"\u53d8\u91cf",id:"\u53d8\u91cf",level:3},{value:"\u5f15\u7528",id:"\u5f15\u7528",level:3},{value:"\u6307\u9488",id:"\u6307\u9488",level:3},{value:"const \u9650\u5b9a\u7b26",id:"const-\u9650\u5b9a\u7b26",level:3},{value:"Reference to const",id:"reference-to-const",level:3},{value:"Pointer to const, const pointer",id:"pointer-to-const-const-pointer",level:3},{value:"Top-level const and low-level const",id:"top-level-const-and-low-level-const",level:3},{value:"constexpr",id:"constexpr",level:3},{value:"\u7c7b\u578b\u522b\u540d",id:"\u7c7b\u578b\u522b\u540d",level:3},{value:"\u7f16\u5199\u5934\u6587\u4ef6",id:"\u7f16\u5199\u5934\u6587\u4ef6",level:3},{value:"\u5b57\u7b26\u4e32\u3001\u5411\u91cf\u3001\u6570\u7ec4",id:"\u5b57\u7b26\u4e32\u5411\u91cf\u6570\u7ec4",level:2},{value:"string",id:"string",level:3},{value:"vector",id:"vector",level:3},{value:"\u8fed\u4ee3\u5668",id:"\u8fed\u4ee3\u5668",level:3},{value:"\u5185\u7f6e\u6570\u7ec4",id:"\u5185\u7f6e\u6570\u7ec4",level:3},{value:"\u6307\u9488\u4e0e\u6570\u7ec4",id:"\u6307\u9488\u4e0e\u6570\u7ec4",level:3},{value:"C \u98ce\u683c\u5b57\u7b26\u4e32",id:"c-\u98ce\u683c\u5b57\u7b26\u4e32",level:3},{value:"\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5",id:"\u8868\u8fbe\u5f0f\u8bed\u53e5",level:2},{value:"\u57fa\u672c\u6982\u5ff5",id:"\u57fa\u672c\u6982\u5ff5",level:3},{value:"\u4f4d\u8fd0\u7b97\u7b26",id:"\u4f4d\u8fd0\u7b97\u7b26",level:3},{value:"sizeof \u8fd0\u7b97\u7b26",id:"sizeof-\u8fd0\u7b97\u7b26",level:3},{value:"\u7c7b\u578b\u8f6c\u6362",id:"\u7c7b\u578b\u8f6c\u6362",level:3},{value:"\u8df3\u8f6c\u8bed\u53e5",id:"\u8df3\u8f6c\u8bed\u53e5",level:3},{value:"try-catch \u4e0e\u5f02\u5e38\u5904\u7406",id:"try-catch-\u4e0e\u5f02\u5e38\u5904\u7406",level:3},{value:"\u51fd\u6570",id:"\u51fd\u6570",level:2},{value:"\u53c2\u6570\u4f20\u9012",id:"\u53c2\u6570\u4f20\u9012",level:3},{value:"main \u51fd\u6570",id:"main-\u51fd\u6570",level:3},{value:"\u8fd4\u56de\u7c7b\u578b\u548c return \u8bed\u53e5",id:"\u8fd4\u56de\u7c7b\u578b\u548c-return-\u8bed\u53e5",level:3},{value:"\u51fd\u6570\u91cd\u8f7d",id:"\u51fd\u6570\u91cd\u8f7d",level:3},{value:"\u9ed8\u8ba4\u5b9e\u53c2",id:"\u9ed8\u8ba4\u5b9e\u53c2",level:3},{value:"inline \u51fd\u6570",id:"inline-\u51fd\u6570",level:3},{value:"constexpr \u51fd\u6570",id:"constexpr-\u51fd\u6570",level:3},{value:"\u8c03\u8bd5\u5e2e\u52a9",id:"\u8c03\u8bd5\u5e2e\u52a9",level:3},{value:"\u51fd\u6570\u6307\u9488",id:"\u51fd\u6570\u6307\u9488",level:3},{value:"\u52a8\u6001\u5185\u5b58",id:"\u52a8\u6001\u5185\u5b58",level:2},{value:"\u76f4\u63a5\u7ba1\u7406\u5185\u5b58",id:"\u76f4\u63a5\u7ba1\u7406\u5185\u5b58",level:3},{value:"\u667a\u80fd\u6307\u9488",id:"\u667a\u80fd\u6307\u9488",level:3},{value:"\u52a8\u6001\u6570\u7ec4",id:"\u52a8\u6001\u6570\u7ec4",level:3},{value:"\u64cd\u4f5c\u7b26\u91cd\u8f7d",id:"\u64cd\u4f5c\u7b26\u91cd\u8f7d",level:2},{value:"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26",id:"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26",level:3},{value:"\u547d\u540d\u7a7a\u95f4",id:"\u547d\u540d\u7a7a\u95f4",level:2},{value:"\u7279\u6b8a\u5de5\u5177",id:"\u7279\u6b8a\u5de5\u5177",level:2},{value:"\u679a\u4e3e",id:"\u679a\u4e3e",level:3},{value:"union",id:"union",level:3},{value:"\u56fa\u6709\u7684\u4e0d\u53ef\u79fb\u690d\u7684\u7279\u6027",id:"\u56fa\u6709\u7684\u4e0d\u53ef\u79fb\u690d\u7684\u7279\u6027",level:3},{value:"bit-field",id:"bit-field",level:3}],c={toc:s};function u(n){let{components:e,...p}=n;return(0,a.kt)("wrapper",(0,l.Z)({},c,p,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"c"},"C++"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://www.informit.com/store/c-plus-plus-primer-9780321714114"},"C++ Primer, 5th Edition")),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/applenob/Cpp_Primer_Practice"},"Cpp Primer \u5b66\u4e60\u7b14\u8bb0\u548c\u8bfe\u540e\u7ec3\u4e60\u7b54\u6848"))),(0,a.kt)("h2",{id:"hello-world"},"Hello world"),(0,a.kt)("p",null,"Clang \u662f\u82f9\u679c\u5b98\u65b9\u7684\u7528\u6765\u7f16\u8bd1 C \u5bb6\u65cf\u7684\u7f16\u8bd1\u5668\uff0c\u5b83\u662f ",(0,a.kt)("a",{parentName:"p",href:"https://www.llvm.org/"},"LLVM")," \u7684\u4e00\u90e8\u5206\u3002\u76f8\u6bd4\u4e8e Xcode 5 \u7248\u672c\u524d\u4f7f\u7528\u7684 GCC \u6709\u591a\u9879\u4f18\u5316\u3002"),(0,a.kt)("p",null,"\u7f16\u8bd1\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"clang++ main.cpp")),(0,a.kt)("p",null,"\u7f16\u8bd1 C++11\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"clang++ -std=c++11 main.cpp")),(0,a.kt)("p",null,"\u6587\u4ef6\u91cd\u5b9a\u5411\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"./a.out <infile >outfile")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"<<")," \u662f\u8f93\u51fa\u8fd0\u7b97\u7b26\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},">>")," \u662f\u8f93\u5165\u8fd0\u7b97\u7b26\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"endl")," \u662f\u64cd\u7eb5\u7b26 (manipulator)\uff0c\u5199\u5165 endl \u7684\u6548\u679c\u662f\u7ed3\u675f\u5f53\u524d\u884c\uff0c\u5e76\u5c06\u8bbe\u5907\u5173\u8054\u7684 buffer \u4e2d\u7684\u5185\u5bb9\u5237\u65b0\u5230\u8bbe\u5907\u4e2d\u3002\u7f13\u51b2\u5237\u65b0\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u8bc1\u5185\u5b58\u4e2d\u7684\u6570\u636e\u90fd\u771f\u6b63\u5199\u5165\u5230\u8f93\u51fa\u6d41\u4e2d\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"::")," \u662f\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nint main() {\n    int sum = 0, value = 0;\n    // \u4ee5 istream \u5bf9\u8c61\u7684\u72b6\u6001\u4f5c\u4e3a\u68c0\u6d4b\u6761\u4ef6\n    // \u5f53\u9047\u5230 end-of-file (ctrl+D) \u6216\u65e0\u6548\u8f93\u5165\uff08\u8f93\u5165\u7684\u503c\u4e0d\u662f\u4e00\u4e2a\u6574\u6570\uff09\uff0cistream \u72b6\u6001\u5c31\u4f1a\u53d8\u4e3a\u65e0\u6548\n    while (std::cin >> value) {\n        sum += value;\n    }\n    std::cout << "Sum is " << sum << std::endl;\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u7f16\u8bd1\u5e76\u94fe\u63a5\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"clang++ main.cpp fact.cpp"),"\uff0c\u4ea7\u51fa ",(0,a.kt)("inlineCode",{parentName:"p"},"a.out")," \u6587\u4ef6\u3002"),(0,a.kt)("p",null,"\u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u6b65\u9aa4\uff08\u5206\u79bb\u5f0f\u7f16\u8bd1\uff09\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u53ea\u7f16\u8bd1\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"clang++ -c main.cpp"),"\uff0c\u4ea7\u51fa ",(0,a.kt)("inlineCode",{parentName:"li"},"main.o")," \u6587\u4ef6\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u53ea\u7f16\u8bd1\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"clang++ -c fact.cpp"),"\uff0c\u4ea7\u51fa ",(0,a.kt)("inlineCode",{parentName:"li"},"fact.o")," \u6587\u4ef6\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u94fe\u63a5\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"clang++ main.o fact.o"),"\uff0c\u4ea7\u51fa ",(0,a.kt)("inlineCode",{parentName:"li"},"a.out")," \u6587\u4ef6\u3002")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"##")," is called token concatenation, used to concatenate two tokens in a macro invocation."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#define Flutter_CONCAT2(A, B) A##B\n#define Flutter_CONCAT(A, B) Flutter_CONCAT2(A, B)\n")),(0,a.kt)("p",null,"\u4ece\u6807\u51c6\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6\u6bcf\u4e00\u884c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"string line;\nwhile (getline(cin, line))\n    if (!line.empty())\n        cout << line << endl;\n")),(0,a.kt)("h2",{id:"\u53d8\u91cf\u548c\u57fa\u672c\u7c7b\u578b"},"\u53d8\u91cf\u548c\u57fa\u672c\u7c7b\u578b"),(0,a.kt)("h3",{id:"\u6ea2\u51fa"},"\u6ea2\u51fa"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'int main(int argc, const char * argv[]) {\n    // char \u53ef\u4ee5\u8868\u793a [-128, 127] \u4e4b\u95f4\u7684\u6570\n    char c1 = -128;\n    printf("%d\\n", c1); // -128 (0x80, 0b10000000)\n\n    char c2 = 127;\n    printf("%d\\n", c2); // 127 (0x7f, 0b01111111)\n\n    char c3 = -129;\n    printf("%d\\n", c3); // 127 (0x7f, 0b01111111)\n\n    char c4 = 128;\n    printf("%d\\n", c4); // -128 (0x80, 0b10000000)\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u6a21\u9664"},"\u6a21\u9664"),(0,a.kt)("p",null,"\u6a21\u9664\uff08\u53c8\u79f0\u6a21\u6570\u3001\u53d6\u6a21\uff09\uff1aThe modulo operator, denoted by ",(0,a.kt)("inlineCode",{parentName:"p"},"%"),", produces the remainder of an integer division."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.geeksforgeeks.org/modulo-operator-in-c-cpp-with-examples/?ref=lbp"},"Modulo Operator (%) in C/C++ with Examples - GeeksforGeeks")),(0,a.kt)("p",null,"\u6a21\u9664\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u90fd\u53ea\u80fd\u662f\u6574\u578b\uff0c\u4e0d\u80fd\u662f\u6d6e\u70b9\u7c7b\u578b\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u64cd\u4f5c\u6570\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\uff0c\u6a21\u9664\u7ed3\u679c\u7684\u7b26\u53f7\u53d6\u51b3\u4e8e\u673a\u5668\uff0c\u56e0\u4e3a\u8be5\u64cd\u4f5c\u662f\u4e0b\u6ea2\u6216\u4e0a\u6ea2\u7684\u7ed3\u679c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'int main(int argc, const char * argv[]) {\n    // \u6b63\u6574\u6570\u6a21\u9664\n    printf("%d\\n", 3 % 4); // 3\n    printf("%d\\n", 4 % 3); // 1\n    printf("%d\\n", 4 % 2); // 0\n\n    // \u8d1f\u6570\u6a21\u9664\n    printf("%d\\n", -3 % 4); // -3\n    printf("%d\\n", 4 % -2); // 0\n    printf("%d\\n", -3 % -4); // -3\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u57fa\u672c\u5185\u7f6e\u7c7b\u578b"},"\u57fa\u672c\u5185\u7f6e\u7c7b\u578b"),(0,a.kt)("p",null,"\u65e0\u7b26\u53f7\u7c7b\u578b\u4e2d\u6240\u6709\u4f4d\u90fd\u7528\u4e8e\u5b58\u503c\uff1b\u6709\u7b26\u53f7\u7c7b\u578b\uff0cC++\u6807\u51c6\u5e76\u6ca1\u6709\u89c4\u5b9a\u5982\u4f55\u5b58\u50a8\uff0c\u4f46\u7ea6\u5b9a\u4e86\u8d1f\u503c\u4e0e\u6b63\u503c\u95f4\u5c3d\u91cf\u5e73\u8861\u3002"),(0,a.kt)("p",null,"\u5173\u4e8e\u7c7b\u578b\u8f6c\u6362\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u628a\u4e00\u4e2a\u975e\u5e03\u5c14\u7c7b\u578b\u7684\u7b97\u672f\u503c\u8d4b\u7ed9\u5e03\u5c14\u7c7b\u578b\u65f6\uff0c\u521d\u59cb\u503c\u4e3a 0 \u5219\u7ed3\u679c\u4e3a false\uff0c\u5426\u5219\u7ed3\u679c\u4e3a true\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u628a\u4e00\u4e2a\u5e03\u5c14\u503c\u8d4b\u7ed9\u975e\u5e03\u5c14\u7c7b\u578b\u65f6\uff0c\u521d\u59cb\u503c\u4e3a false \u5219\u7ed3\u679c\u4e3a 0\uff0c\u521d\u59cb\u503c\u4e3a true \u5219\u7ed3\u679c\u4e3a 1\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u8d4b\u7ed9\u65e0\u7b26\u53f7\u7c7b\u578b\u4e00\u4e2a\u8d85\u51fa\u5b83\u8868\u793a\u8303\u56f4\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u662f\u521d\u59cb\u503c\u5bf9\u65e0\u7b26\u53f7\u7c7b\u578b\u8868\u793a\u6570\u503c\u603b\u6570\u7684\u6a21\u9664\u3002\u4f8b\u5982\uff0c8 \u4f4d\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"unsigned char")," \u53ef\u4ee5\u8868\u793a 256 \u4e2a\u6570\u3002\u5982\u679c\u6211\u4eec\u8d4b\u4e86\u4e00\u4e2a\u533a\u95f4\u4ee5\u5916\u7684\u503c\uff0c\u5219\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u8be5\u503c\u5bf9 256 \u53d6\u6a21\u540e\u7684\u4f59\u6570\u3002\u56e0\u6b64\uff0c\u628a -1 \u8d4b\u7ed9 ",(0,a.kt)("inlineCode",{parentName:"li"},"unsigned char")," \u6240\u5f97\u7684\u7ed3\u679c\u662f 255\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u8d4b\u7ed9\u5e26\u7b26\u53f7\u7c7b\u578b\u4e00\u4e2a\u8d85\u51fa\u5b83\u8868\u793a\u8303\u56f4\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684 (undefined)\u3002\u6b64\u65f6\uff0c\u7a0b\u5e8f\u53ef\u80fd\u7ee7\u7eed\u5de5\u4f5c\u3001\u53ef\u80fd\u5d29\u6e83\uff0c\u4e5f\u53ef\u80fd\u751f\u6210\u5783\u573e\u6570\u636e\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'int main(int argc, const char * argv[]) {\n    bool b = -1;\n    printf("%s\\n", b ? "true" : "false"); // true\n\n    unsigned char c = -1;\n    printf("%d\\n", c); // 255\uff080xFF\uff0c\u6240\u6709\u4f4d\u90fd\u662f1\uff09\n\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u5207\u52ff\u6df7\u7528\u5e26\u7b26\u53f7\u7c7b\u578b\u548c\u65e0\u7b26\u53f7\u7c7b\u578b\uff01\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"unsigned u = 0;\nint i = -1;\nstd::cout << u + i << std::endl; // 4294967295\uff0c2^32 = 4294967296\n")),(0,a.kt)("p",null,"\u6bcf\u4e2a\u5b57\u9762\u503c\u5e38\u91cf (literal) \u90fd\u5bf9\u5e94\u4e00\u79cd\u7c7b\u578b\uff0c\u5b57\u9762\u91cf\u7684\u5f62\u5f0f\u548c\u503c\u51b3\u5b9a\u4e86\u5b83\u7684\u6570\u636e\u7c7b\u578b\u3002"),(0,a.kt)("p",null,"\u6574\u578b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u4e0b\u9762\u4e09\u4e2a\u6570\u90fd\u8868\u793a 20\nint a = 20; // \u5341\u8fdb\u5236\nint a = 024; // 0 \u5f00\u5934\u7684\u6574\u6570\u8868\u793a\u516b\u8fdb\u5236\u6570\nint a = 0x14; // 0x \u6216 0X \u5f00\u5934\u7684\u6574\u6570\u8868\u793a\u5341\u516d\u8fdb\u5236\u6570\n\n// \u6700\u5c0f\u5339\u914d\u7c7b\u578b\u5c31\u662f\u80fd\u5bb9\u7eb3\u8fd9\u4e2a\u5b57\u9762\u91cf\u7684\u3001\u5c3a\u5bf8\u6700\u5c0f\u7684\u7c7b\u578b\nint a = 10; // \u6700\u5c0f\u5339\u914d\u7c7b\u578b int\nunsigned int a = 10u; // \u6700\u5c0f\u5339\u914d\u7c7b\u578b unsigned\nlong a = 10L; // \u6700\u5c0f\u5339\u914d\u7c7b\u578b long\nunsigned long a = 10UL; // \u6700\u5c0f\u5339\u914d\u7c7b\u578b unsigned long\n")),(0,a.kt)("p",null,"C++ 14 \u6807\u51c6\u91cc\u65b0\u589e\u4e86\u4e8c\u8fdb\u5236\u7c7b\u578b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int x = 0b00010000;\n")),(0,a.kt)("p",null,"\u6d6e\u70b9\u578b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double b = 3.14; // \u6d6e\u70b9\u578b\u9ed8\u8ba4\u662f double\nfloat b = 3.14f;\nlong double b = 3.14L;\ndouble b = 10.;\ndouble b = 10e-2; // \u6307\u6570\u90e8\u5206\u7528 e \u6216 E \u8868\u793a\nlong double b = 3.14e0L;\n")),(0,a.kt)("p",null,"\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"char c = 'a'; // \u5b57\u7b26\nwchar_t c = L'a'; // \u5bbd\u5b57\u7b26\n\nchar s[] = \"a\"; // \u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7684\u7c7b\u578b\u5b9e\u9645\u4e0a\u662f\u5b57\u7b26\u6784\u6210\u7684\u6570\u7ec4\ncout << strlen(s) << endl; // 1\n\n// \u5bf9\u4e8e C \u6570\u7ec4\uff0cC++ \u6ca1\u6709\u63d0\u4f9b\u65b9\u6cd5\u76f4\u63a5\u8ba1\u7b97\u5176\u957f\u5ea6\uff0c\u53ef\u4ee5\u501f\u52a9 sizeof()\u3001begin()\u3001end() \u95f4\u63a5\u8ba1\u7b97\u5176\u957f\u5ea6\u3002\n// \u7f16\u8bd1\u5668\u4f1a\u5728\u5b57\u7b26\u6570\u7ec4\u7ed3\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u5b57\u7b26 '\\0'\uff0c\u56e0\u6b64\u6570\u7ec4\u957f\u5ea6\u4f1a\u6bd4\u5b83\u7684\u5185\u5bb9\u591a 1\nint length = sizeof (s) / sizeof (s[0]);\ncout << length << endl; // 2\nint length2 = std::end(s1) - std::begin(s1);\ncout << length2 << endl; // 2\n\nwchar_t s[] = L\"abc\"; // \u5bbd\u5b57\u7b26\u6570\u7ec4\n")),(0,a.kt)("p",null,"\u8f6c\u4e49\u5b57\u7b26\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \\ \u540e\u9762\u8ddf\u7740\u516b\u8fdb\u5236\u6570\u5b57\u3001\\x \u540e\u9762\u8ddf\u7740\u5341\u516d\u8fdb\u5236\u8868\u793a\u8f6c\u4e49\u5b57\u7b26\nchar c = '\\10';\nchar c = '\\x4d';\n")),(0,a.kt)("h3",{id:"\u53d8\u91cf"},"\u53d8\u91cf"),(0,a.kt)("p",null,"\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5e76\u521d\u59cb\u5316\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// C++98\nint units_sold1 = 1;\nint units_sold2 = {2};\nint units_sold3(3);\n\n// C++11\nint units_sold4{4}; // \u7528\u82b1\u62ec\u53f7\u521d\u59cb\u5316\u7684\u5f62\u5f0f\u79f0\u4e3a\u5217\u8868\u521d\u59cb\u5316 (list initialization)\n")),(0,a.kt)("p",null,"\u5217\u8868\u521d\u59cb\u5316\u65f6\u5982\u679c\u5b58\u5728\u4e22\u5931\u4fe1\u606f\u7684\u98ce\u9669\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"long double ld = 3.1415926;\nint a(ld), b = ld; // \u53ef\u4ee5\u7f16\u8bd1\nint c{ld}, d = {ld}; // \u274c \u62a5\u9519\n")),(0,a.kt)("p",null,"\u51fd\u6570\u4f53\u5185\u7684\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u5176\u503c\u672a\u5b9a\u4e49\uff1b\u7c7b\u7684\u5bf9\u8c61\u6ca1\u6709\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5176\u503c\u7531\u7c7b\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u786e\u5b9a\u3002"),(0,a.kt)("p",null,"\u5206\u79bb\u5f0f\u7f16\u8bd1\u6307\u7684\u662f\u5141\u8bb8\u5c06\u7a0b\u5e8f\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u72ec\u7acb\u7f16\u8bd1\u3002\u4e3a\u4e86\u652f\u6301\u5206\u79bb\u5f0f\u7f16\u8bd1\uff0cC++ \u5c06\u58f0\u660e (declaration) \u4e0e\u5b9a\u4e49 (definition) \u533a\u5206\u5f00\u3002\u53d8\u91cf\u7684\u5b9a\u4e49\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5176\u5b83\u7528\u5230\u8be5\u53d8\u91cf\u7684\u6587\u4ef6\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u58f0\u660e\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"extern int i; // \u58f0\u660e i\nint j; // \u58f0\u660e\u5e76\u5b9a\u4e49 j\n")),(0,a.kt)("p",null,"\u4f5c\u7528\u57df\u53ef\u4ee5\u5d4c\u5957\uff0c\u5916\u5c42\u7684\u53eb outer scope\uff0c\u5185\u5c42\u7684\u53eb inner scope\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void test() { // \u540d\u5b57 test \u62e5\u6709\u5168\u5c40\u4f5c\u7528\u57df (global scope)\n    int sum = 0; // \u540d\u5b57 sum \u62e5\u6709\u5757\u4f5c\u7528\u57df (block scope)\n}\n")),(0,a.kt)("h3",{id:"\u5f15\u7528"},"\u5f15\u7528"),(0,a.kt)("p",null,"\u76ee\u524d\u6211\u4eec\u63a5\u89e6\u5230\u7684\u53d8\u91cf\u58f0\u660e\uff0c\u7531\u4e00\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b + \u4e00\u4e2a\u53d8\u91cf\u540d\u7ec4\u6210\u3002\u73b0\u5728\u6211\u4eec\u5b66\u4e60\u66f4\u590d\u6742\u7684\u58f0\u660e\uff0c\u5b83\u57fa\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5f97\u5230\u66f4\u590d\u6742\u7684\u7c7b\u578b\u3002"),(0,a.kt)("p",null,"\u5f15\u7528\u5373\u522b\u540d\uff0c\u662f\u5df2\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u53e6\u4e00\u4e2a\u540d\u5b57\u3002\u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff01\u5b9a\u4e49\u5f15\u7528\u65f6\uff0c\u7a0b\u5e8f\u628a\u5f15\u7528\u548c\u5b83\u7684\u521d\u59cb\u503c\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002\u65e0\u6cd5\u4ee4\u5f15\u7528\u91cd\u65b0\u7ed1\u5b9a\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int ival = 1024;\nint &refVal = ival; // \u2705 refVal \u6307\u5411 ival\uff08\u662f ival \u7684\u53e6\u4e00\u4e2a\u540d\u5b57\uff09\nint &refVal2; // \u274c \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff01\nint &refVal3 = refVal // \u2705 \u5c06 refVal3 \u4e5f\u7ed1\u5b9a\u5230 ival \u4e0a\n")),(0,a.kt)("p",null,"\u5b9a\u4e49\u4e86\u5f15\u7528\u4e4b\u540e\uff0c\u64cd\u4f5c\u5f15\u7528\u5c31\u662f\u64cd\u4f5c\u5b83\u7ed1\u5b9a\u7684\u5bf9\u8c61\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'refVal = 2048;\nstd::cout << ival << std::endl; // 2048\n\nint i = 10, &r1 = i;\ndouble d = 3.14, &r2 = d;\nr2 = r1; // \u7b49\u4ef7\u4e8e d = i;\nstd::cout << d << std::endl; // 10\nr1 = 20;\nr2 = 31.4;\nstd::cout << i << " " << d << std::endl;\n')),(0,a.kt)("p",null,"\u5f15\u7528\u672c\u8eab\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e0d\u80fd\u5b9a\u4e49\u5f15\u7528\u7684\u5f15\u7528\u3002"),(0,a.kt)("p",null,"\u5f15\u7528\u5fc5\u987b\u7ed1\u5b9a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e0d\u53ef\u4ee5\u7ed1\u5b9a\u4e00\u4e2a literal \u6216\u8005\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int &ref2 = 10; // \u274c\nint &ref3 = 10 + 10; // \u274c\n")),(0,a.kt)("h3",{id:"\u6307\u9488"},"\u6307\u9488"),(0,a.kt)("p",null,"A reference refers to another type. A pointer points to another type. \u5f15\u7528\u672c\u8eab\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61\uff1b\u6307\u9488\u672c\u8eab\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5141\u8bb8\u5bf9\u6307\u9488\u8fdb\u884c\u8d4b\u503c\u548c\u62f7\u8d1d\u3002"),(0,a.kt)("p",null,"\u5f15\u7528\u4e00\u65e6\u5b9a\u4e49\uff0c\u5c31\u7ed1\u5b9a\u4e86\u5b83\u521d\u59cb\u5316\u7684\u5bf9\u8c61\uff0c\u65e0\u6cd5\u4ee4\u5176\u7ed1\u5b9a\u5230\u5176\u5b83\u7684\u5bf9\u8c61\uff1b\u6307\u9488\u65e0\u987b\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff0c\u53ef\u4ee5\u968f\u65f6\u7ed9\u5b83\u8d4b\u503c\u4e00\u4e2a\u65b0\u7684\u5730\u5740\uff0c\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,"\u6307\u9488\u7528\u4e8e\u5b58\u653e\u67d0\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\u3002\u83b7\u53d6\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u7528\u53d6\u5730\u5740\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"&"),"\u3002\u6307\u9488\u7684\u7c7b\u578b\uff0c\u8981\u548c\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u7c7b\u578b\u4e25\u683c\u5339\u914d\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int ival = 42;\nint *pt = &ival;  // pt \u5b58\u653e ival \u7684\u5730\u5740\uff0c\u6216\u8005\u8bf4 pt \u662f\u6307\u5411 ival \u7684\u6307\u9488\n")),(0,a.kt)("p",null,"\u5982\u679c\u6307\u9488\u6307\u5411\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u89e3\u5f15\u7528\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"*")," \u6765\u8bbf\u95ee\u8be5\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"std::cout << *pt << std::endl;")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"&")," \u51fa\u73b0\u5728\u58f0\u660e\u4e2d\uff0c\u4ee3\u8868\u5f15\u7528\uff1b\u51fa\u73b0\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4ee3\u8868\u53d6\u5730\u5740\u7b26\uff01"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"*")," \u51fa\u73b0\u5728\u58f0\u660e\u4e2d\uff0c\u4ee3\u8868\u6307\u9488\uff1b\u51fa\u73b0\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4ee3\u8868\u89e3\u5f15\u7528\u7b26\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 10; // \u58f0\u660e\u5e76\u5b9a\u4e49 i\uff0c\u5e76\u521d\u59cb\u5316\u5b83\u7684\u503c\u4e3a 10\nint &r = i; // r \u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u5373 i \u7684\u4e00\u4e2a\u522b\u540d\nint *p; // p \u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\np = &i; // \u53d6 i \u7684\u5730\u5740\uff0c\u8d4b\u503c\u7ed9 p\uff0cp \u6307\u5411 i\n*p = i; // \u5c06 i \u7684\u503c\u8d4b\u503c\u7ed9 p \u6307\u5411\u7684\u5bf9\u8c61\nint &r2 = *p; // \u5b9a\u4e49\u5f15\u7528\u7c7b\u578b r2 \u5e76\u7ed1\u5b9a\u5230 p \u6307\u5411\u7684\u5bf9\u8c61\n\nint j = 42, *p2 = &j;\nint *&pref = p2;  // pref is a reference to the pointer p2\n// prints the value of j, which is the int to which p2 points\nstd::cout << *pref << std::endl;\n// pref refers to a pointer; assigning &i to pref makes p point to i\npref = &i; // \u5f15\u7528\u4e0d\u53ef\u4ee5\u7ed1\u5b9a\u5230\u522b\u7684\u5bf9\u8c61\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\u6307\u5411\nstd::cout << *pref << std::endl; // prints the value of i\n")),(0,a.kt)("p",null,"\u7a7a\u6307\u9488\u4e0d\u6307\u5411\u4efb\u4f55\u5bf9\u8c61\uff0c\u5728\u8bd5\u56fe\u4f7f\u7528\u4e00\u4e2a\u6307\u9488\u4e4b\u524d\uff0c\u5e94\u8be5\u68c0\u67e5\u5b83\u662f\u5426\u4e3a\u7a7a\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"NULL")," \u662f\u9884\u5904\u7406\u53d8\u91cf (preprocessor variable)\uff0c\u5b9a\u4e49\u5728 cstdlib\uff0c\u5b83\u7684\u503c\u5c31\u662f 0\uff1b\u9884\u5904\u7406\u5668 (preprocessor) \u662f\u8fd0\u884c\u4e8e\u7f16\u8bd1\u4e4b\u524d\u7684\u4e00\u6bb5\u7a0b\u5e8f\u3002\u5728\u73b0\u884c\u6807\u51c6\u4e0b\uff0c\u6700\u597d\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"nullptr"),"\uff0c\u907f\u514d\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"NULL"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int *p1 = nullptr; // literal\nint *p2 = 0; // literal\nint *p3 = NULL;\n")),(0,a.kt)("p",null,"0 \u6307\u9488\u7684\u6761\u4ef6\u503c\u662f false\uff1b\u975e 0 \u6307\u9488\u7684\u6761\u4ef6\u503c\u662f true\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int *pi1 = 0;\nint *pi2 = &ival;\nif (!pi1) {\n    std::cout << pi1 << std::endl; // 0x0\n}\nif (pi2) {\n    std::cout << pi2 << std::endl;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void *")," \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6307\u9488\uff0c\u5b83\u53ef\u4ee5\u5b58\u653e\u4efb\u610f\u5bf9\u8c61\u7684\u5730\u5740\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double obj = 3.14;\nvoid *pv = &obj;\n")),(0,a.kt)("p",null,"\u6307\u9488\u7684\u6307\u9488\uff1a\u6307\u9488\u662f\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\uff0c\u548c\u5176\u5b83\u5bf9\u8c61\u4e00\u6837\u4e5f\u6709\u81ea\u5df1\u7684\u5730\u5740\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6307\u9488\u7684\u5730\u5740\u518d\u5b58\u653e\u5230\u53e6\u4e00\u4e2a\u6307\u9488\u4e2d\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"int **ppi = &pi2; // ppi -> pi2 -> ival")),(0,a.kt)("h3",{id:"const-\u9650\u5b9a\u7b26"},"const \u9650\u5b9a\u7b26"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"const")," \u4fee\u9970\u7684\u53d8\u91cf\uff0c\u5176\u503c\u4e0d\u53ef\u6539\u53d8\u3002"),(0,a.kt)("p",null,"\u9ed8\u8ba4\u72b6\u6001\u4e0b\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"const")," \u5bf9\u8c61\u4ec5\u5728\u672c\u6587\u4ef6\u5185\u6709\u6548\u3002\u60f3\u5728\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," \u5bf9\u8c61\uff0c\u5fc5\u987b\u5728\u53d8\u91cf\u5b9a\u4e49\u524d\u6dfb\u52a0 ",(0,a.kt)("inlineCode",{parentName:"p"},"extern")," \u5173\u952e\u5b57\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nconst int bufSize = 512; // \u672c\u6587\u4ef6\u5185\u6709\u6548\nextern const int bufSize2 = 512;\nint main() {\n    return 0;\n}\n")),(0,a.kt)("p",null,"const \u5bf9\u8c61\u5fc5\u987b\u521d\u59cb\u5316\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"const int k; // \u274c")),(0,a.kt)("h3",{id:"reference-to-const"},"Reference to const"),(0,a.kt)("p",null,"\u7ed1\u5b9a\u5230\u5e38\u91cf\u5bf9\u8c61\u9700\u8981\u58f0\u660e reference to const\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"const int ci = 1024;\nconst int &r1 = ci;\nr1 = 42; // \u274c ci \u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\nint &r2 = ci; // \u274c \u666e\u901a\u5f15\u7528\u4e0d\u80fd\u7ed1\u5b9a\u5230\u5e38\u91cf\u5bf9\u8c61\n")),(0,a.kt)("p",null,"\u521d\u59cb\u5316 reference to const \u65f6\u5141\u8bb8\u7528\u4efb\u610f\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u521d\u59cb\u503c\uff0c\u53ea\u8981\u8be5\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5f15\u7528\u7684\u7c7b\u578b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 42;\nconst int &r1 = i;\nconst int &r2 = 42; // \u2705 \u5141\u8bb8 const int& \u7ed1\u5b9a\u5230\u5b57\u9762\u503c\nconst int &r3 = r1 * 2; // \u2705\n")),(0,a.kt)("p",null,"\u6ce8\u610f\u5f15\u7528\u7ed1\u5b9a\u4e2d\u7684\u9690\u5f0f\u8f6c\u6362\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double dval = 3.14;\nconst int &r6 = dval; // \u7531\u4e8e r6 \u7684\u7c7b\u578b\u662f\u6574\u6570\uff0c\u5b9e\u9645\u4e0a\u7ed1\u5b9a\u5230\u4e86\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61 const int temp = dval;\ndval = 10.24;\nstd::cout << r6 << std::endl; // 3\n")),(0,a.kt)("p",null,"\u5141\u8bb8 reference to const \u5f15\u7528\u975e\u5e38\u91cf\u5bf9\u8c61\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 42;\nconst int &r = i; // \u2705 \u5141\u8bb8 const int& \u7ed1\u5b9a\u5230\u666e\u901a int \u5bf9\u8c61\u4e0a\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7 r \u4fee\u6539\u53d8\u91cf i \u7684\u503c\ni = 84; // \u867d\u7136\u4e0d\u80fd\u901a\u8fc7 r \u4fee\u6539\u53d8\u91cf i \u7684\u503c\uff0c\u4f46 i \u6bd5\u7adf\u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u5b83\u9014\u5f84\u4fee\u6539\nstd::cout << r << std::endl; // 84\n")),(0,a.kt)("h3",{id:"pointer-to-const-const-pointer"},"Pointer to const, const pointer"),(0,a.kt)("p",null,"\u8981\u60f3\u5b58\u653e\u5e38\u91cf\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u53ea\u80fd\u4f7f\u7528\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488 (pointer to const)\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"const double pi = 3.14;\nconst double *cptr = &pi;\n")),(0,a.kt)("p",null,"\u5141\u8bb8 pointer to const \u6307\u5411\u975e\u5e38\u91cf\uff0cpointer to const \u53ea\u662f\u8981\u6c42\u4e0d\u80fd\u901a\u8fc7\u672c\u6307\u9488\u6539\u53d8\u6240\u6307\u5bf9\u8c61\u7684\u503c\uff0c\u4f46\u90a3\u4e2a\u6240\u6307\u5bf9\u8c61\u7684\u503c\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u9014\u5f84\u6539\u53d8\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double dval = 3.14;\ncptr = &dval;\ndval = 10.0\n")),(0,a.kt)("p",null,"const pointer \u662f\u4e0d\u4f1a\u6539\u53d8\u6307\u5411\u7684\u6307\u9488\uff0c\u5b83\u4e00\u65e6\u521d\u59cb\u5316\uff0c\u5c31\u6c38\u8fdc\u6307\u5411\u90a3\u4e2a\u5bf9\u8c61\u3002const pointer \u5fc5\u987b\u88ab\u521d\u59cb\u5316\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int errNumb = 0;\nint *const curErr = &errNumb;\nconst double pi2 = 3.14159;\nconst double *const pip = &pi2; // \u5f04\u6e05\u695a\u58f0\u660e\u7684\u542b\u4e49\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u662f\u4ece\u53f3\u5411\u5de6\u8bfb\uff1apip is a const pointer to const double\n")),(0,a.kt)("h3",{id:"top-level-const-and-low-level-const"},"Top-level const and low-level const"),(0,a.kt)("p",null,"const pointer (top-level const): \u6307\u9488\u672c\u8eab\u662f\u4e00\u4e2a\u5e38\u91cf\u3002"),(0,a.kt)("p",null,"pointer to const (low-level const): \u6307\u9488\u6240\u6307\u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u5e38\u91cf\u3002"),(0,a.kt)("p",null,"\u66f4\u4e00\u822c\u5730\uff0c\u9876\u5c42 const \u53ef\u4ee5\u8868\u793a\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u662f\u5e38\u91cf\uff1b\u5e95\u5c42 const \u5219\u4e0e\u6307\u9488\u3001\u5f15\u7528\u7b49\u590d\u5408\u7c7b\u578b\u7684\u57fa\u672c\u7c7b\u578b\u90e8\u5206\u6709\u5173\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 0;\nint *const p1 = &i;  // top-level const\nconst int ci = 42;   // top-level const\nconst int *p2 = &ci; // low-level const\nconst int &r = ci;   // low-level const\nconst int *const p3 = p2; // top-level and low-level const\n")),(0,a.kt)("p",null,"\u5b83\u4eec\u7684\u533a\u522b\u4e3b\u8981\u4f53\u73b0\u5728\u62f7\u8d1d\u64cd\u4f5c\u65f6\u3002top-level const \u4e0d\u5b58\u5728\u9650\u5236\uff1blow-level const \u5219\u5b58\u5728\u4e00\u4e9b\u9650\u5236\u3002\u975e\u5e38\u91cf\u53ef\u4ee5\u8f6c\u4e3a\u5e38\u91cf\uff0c\u53cd\u4e4b\u5219\u4e0d\u884c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int *p = p2; // \u274c\nint &r2 = ci; // \u274c\n")),(0,a.kt)("h3",{id:"constexpr"},"constexpr"),(0,a.kt)("p",null,"\u5e38\u91cf\u8868\u8fbe\u5f0f\u662f\u6307\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5c31\u80fd\u8ba1\u7b97\u51fa\u7ed3\u679c\u7684\u8868\u8fbe\u5f0f\u3002"),(0,a.kt)("p",null,"C++11 \u5141\u8bb8\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u4ee5\u4fbf\u7f16\u8bd1\u5668\u9a8c\u8bc1\u53d8\u91cf\u503c\u662f\u5426\u662f\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002"),(0,a.kt)("p",null,"\u5982\u679c\u4f60\u80af\u5b9a\u53d8\u91cf\u662f\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u90a3\u5c31\u628a\u5b83\u58f0\u660e\u6210 ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u5427\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr int mf = 20;\nconstexpr int limit = mf + 1;\n")),(0,a.kt)("p",null,"\u58f0\u660e ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u65f6\u7528\u5230\u7684\u7c7b\u578b\u662f\u5b57\u9762\u503c\u7c7b\u578b (literal type)\uff0c\u7b97\u672f\u7c7b\u578b\u3001\u6307\u9488\u3001\u5f15\u7528\u3001\u5b57\u9762\u503c\u5e38\u91cf\u7c7b\u3001\u679a\u4e3e\u7c7b\u578b\u90fd\u5c5e\u4e8e\u5b57\u9762\u503c\u7c7b\u578b\uff1b\u81ea\u5b9a\u4e49\u7684\u7c7b\u3001IO \u5e93\u3001string \u7c7b\u578b\u4e0d\u662f\u5b57\u9762\u503c\u7c7b\u578b\u3002"),(0,a.kt)("p",null,"\u51fd\u6570\u4f53\u5185\u7684\u53d8\u91cf\u5e76\u975e\u5b58\u653e\u5728\u56fa\u5b9a\u5730\u5740\uff0c\u56e0\u6b64 ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u6307\u9488\u4e0d\u80fd\u6307\u5411\u8fd9\u6837\u7684\u53d8\u91cf\u3002\u5b9a\u4e49\u4e8e\u6240\u6709\u51fd\u6570\u4f53\u4e4b\u5916\u7684\u5bf9\u8c61\uff0c\u5176\u5730\u5740\u56fa\u5b9a\u4e0d\u53d8\uff0c\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316 ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u6307\u9488\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u4fee\u9970\u7684\u6307\u9488\u662f\u5e38\u91cf\u6307\u9488\uff0c\u6307\u7684\u662f\u7f16\u8bd1\u671f\u5c31\u80fd\u591f\u77e5\u9053\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u54ea\u91cc\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u6307\u9488\u65e2\u53ef\u4ee5\u6307\u5411\u5e38\u91cf\u4e5f\u53ef\u4ee5\u6307\u5411\u975e\u5e38\u91cf\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"const int *p = nullptr; // p \u662f pointer to const\nconstexpr int *q = nullptr; // q \u662f const pointer\n")),(0,a.kt)("h3",{id:"\u7c7b\u578b\u522b\u540d"},"\u7c7b\u578b\u522b\u540d"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef double wages;\ntypedef double *dptr;\ntypedef char *pstring;\n\nwages i = 3.14;\ndptr p = &i;\nchar c = 'c';\npstring cstr = &c;\n")),(0,a.kt)("h3",{id:"\u7f16\u5199\u5934\u6587\u4ef6"},"\u7f16\u5199\u5934\u6587\u4ef6"),(0,a.kt)("p",null,"\u5934\u6587\u4ef6\u901a\u5e38\u5305\u542b\u90a3\u4e9b\u53ea\u80fd\u88ab\u5b9a\u4e49\u4e00\u6b21\u7684\u5b9e\u4f53\uff0c\u6bd4\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"class"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"struct"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"const"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr"),"\u3002"),(0,a.kt)("p",null,"\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\uff08\u663e\u5f0f\u6216\u9690\u5f0f\uff09\u4f1a\u5e26\u6765\u95ee\u9898\uff0c\u786e\u4fdd\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\u4ecd\u80fd\u5b89\u5168\u5de5\u4f5c\u7684\u6280\u672f\u662f preprocessor\u3002"),(0,a.kt)("p",null,"\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u9884\u5904\u7406\u53d8\u91cf\u5fc5\u987b\u552f\u4e00\uff0c\u901a\u5e38\u505a\u6cd5\u662f\u7528\u5934\u6587\u4ef6\u7684\u540d\u5b57\u5927\u5199\u6765\u4fdd\u8bc1\u552f\u4e00\u6027\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef SALES_DATA_H\n#define SALES_DATA_H\n#include <string>\n// \u7c7b\u6240\u5728\u7684\u5934\u6587\u4ef6\u540d\u5b57\u5e94\u4e0e\u7c7b\u4e00\u6837\nstruct Sales_data {\n    std::string bookNo;\n    unsigned units_bold = 0; // C++11 in-class initializer\n    double revenue = 0; // C++11 in-class initializer\n};\n#endif\n")),(0,a.kt)("h2",{id:"\u5b57\u7b26\u4e32\u5411\u91cf\u6570\u7ec4"},"\u5b57\u7b26\u4e32\u3001\u5411\u91cf\u3001\u6570\u7ec4"),(0,a.kt)("h3",{id:"string"},"string"),(0,a.kt)("p",null,"\u5b57\u7b26\u4e32\u76f4\u63a5\u521d\u59cb\u5316\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'// direct initialization\nstring s1; // ""\nstring s2(10, \'c\');\nstring s3(s1);\nstring s4("value");\n')),(0,a.kt)("p",null,"\u5b57\u7b26\u4e32\u62f7\u8d1d\u521d\u59cb\u5316\uff1a\u7f16\u8bd1\u5668\u628a\u7b49\u53f7\u53f3\u4fa7\u7684\u521d\u59cb\u503c\uff0c\u62f7\u8d1d\u5230\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u4e2d\u53bb\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"string s = string(10, 'c');\n// \u7b49\u4ef7\u4e8e\nstring temp(10, 'c');\nstring s = temp;\n\nstring s = \"hiya\";\n// \u7b49\u4ef7\u4e8e\nstring temp(\"hiya\");\nstring s = temp;\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u7c7b\u548c\u5176\u5b83\u5927\u591a\u6570\u6807\u51c6\u5e93\u7c7b\u578b\uff0c\u90fd\u5b9a\u4e49\u4e86\u51e0\u79cd\u914d\u5957\u7684\u7c7b\u578b\uff0c\u4f8b\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"size_type"),"\u3002\u8fd9\u4e9b\u914d\u5957\u7c7b\u578b\u4f53\u73b0\u4e86\u6807\u51c6\u5e93\u7c7b\u578b\u4e0e\u673a\u5668\u65e0\u5173\u7684\u7279\u6027\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"std::string::size_type size = line.size();")),(0,a.kt)("p",null,"\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u4e3a\u4e86\u4e0e C \u517c\u5bb9\uff0c\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u4e0d\u662f C++ \u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u5bf9\u8c61\uff0c\u800c\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u56e0\u6b64\u4e0d\u80fd\u628a\u5b57\u9762\u503c\u76f4\u63a5\u76f8\u52a0\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'string s2 = s1 + " hello"; // \u2705 string \u5bf9\u8c61\u4e0e\u5b57\u9762\u503c\u76f8\u52a0\nstring s = "Hello" + " world!"; // \u274c\n')),(0,a.kt)("p",null,"C++ \u6807\u51c6\u5e93\u517c\u5bb9\u4e86 C \u6807\u51c6\u5e93\uff0cC \u8bed\u8a00\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"ctype.h")," \u6587\u4ef6\uff0cC++ \u547d\u540d\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"cctype"),"\uff0c\u5373\u53bb\u6389 ",(0,a.kt)("inlineCode",{parentName:"p"},".h")," \u540e\u7f00\uff0c\u52a0\u4e0a ",(0,a.kt)("inlineCode",{parentName:"p"},"c")," \u524d\u7f00\uff0c\u4f7f\u5176\u7b26\u5408 C++ \u547d\u540d\u89c4\u8303\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <cctype>\n\n// \u6807\u51c6\u5e93\u7684\u4e00\u4e9b\u51fd\u6570\nusing std::isupper; using std::toupper;\nusing std::islower; using std::tolower;\nusing std::isalpha; using std::isspace;\n\nchar c = 'c';\nbool b = isalpha(c);\ncout << b << endl;\n")),(0,a.kt)("p",null,"\u4f7f\u7528 for \u8bed\u53e5\u64cd\u4f5c\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u503c\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012\u7684\u533a\u522b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u6bcf\u6b21\u8fed\u4ee3\uff0c\u53d8\u91cf c \u88ab\u521d\u59cb\u5316\u4e3a str \u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u503c\nfor (const char c : str)\n    cout << c << endl;\n\n// \u4f7f\u7528\u5f15\u7528\u7c7b\u578b\u4f5c\u4e3a\u5faa\u73af\u53d8\u91cf\uff0c\u6bcf\u6b21\u8fed\u4ee3\u5f15\u7528\u4f1a\u7ed1\u5b9a\u5230\u5e8f\u5217\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0a\nfor (char &c : str)\n    c = toupper(c);\ncout << str << endl;\n")),(0,a.kt)("h3",{id:"vector"},"vector"),(0,a.kt)("p",null,"\u6a21\u677f\u7684\u4f5c\u7528\u662f\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u5982\u4f55\u751f\u6210\u7c7b\u6216\u51fd\u6570\u3002\u7f16\u8bd1\u5668\u6839\u636e\u6a21\u677f\u751f\u6210\u7c7b\u6216\u51fd\u6570\u7684\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u5b9e\u4f8b\u5316 (instantiation)\u3002"),(0,a.kt)("p",null,"C++ \u65e2\u6709\u7c7b\u6a21\u677f\uff0c\u4e5f\u6709\u51fd\u6570\u6a21\u677f\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u662f\u7c7b\u6a21\u677f (class template)\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u662f\u5bf9\u8c61\u7684\u96c6\u5408\uff0c\u4e5f\u79f0\u4e3a\u5bb9\u5668\u3002\u6211\u4eec\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6765\u6307\u5b9a\u6a21\u677f\u5b9e\u4f8b\u5316\u6210\u4ec0\u4e48\u6837\u7684\u7c7b\u3002\u5bf9\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u8fd9\u4e2a\u7c7b\u6a21\u677f\u6765\u8bf4\uff0c\u63d0\u4f9b\u7684\u989d\u5916\u4fe1\u606f\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u5185\u5b58\u653e\u5bf9\u8c61\u7684\u7c7b\u578b\u3002\u63d0\u4f9b\u4fe1\u606f\u7684\u65b9\u5f0f\u662f\uff0c\u5728\u6a21\u677f\u540d\u5b57\u540e\u9762\u52a0\u4e0a\u5c16\u62ec\u53f7\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int n = 5; // \u5143\u7d20\u4e2a\u6570\nvector<int> v1;\nvector<int> v2(v1); // v2 \u4e2d\u5305\u542b\u6709 v1 \u6240\u6709\u5143\u7d20\u7684\u526f\u672c\nvector<int> v3 = v1; // \u540c\u4e0a\nvector<int> v4(n, 100);\nvector<int> v5(n);\nvector<int> v6{1, 2, 3, 4, 5}; // C++11\nvector<int> v7 = {1, 2, 3, 4, 5}; // C++11\n\nvector<vector<int>> ivec;\nvector<string> v8{10}; // 10 \u4e2a\u7a7a\u5b57\u7b26\u4e32\n\nfor (int i = 0; i < 5; ++i) {\n    v1.push_back(i);\n}\n\n// for-in \u8bed\u53e5\u4f53\u5185\u4e0d\u80fd\u6709\u4f1a\u6539\u53d8\u5bb9\u5668 size \u7684\u64cd\u4f5c\n// \u6253\u5370 vector \u4e2d\u7684\u6240\u6709\u5143\u7d20\nfor (auto i : dp)\n    std::cout << i << ',';\n")),(0,a.kt)("h3",{id:"\u8fed\u4ee3\u5668"},"\u8fed\u4ee3\u5668"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> vec(10, 100);\n// end \u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u79f0\u4e3a\u201c\u5c3e\u540e\u8fed\u4ee3\u5668\u201d\uff0c\u6307\u5411\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4f4d\u7f6e\nfor (vector<int>::iterator it = vec.begin(); it != vec.end(); ++it) {\n    *it = *it * 2;\n}\n\n// \u4e0d\u9700\u8981\u4fee\u6539 vector \u5185\u5143\u7d20\u7684\u8bdd\uff0c\u5efa\u8bae\u7528 const_iterator\n// \u4e0e for-in \u8bed\u53e5\u4e00\u6837\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u7684\u5faa\u73af\u4f53\u5185\u4e0d\u80fd\u6539\u53d8\u5bb9\u5668\u7684 size\uff01\nfor (auto it = vec.cbegin(); it != vec.cend(); ++it) {\n    cout << it->mem << endl;\n}\n")),(0,a.kt)("p",null,"\u7bad\u5934\u8fd0\u7b97\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"->")," \u628a\u89e3\u5f15\u7528\u548c\u8bbf\u95ee\u6210\u5458\u4e24\u4e2a\u64cd\u4f5c\u7ed3\u5408\u5728\u4e00\u8d77\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"it->mem")," \u7b49\u4ef7\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"(*it).mem"),"\u3002"),(0,a.kt)("h3",{id:"\u5185\u7f6e\u6570\u7ec4"},"\u5185\u7f6e\u6570\u7ec4"),(0,a.kt)("p",null,"\u6570\u7ec4\u4e0e vector \u5f88\u76f8\u4f3c\uff0c\u4f46\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u9700\u8981\u901a\u8fc7\u5143\u7d20\u7684\u4e0b\u6807\u6765\u8bbf\u95ee\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const unsigned sz = 3;\nint ial[sz] = {0, 1, 2};\nint a[] = {0, 1, 2};\nint a2[5] = {0, 1, 2}; // [0, 1, 2, 0, 0]\nstring a3[3] = {"hi", "bye"};\n\nconst unsigned size = 10;\nint arr[size];\nfor (int *ptr = arr; ptr < arr + size; ++ptr) {\n    *ptr = 10;\n}\n')),(0,a.kt)("p",null,"\u4e0d\u80fd\u5c06\u6570\u7ec4\u7684\u5185\u5bb9\u62f7\u8d1d\u7ed9\u5176\u5b83\u6570\u7ec4\u4f5c\u4e3a\u521d\u59cb\u503c\uff0c\u4e5f\u4e0d\u80fd\u7528\u6570\u7ec4\u4e3a\u5176\u5b83\u6570\u7ec4\u8d4b\u503c\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"int a2[] = a; // \u274c")),(0,a.kt)("p",null,"\u590d\u6742\u7684\u6570\u7ec4\u58f0\u660e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int arr[10] = {0};\nint *ptrs[10];           // \u542b\u6709 10 \u4e2a\u6574\u578b\u6307\u9488\u7684\u6570\u7ec4\nint(*Parray)[10] = &arr; // Parray \u6307\u5411\u542b\u6709 10 \u4e2a\u6574\u6570\u7684\u6570\u7ec4\nint(&arrRef)[10] = arr;  // arrRef \u5f15\u7528\u542b\u6709 10 \u4e2a\u6574\u6570\u7684\u6570\u7ec4\n")),(0,a.kt)("p",null,"\u6570\u7ec4\u7684\u4e0b\u6807\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"size_t")," \u7c7b\u578b\uff0c\u4e00\u79cd\u673a\u5668\u76f8\u5173\u7684\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c\u5b9a\u4e49\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"cstddef")," \u5934\u6587\u4ef6\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'char st[12] = "fundamental"; // \u4f7f\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u521d\u59cb\u5316\u5b57\u7b26\u6570\u7ec4\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u6700\u540e\u9762\u52a0\u4e00\u4e2a\u7a7a\u5b57\u7b26\nfor (size_t i = 0; i < 12; ++i) {\n    cout << st[i] << endl;\n}\n')),(0,a.kt)("p",null,"\u591a\u7ef4\u6570\u7ec4\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int ia[3][4];\nint ib[10][20][30] = {0};\nint ic[3][4] = {\n    {0, 1, 2, 3},\n    {4, 5, 6, 7},\n    {8, 9, 10, 11}\n};\n\n// equivalent initialization without the optional\n// nested braces for each row\nint ia3[3][4] = {0,1,2,3,4,5,6,7,8,9,10,11};\n\n// explicitly initialize row 0; the remaining elements\n// are value initialized\nint ix[3][4] = {0, 3, 6, 9};\n")),(0,a.kt)("h3",{id:"\u6307\u9488\u4e0e\u6570\u7ec4"},"\u6307\u9488\u4e0e\u6570\u7ec4"),(0,a.kt)("p",null,"\u6307\u9488\u4e0e\u6570\u7ec4\u6709\u7740\u975e\u5e38\u7d27\u5bc6\u7684\u8054\u7cfb\u3002\u4f7f\u7528\u6570\u7ec4\u7684\u540d\u5b57\uff0c\u5b9e\u9645\u4e0a\u7528\u7684\u662f\u6307\u5411\u6570\u7ec4\u9996\u5143\u7d20\u7684\u6307\u9488\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'string nums[] = {"one", "two", "three"};\nstring *p = &nums[0];\n// \u7b49\u4ef7\u4e8e\nstring *p = nums;\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u7684\u8fed\u4ee3\u5668\u652f\u6301\u7684\u8fd0\u7b97\uff0c\u6570\u7ec4\u7684\u6307\u9488\u5168\u90e8\u652f\u6301\uff01\u4f8b\u5982\u9012\u589e\u8fd0\u7b97\u7b26\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"++p; // p \u6307\u5411\u4e0b\u4e00\u5143\u7d20")),(0,a.kt)("p",null,"\u7ed9\u6570\u7ec4\u7684\u6307\u9488\u52a0\u4e0a\u6574\u6570 n\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u6307\u9488\uff0c\u76f8\u6bd4\u539f\u6765\u6307\u5411\u7684\u5143\u7d20\u524d\u8fdb\u4e86 n \u4e2a\u4f4d\u7f6e\u3002"),(0,a.kt)("p",null,"\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"ptrdiff_t diff = &nums[2] - &nums[0];")),(0,a.kt)("p",null,"\u5bf9\u6570\u7ec4\u7684\u4e0b\u6807\u8fd0\u7b97\uff0c\u5b9e\u9645\u4e0a\u662f\u64cd\u4f5c\u6307\u9488\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int ia[] = {0, 2, 4, 6, 8};\nint i = ia[2];\n// \u7b49\u4ef7\u4e8e\nint *ptr = ia;\nint i = *(ptr + 2);\n")),(0,a.kt)("p",null,"\u5f53\u4f60\u660e\u767d\u4e0a\u9762\u8fd9\u70b9\u4e4b\u540e\uff0c\u4f60\u5c31\u80fd\u660e\u767d\u4e3a\u4ec0\u4e48\u5bf9\u6307\u9488\u4e5f\u80fd\u8fdb\u884c\u4e0b\u6807\u64cd\u4f5c\uff01\u6807\u51c6\u5e93\u7c7b\u578b\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u7684\u4e0b\u6807\u5fc5\u987b\u662f\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c\u4f46\u5185\u7f6e\u6570\u7ec4\u7684\u4e0b\u6807\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5904\u7406\u8d1f\u503c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int *ptr2 = &ia[2];\ncout << ptr2[1] << endl;  // ia[3]\ncout << ptr2[-2] << endl; // ia[0]\n")),(0,a.kt)("p",null,"\u6211\u4eec\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 C++ \u6807\u51c6\u5e93\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u548c\u8fed\u4ee3\u5668\uff0c\u907f\u514d\u4f7f\u7528\u5185\u7f6e\u6570\u7ec4\u548c\u6307\u9488\uff01\uff01"),(0,a.kt)("h3",{id:"c-\u98ce\u683c\u5b57\u7b26\u4e32"},"C \u98ce\u683c\u5b57\u7b26\u4e32"),(0,a.kt)("p",null,"\u6211\u4eec\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 C++ \u6807\u51c6\u5e93\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"\uff0c\u800c\u4e0d\u8981\u4f7f\u7528 C \u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u540e\u8005\u4ec5\u4ec5\u4f5c\u4e3a\u5b66\u4e60\u4e86\u89e3\u3002"),(0,a.kt)("p",null,"C \u98ce\u683c\u5b57\u7b26\u4e32\u53ca\u76f8\u5173\u64cd\u4f5c\u5b9a\u4e49\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"cstring")," \u6587\u4ef6\u4e2d\uff0c\u662f C \u8bed\u8a00 ",(0,a.kt)("inlineCode",{parentName:"p"},"string.h")," \u7684 C++ \u7248\u672c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"char ca1[] = \"hello\";\nchar ca2[] = \"world\";\ncout << strlen(ca1) << endl;      // \u7a7a\u5b57\u7b26\u4e0d\u8ba1\u7b97\u5728\u5185\ncout << strcmp(ca1, ca2) << endl; // s1 == s2 \u8fd4\u56de 0\u3001s1 > s2 \u8fd4\u56de \u6b63\u503c\u3001s1 < s2 \u8fd4\u56de\u8d1f\u503c\ncout << strcat(ca1, ca2) << endl;\ncout << strcpy(ca1, ca2) << endl;\n\nconst char ca[] = {'h', 'e', 'l', 'l', 'o'};\nconst char *cp = ca;\ncout << *cp << endl; // h\ncout << cp << endl; // hello\nwhile (*cp) {\n    cout << *cp << endl;\n    ++cp;\n}\n")),(0,a.kt)("h2",{id:"\u8868\u8fbe\u5f0f\u8bed\u53e5"},"\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5"),(0,a.kt)("h3",{id:"\u57fa\u672c\u6982\u5ff5"},"\u57fa\u672c\u6982\u5ff5"),(0,a.kt)("p",null,"\u8868\u8fbe\u5f0f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u8fd0\u7b97\u5bf9\u8c61 (operand) \u7ec4\u6210\uff0c\u5bf9\u8868\u8fbe\u5f0f (expression) \u6c42\u503c\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c (result)\u3002"),(0,a.kt)("p",null,"\u5b57\u9762\u503c\u548c\u53d8\u91cf\u662f\u6700\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u5b57\u9762\u503c\u548c\u53d8\u91cf\u7684\u503c\u3002"),(0,a.kt)("p",null,"\u628a\u4e00\u4e2a\u8fd0\u7b97\u7b26 (operator) \u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u7ec4\u5408\u5c31\u4f1a\u751f\u6210\u66f4\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u3002"),(0,a.kt)("p",null,"\u4f5c\u7528\u4e8e\u4e00\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u7684\u8fd0\u7b97\u7b26\u662f\u4e00\u5143\u8fd0\u7b97\u7b26 (unary operator)\uff0c\u5982\u53d6\u5730\u5740\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"&")," \u548c\u89e3\u5f15\u7528\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"*"),"\u3002"),(0,a.kt)("p",null,"\u4f5c\u7528\u4e8e\u4e24\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u7684\u8fd0\u7b97\u7b26\u662f\u4e8c\u5143\u8fd0\u7b97\u7b26 (binary operator)\uff0c\u5982\u76f8\u7b49\u8fd0\u7b97\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"==")," \u548c\u4e58\u6cd5\u8fd0\u7b97\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"*"),"\u3002"),(0,a.kt)("p",null,"\u4f5c\u7528\u4e8e\u4e09\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u7684\u8fd0\u7b97\u7b26\u662f\u4e09\u5143\u8fd0\u7b97\u7b26\uff0c\u53ea\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"?:"),"\u3002"),(0,a.kt)("p",null,"\u51fd\u6570\u8c03\u7528\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fd0\u7b97\u7b26\uff0c\u5bf9\u8fd0\u7b97\u5bf9\u8c61\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236\u3002"),(0,a.kt)("p",null,"C++ \u7684\u8868\u8fbe\u5f0f\u6216\u8005\u662f\u5de6\u503c (lvalue)\uff0c\u6216\u8005\u662f\u53f3\u503c (rvalue)\u3002\u5728 C \u8bed\u8a00\u4e2d\u8fd9\u4e24\u8005\u7684\u542b\u4e49\u662f\uff0c\u5de6\u503c\u53ef\u4ee5\u4f4d\u4e8e\u8d4b\u503c\u8bed\u53e5\u7684\u5de6\u4fa7\uff0c\u53f3\u503c\u4e0d\u80fd\u3002\u5728 C++ \u4e2d\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u7528\u4f5c\u53f3\u503c\u65f6\uff0c\u7528\u7684\u662f\u5bf9\u8c61\u7684\u503c\uff08\u5185\u5bb9\uff09\uff1b\u88ab\u7528\u4f5c\u5de6\u503c\u65f6\uff0c\u7528\u7684\u662f\u5bf9\u8c61\u7684\u8eab\u4efd\uff08\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff09\u3002"),(0,a.kt)("h3",{id:"\u4f4d\u8fd0\u7b97\u7b26"},"\u4f4d\u8fd0\u7b97\u7b26"),(0,a.kt)("p",null,"\u4f4d\u8fd0\u7b97\u7b26\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"~, <<, >>, &, ^, |")),(0,a.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u4ec5\u5c06\u4f4d\u8fd0\u7b97\u7b26\u7528\u4e8e\u65e0\u7b26\u53f7\u6570\uff01"),(0,a.kt)("p",null,"\u5982\u679c\u8fd0\u7b97\u5bf9\u8c61\u662f\u201c\u5c0f\u6574\u578b\u201d\u6bd4\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"char"),"\uff0c\u5219\u5b83\u7684\u503c\u4f1a\u88ab\u81ea\u52a8\u63d0\u5347\u4e3a\u8f83\u5927\u7684\u6574\u578b\uff0c\u524d\u9762\u8865 0\u3002"),(0,a.kt)("p",null,"\u4e00\u4e2a\u73ed\u7ea7\u4e2d\u6709 30 \u4e2a\u5b66\u751f\uff0c\u6d4b\u9a8c\u7684\u7ed3\u679c\u662f\u901a\u8fc7\u6216\u4e0d\u901a\u8fc7\uff0c\u90a3\u4e48\u5168\u73ed\u7684\u7ed3\u679c\u53ef\u4ee5\u7528\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u6765\u8868\u793a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u4e4b\u6240\u4ee5\u4f7f\u7528 unsigned long\uff0c\u662f\u56e0\u4e3a int \u7c7b\u578b\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u53ea\u80fd\u786e\u4fdd\u5360\u7528 16 \u4f4d\uff0c\u800c long \u53ef\u4ee5\u786e\u4fdd\u81f3\u5c11\u62e5\u6709 32 \u4f4d\nunsigned long quiz1 = 0;\nquiz1 |= 1UL << 27; // \u7b2c 27 \u4f4d\u7f6e\u4e3a 1\uff0c\u8868\u793a\u5b66\u751f 27 \u901a\u8fc7\u4e86\u6d4b\u9a8c\nbool status = quiz1 & (1UL << 27); // \u68c0\u67e5\u5b66\u751f 27 \u662f\u5426\u901a\u8fc7\u6d4b\u9a8c\n")),(0,a.kt)("h3",{id:"sizeof-\u8fd0\u7b97\u7b26"},"sizeof \u8fd0\u7b97\u7b26"),(0,a.kt)("p",null,"sizeof \u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\u3001\u6216\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"size_t")," \u7c7b\u578b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"Sales_data data, *p;\n\nsize_t s1 = sizeof(Sales_data); // Sales_data \u7c7b\u578b\u7684\u5bf9\u8c61\u6240\u5360\u7684\u7a7a\u95f4\u5927\u5c0f\n// \u7b49\u4ef7\u4e8e\nsize_t s2 = sizeof data;\n// \u7b49\u4ef7\u4e8e\nsize_t s3 = sizeof *p;\n\nsize_t s4 = sizeof p; // \u6307\u9488\u6240\u5360\u7684\u7a7a\u95f4\u5927\u5c0f\uff0csizeof \u4e0d\u4f1a\u53bb\u89e3\u5f15\u7528\u6307\u9488\uff0c\u5373\u4f7f\u662f\u65e0\u6548\u6307\u9488\u4e5f\u6ca1\u6709\u5173\u7cfb\n\nsize_t s5 = sizeof data.bookNo;\nsize_t s6 = sizeof data.units_bold;\nsize_t s7 = sizeof data.revenue;\n// \u7b49\u4ef7\u4e8e\nsize_t s8 = sizeof Sales_data::revenue; // c++ 11 \u5141\u8bb8\u4f7f\u7528\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u6765\u83b7\u53d6\u7c7b\u6210\u5458\u7684\u5927\u5c0f\n\n// \u5bf9\u6570\u7ec4\u6267\u884c sizeof \u8fd0\u7b97\uff0c\u5f97\u5230\u6574\u4e2a\u6570\u7ec4\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\n// \u8ba1\u7b97\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\nint x[10];\nint *p = x;\ncout << sizeof(x) / sizeof(*x) << endl; // 10\ncout << sizeof(p) << endl; // 8\ncout << sizeof(*p) << endl; // 4\ncout << sizeof(int) << endl; // 4\n")),(0,a.kt)("p",null,"\u5bf9 ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u6216 ",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u6267\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"sizeof")," \u8fd0\u7b97\uff0c\u53ea\u8fd4\u56de\u8be5\u7c7b\u578b\u56fa\u5b9a\u90e8\u5206\u7684\u5927\u5c0f\uff0c\u4e0d\u4f1a\u8ba1\u7b97\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u5360\u7528\u4e86\u591a\u5c11\u7a7a\u95f4\u3002"),(0,a.kt)("h3",{id:"\u7c7b\u578b\u8f6c\u6362"},"\u7c7b\u578b\u8f6c\u6362"),(0,a.kt)("p",null,"\u8fd0\u7b97\u7b26\u7684\u8fd0\u7b97\u5bf9\u8c61\uff0c\u603b\u662f\u8f6c\u6362\u4e3a\u6700\u5bbd\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\u4f4d\u8fd0\u7b97\u4e2d\u7684\u6574\u578b\u63d0\u5347\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"int ival = 3.14 + 3; // \u53d1\u751f\u9690\u5f0f\u8f6c\u6362")),(0,a.kt)("p",null,"\u6570\u7ec4\u81ea\u52a8\u8f6c\u6362\u6210\u6307\u5411\u6570\u7ec4\u9996\u5143\u7d20\u7684\u6307\u9488\uff0c\u4e5f\u662f\u4e00\u79cd\u9690\u5f0f\u8f6c\u6362\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int ia[10];\nint *ip = ia;\n")),(0,a.kt)("p",null,"\u4efb\u4f55\u5177\u6709\u660e\u786e\u5b9a\u4e49\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u53ea\u8981\u4e0d\u6d89\u53ca low-level const\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"static_cast"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 10;\nint j = 20;\ndouble slope = i / j;\nslope = static_cast<double>(j) / i;\n")),(0,a.kt)("p",null,"\u4efb\u4f55\u975e\u5e38\u91cf\u5bf9\u8c61\u7684\u5730\u5740\u90fd\u80fd\u5b58\u5165 ",(0,a.kt)("inlineCode",{parentName:"p"},"void*"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double d = 3.14;\nvoid *p = &d;\ndouble *dp = static_cast<double*>(p); // \u2705 \u5c06 void* \u8f6c\u6362\u56de\u521d\u59cb\u7684\u6307\u9488\u7c7b\u578b\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"const_cast")," \u53ea\u80fd\u6539\u53d8\u8fd0\u7b97\u5bf9\u8c61\u7684\u5e95\u5c42 const\uff0c\u5c06\u5e38\u91cf\u5bf9\u8c61\u8f6c\u6362\u6210\u975e\u5e38\u91cf\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u79f0\u4e3a\u53bb\u6389 const \u6027\u8d28 (cast away the const)\u3002"),(0,a.kt)("p",null,"\u5982\u679c\u5bf9\u8c61\u672c\u8eab\u4e0d\u662f\u5e38\u91cf\uff0c\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"const_cast")," \u83b7\u5f97\u5199\u6743\u9650\u662f\u5408\u6cd5\u7684\u884c\u4e3a\uff1b\u5982\u679c\u5bf9\u8c61\u672c\u8eab\u662f\u5e38\u91cf\uff0ccast away the const \u83b7\u5f97\u5199\u6743\u9650\u3001\u518d\u6267\u884c\u5199\u64cd\u4f5c\u5c31\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u7684\u540e\u679c\uff01",(0,a.kt)("inlineCode",{parentName:"p"},"const_cast")," \u5e38\u5e38\u7528\u4e8e\u6709\u51fd\u6570\u91cd\u8f7d\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *pc;\nchar *p = const_cast<char*>(pc); // \u53ef\u4ee5\u7f16\u8bd1\uff0c\u4f46\u901a\u8fc7 p \u5199\u503c\u662f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\uff0c\u975e\u5e38\u5371\u9669\uff01\n\n#include <cstdio>\nint main() {\n    const int x = 5;\n    *(int *)(&x) = 6; // \u5371\u9669\uff01\n    printf("%d\\n", x); // 5\n    printf("%d\\n", *(&x)); // 6\n\n    int *p = const_cast<int*>(&x);\n    *p = 7; // \u5371\u9669\uff01\n    printf("%d\\n", x); // 5\n    printf("%d\\n", *p); // 7\n}\n')),(0,a.kt)("p",null,"\u4ee5\u4e0b\u4e24\u79cd\u662f\u65e7\u5f0f\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double d = 3.14;\ncout << int(d) << endl; // \u51fd\u6570\u5f62\u5f0f\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\ncout << (int)d << endl; // C \u98ce\u683c\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n\n// \u5f53\u6211\u4eec\u5728\u67d0\u5904\u6267\u884c\u65e7\u5f0f\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u65f6\uff0c\u5982\u679c\u6362\u6210 const_cast \u548c static_cast \u4e5f\u5408\u6cd5\uff0c\u5219\u5176\u884c\u4e3a\u4e0e\u5bf9\u5e94\u7684\u547d\u540d\u8f6c\u6362\u4e00\u81f4\u3002\n// \u5982\u679c\u66ff\u6362\u540e\u4e0d\u5408\u6cd5\uff0c\u5219\u5176\u884c\u4e3a\u4e0e reinterpret_cast \u7c7b\u4f3c\u3002\nint *ip = &i;\nchar *ptrc = reinterpret_cast<char*>(ip); // \u8fd9\u662f\u975e\u5e38\u5371\u9669\u7684\uff01\uff01\n")),(0,a.kt)("h3",{id:"\u8df3\u8f6c\u8bed\u53e5"},"\u8df3\u8f6c\u8bed\u53e5"),(0,a.kt)("p",null,"C++ \u63d0\u4f9b\u4e86\u56db\u79cd\u8df3\u8f6c\u8bed\u53e5\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"break"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"continue"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"goto"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"return"),"\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"goto")," \u7684\u4f5c\u7528\u662f\u4ece ",(0,a.kt)("inlineCode",{parentName:"p"},"goto")," \u8bed\u53e5\u65e0\u6761\u4ef6\u8df3\u8f6c\u5230\u540c\u4e00\u51fd\u6570\u5185\u7684\u53e6\u4e00\u8bed\u53e5\u3002\u9f13\u52b1\u6700\u597d\u4e0d\u8981\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"goto"),"\uff01\u522b\u4eba\u7684\u4ee3\u7801\u8981\u4f1a\u8bfb\uff0c\u81ea\u5df1\u5c3d\u91cf\u4e0d\u8981\u5199\u3002"),(0,a.kt)("h3",{id:"try-catch-\u4e0e\u5f02\u5e38\u5904\u7406"},"try-catch \u4e0e\u5f02\u5e38\u5904\u7406"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdexcept>\nusing std::out_of_range;\n\nint main() {\n    try {\n        string s("hello world");\n        cout << s.substr(0, 5) << endl;  // prints hello\n        cout << s.substr(6) << endl;     // prints world\n        cout << s.substr(6, 11) << endl; // prints world\n        cout << s.substr(12) << endl;    // throws out_of_range\n    } catch (out_of_range) {\n        cout << "caught out_of_range" << endl;\n    }\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,a.kt)("p",null,"\u51fd\u6570\u5305\u62ec\u56db\u4e2a\u90e8\u5206\uff1a\u8fd4\u56de\u7c7b\u578b\u3001\u51fd\u6570\u540d\u5b57\u3001\u5f62\u53c2\u3001\u51fd\u6570\u4f53\u3002"),(0,a.kt)("p",null,"\u5706\u62ec\u53f7 ",(0,a.kt)("inlineCode",{parentName:"p"},"()")," \u79f0\u4e3a\u8c03\u7528\u8fd0\u7b97\u7b26\u3002"),(0,a.kt)("p",null,"\u51fd\u6570\u58f0\u660e\u4e5f\u79f0\u51fd\u6570\u539f\u578b\u3002\u51fd\u6570\u901a\u5e38\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\uff0c\u5728\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002"),(0,a.kt)("p",null,"\u53ea\u5b58\u5728\u4e8e\u5757\u6267\u884c\u671f\u95f4\u7684\u5bf9\u8c61\u79f0\u4e3a\u81ea\u52a8\u5bf9\u8c61\u3002\u666e\u901a\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u5f62\u53c2\u662f\u81ea\u52a8\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,"\u5c40\u90e8\u9759\u6001\u5bf9\u8c61\u5728\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84\u7b2c\u4e00\u6b21\u7ecf\u8fc7\u5bf9\u8c61\u5b9a\u4e49\u8bed\u53e5\u65f6\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u76f4\u5230\u7a0b\u5e8f\u7ec8\u6b62\u624d\u88ab\u9500\u6bc1\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void test(int i) { // \u81ea\u52a8\u5bf9\u8c61\n    int j; // \u81ea\u52a8\u5bf9\u8c61\n    static size_t ctr = 0; // \u5c40\u90e8\u9759\u6001\u5bf9\u8c61\n}\n")),(0,a.kt)("h3",{id:"\u53c2\u6570\u4f20\u9012"},"\u53c2\u6570\u4f20\u9012"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int fact(int val) { // \u9690\u5f0f\u5730\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u5f62\u53c2\uff0cint val = 5\n    int ret = 1;\n    while (val > 1) {\n        ret *= val--;\n    }\n    return ret; // \u8fd4\u56de\uff0c\u5e76\u5c06\u63a7\u5236\u6743\u4ea4\u56de\u4e3b\u8c03\u51fd\u6570\n}\n\nfact(5); // \u4e3b\u8c03\u51fd\u6570\u7684\u6267\u884c\u88ab\u4e2d\u65ad\uff0c\u88ab\u8c03\u51fd\u6570\u5f00\u59cb\u6267\u884c\uff1b\u7528\u5b9e\u53c2 5 \u521d\u59cb\u5316\u51fd\u6570\u5bf9\u5e94\u7684\u5f62\u53c2\n")),(0,a.kt)("p",null,"\u5f53\u5f62\u53c2\u662f\u5f15\u7528\u7c7b\u578b\u65f6\uff0c\u5b9e\u53c2\u5728\u51fd\u6570\u8c03\u7528\u65f6\u88ab\u5f15\u7528\u4f20\u9012 (passed by reference)\uff0c\u5f15\u7528\u5f62\u53c2\u662f\u5b83\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7684\u522b\u540d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u4ea4\u6362\u4e24\u6570\u7684\u5f15\u7528\u4f20\u9012\u7248\u672c\nvoid swap(int &a, int &b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\nswap(a, b); // \u4f20\u5f15\u7528\n")),(0,a.kt)("p",null,"\u5f53\u5f62\u53c2\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5b9e\u53c2\u7684\u503c\u88ab\u62f7\u8d1d\u7ed9\u5f62\u53c2\uff0c\u79f0\u4e3a\u503c\u4f20\u9012 (passed by value)\u3002\u6539\u53d8\u5f62\u53c2\u7684\u503c\u5e76\u4e0d\u4f1a\u6539\u53d8\u5b9e\u53c2\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u4ea4\u6362\u4e24\u6570\u7684\u503c\u4f20\u9012\u7248\u672c\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nswap(&a, &b); // \u4f20\u503c\uff08\u5730\u5740\uff09\n\n// function that takes a pointer and sets the pointed-to value to zero\nvoid reset(int *ip)\n{\n    *ip = 0;  // changes the value of the object to which ip points\n    ip = 0;   // changes the **local copy** of ip; the argument is unchanged\n}\n")),(0,a.kt)("p",null,"C \u548c ObjC \u53ea\u6709\u503c\u4f20\u9012\uff0c\u6ca1\u6709\u5f15\u7528\u4f20\u9012\uff01C does not support pass-by-reference and Objective-C, being a strict superset of C doesn't either."),(0,a.kt)("p",null,"\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u907f\u514d\u5b9e\u53c2\u62f7\u8d1d\uff1a\u62f7\u8d1d\u7c7b\u5bf9\u8c61\u6216\u8005\u5bb9\u5668\u5bf9\u8c61\u662f\u6bd4\u8f83\u4f4e\u6548\u7684\uff0c\u751a\u81f3\u6709\u7684\u7c7b\u6839\u672c\u5c31\u4e0d\u652f\u6301\u62f7\u8d1d\u64cd\u4f5c\u3002"),(0,a.kt)("p",null,"\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u8981\u6bd4\u8f83\u4e24\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u7684\u957f\u5ea6\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u53ef\u80fd\u4f1a\u975e\u5e38\u957f\uff0c\u6240\u4ee5\u6211\u4eec\u907f\u514d\u76f4\u63a5\u62f7\u8d1d\u5b83\u4eec\u3002\u53c8\u56e0\u4e3a\u6bd4\u8f83\u957f\u5ea6\u53ea\u8bfb\u4e0d\u4fee\u6539\uff0c\u56e0\u6b64\u6700\u597d\u628a\u5f62\u53c2\u5b9a\u4e49\u6210\u5bf9\u5e38\u91cf\u7684\u5f15\u7528\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isShorter(const string &s1, const string &s2) {\n    return s1.size() < s2.size();\n}\n")),(0,a.kt)("p",null,"\u5b9a\u4e49\u51fd\u6570\u5f62\u53c2\u4e3a\u5f15\u7528\u7c7b\u578b\u65f6\uff0c\u4f7f\u7528\u5e38\u91cf\u5f15\u7528\uff0c\u9664\u975e\u9700\u8981\u4fee\u6539\u5b9e\u53c2\u7684\u503c\uff01\u8fd9\u6837\u505a\u6709\u5f88\u591a\u597d\u5904\uff1a1. \u8c03\u7528\u8005\u6e05\u6670\u5730\u77e5\u9053\uff0c\u5b9e\u53c2\u7684\u503c\u4e0d\u53ef\u80fd\u88ab\u4fee\u6539\u30022. \u53ef\u4ee5\u63a5\u53d7\u7684\u5b9e\u53c2\u7c7b\u578b\u5927\u5927\u589e\u52a0\uff0c\u4f8b\u5982 const \u5bf9\u8c61\u3001\u5b57\u9762\u503c\u3001\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u7684\u5bf9\u8c61\u7b49\u3002"),(0,a.kt)("p",null,"\u4f7f\u7528\u5f15\u7528\u5f62\u53c2\u8fd4\u56de\u989d\u5916\u4fe1\u606f\uff1a\u4e00\u4e2a\u51fd\u6570\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u7136\u800c\u6709\u65f6\u6211\u4eec\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u5e0c\u671b\u5f97\u5230\u591a\u4e2a\u7ed3\u679c\uff0c\u8fd9\u79cd\u60c5\u666f\u4e0b\uff0c\u5f15\u7528\u5f62\u53c2\u88ab\u5e7f\u6cdb\u4f7f\u7528\u5230\uff01"),(0,a.kt)("p",null,"\u4f8b\u5982\u6211\u4eec\u5e0c\u671b\u8fd4\u56de string \u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5b57\u7b26\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u8fd4\u56de\u8be5\u5b57\u7b26\u51fa\u73b0\u7684\u603b\u6b21\u6570\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"string::size_type find_char(const string &s, char c, string::size_type &occurs) {\n    size_t ret = -1;\n    size_t size = s.size();\n    occurs = 0;\n    for (size_t i = 0; i < size; ++i) {\n        if (s[i] == c) {\n            if (ret == -1) {\n                ret = i;\n            }\n            ++occurs;\n        }\n    }\n    return ret;\n}\n")),(0,a.kt)("p",null,"\u5f62\u53c2\u7684\u9876\u5c42 const \u4f1a\u88ab\u5ffd\u7565\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void fcn(const int i) {}\nvoid fcn(int i) {} // \u274c \u91cd\u590d\u5b9a\u4e49\n")),(0,a.kt)("p",null,"\u4e0d\u5141\u8bb8\u62f7\u8d1d\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u6cd5\u4ee5\u503c\u4f20\u9012\u7684\u65b9\u5f0f\u4f7f\u7528\u6570\u7ec4\u53c2\u6570\u3002\u5c06\u6570\u7ec4\u4f5c\u4e3a\u5b9e\u53c2\u4f20\u9012\u65f6\uff0c\u5b9e\u9645\u4e0a\u4f20\u9012\u7684\u662f\u6307\u5411\u6570\u7ec4\u9996\u5143\u7d20\u7684\u6307\u9488\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void print(const int[]);\n// \u7b49\u4ef7\u4e8e\nvoid print(const int*);\n")),(0,a.kt)("p",null,"\u6709\u65f6\u6211\u4eec\u65e0\u6cd5\u63d0\u524d\u9884\u77e5\u5e94\u8be5\u5411\u51fd\u6570\u4f20\u9012\u51e0\u4e2a\u5b9e\u53c2\uff0c\u4e3a\u4e86\u7f16\u5199\u5904\u7406\u672a\u77e5\u6570\u91cf\u5b9e\u53c2\u7684\u51fd\u6570\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5b9e\u53c2\u4eec\u7684\u7c7b\u578b\u76f8\u540c\uff1ainitializer_list (C++11)"),(0,a.kt)("li",{parentName:"ul"},"\u5b9e\u53c2\u4eec\u7684\u7c7b\u578b\u4e0d\u540c\uff1a\u53ef\u53d8\u51fd\u6570\u6a21\u677f\uff08ch16.4 \u4ecb\u7ecd\uff09"),(0,a.kt)("li",{parentName:"ul"},"\u7701\u7565\u7b26\u5f62\u53c2\uff08\u4ec5\u7528\u4e8e\u8bbf\u95ee\u67d0\u4e9b\u7279\u6b8a\u7684 C \u4ee3\u7801\uff09")),(0,a.kt)("h3",{id:"main-\u51fd\u6570"},"main \u51fd\u6570"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"main")," \u51fd\u6570\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u63a5\u53d7\u53c2\u6570\uff0c\u58f0\u660e\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int main(int argc, char *argv[]) {\n    // \u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u6570\u7ec4\u4e2d\u5b57\u7b26\u4e32\u7684\u6570\u91cf\n    // \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u5143\u7d20\u662f\u6307\u5411 C \u98ce\u683c\u5b57\u7b26\u4e32\u7684\u6307\u9488\n    // \u5f53\u5b9e\u53c2\u4f20\u9012\u7ed9 main \u51fd\u6570\u540e\uff0cargv \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u6307\u5411\u7a0b\u5e8f\u7684\u540d\u5b57\u6216\u8005\u7a7a\u5b57\u7b26\u4e32\uff1b\u63a5\u4e0b\u6765\u7684\u5143\u7d20\u6307\u5411\u547d\u4ee4\u884c\u63d0\u4f9b\u7684\u5b9e\u53c2\u3002\n    for (int i = 0; i < argc; ++i) {\n        string s(argv[i]);\n        cout << s << endl;\n    }\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u4e3a\u4e86\u4f7f\u8fd4\u56de\u503c\u4e0e\u673a\u5668\u65e0\u5173\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"cstdlib")," \u5934\u6587\u4ef6\u5b9a\u4e49\u4e86\u4e24\u4e2a\u9884\u5904\u7406\u53d8\u91cf\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"EXIT_SUCCESS")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"EXIT_FAILURE"),"\u3002"),(0,a.kt)("h3",{id:"\u8fd4\u56de\u7c7b\u578b\u548c-return-\u8bed\u53e5"},"\u8fd4\u56de\u7c7b\u578b\u548c return \u8bed\u53e5"),(0,a.kt)("p",null,"\u503c\u662f\u5982\u4f55\u88ab\u8fd4\u56de\u7684\uff1f\u8fd4\u56de\u503c\u88ab\u62f7\u8d1d\u5230\u8c03\u7528\u70b9\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u8c03\u7528\u70b9\u7684\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u3002"),(0,a.kt)("p",null,"\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u5f15\u7528\uff0c\u540c\u5176\u5b83\u5f15\u7528\u7c7b\u578b\u4e00\u6837\uff0c\u8be5\u5f15\u7528\u53ea\u662f\u5b83\u6240\u5f15\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"const string &shoterString(const string &s1, const string &s2) {\n    return s1.size() <= s2.size() ? s1 : s2;\n}\n\n// tolower change the argument itself, not a local copy\nstring &tolower(string &s) {\n    for (string::size_type i = 0; i != s.size(); ++i)\n        s[i] = tolower(s[i]);\n    return s;\n}\n")),(0,a.kt)("p",null,"\u4f46\u4e0d\u8981\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61\u7684\u5f15\u7528\u6216\u6307\u9488\uff0c\u56e0\u51fd\u6570\u5b8c\u6210\u540e\u5b83\u7684\u5185\u5b58\u7a7a\u95f4\u4e5f\u88ab\u91ca\u653e\u6389\u3002"),(0,a.kt)("p",null,"C++11 \u5217\u8868\u521d\u59cb\u5316\u8fd4\u56de\u503c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<string> process() {\n    return {"functionX", "okay"};\n}\n')),(0,a.kt)("p",null,"\u6570\u7ec4\u4e0d\u80fd\u88ab\u62f7\u8d1d\uff0c\u6240\u4ee5\u51fd\u6570\u4e0d\u80fd\u8fd4\u56de\u6570\u7ec4\u3002\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u6570\u7ec4\u7684\u6307\u9488\u6216\u5f15\u7528\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int (*func(int i))[10];\n\n// \u4e0a\u9762\u7684\u5199\u6cd5\u663e\u7136\u8fc7\u4e8e\u70e6\u7410\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u522b\u540d\u3002\ntypedef int arrT[10];\narrT* func(int i);\n\n// C++ 11 \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b\n// \u672c\u6765\u662f returnType \u7684\u5730\u65b9\u5199 auto\uff0c\u5e76\u5c06 returnType \u653e\u5728 -> \u4e4b\u540e\nauto func(int i) -> int(*)[10];\n")),(0,a.kt)("h3",{id:"\u51fd\u6570\u91cd\u8f7d"},"\u51fd\u6570\u91cd\u8f7d"),(0,a.kt)("p",null,"\u5982\u679c\u540c\u4e00\u4f5c\u7528\u57df\u5185\u7684\u51e0\u4e2a\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff0c\u4f46\u5f62\u53c2\u5217\u8868\u4e0d\u540c\uff0c\u79f0\u4e4b\u4e3a\u91cd\u8f7d\u51fd\u6570\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void print(const char *p);\nvoid print(const int *begin, const int *end);\nvoid print(const int ia[], size_t size);\n")),(0,a.kt)("p",null,"\u4e0d\u5141\u8bb8\u4e24\u4e2a\u51fd\u6570\u9664\u4e86\u8fd4\u56de\u7c7b\u578b\u5916\u7684\u5176\u5b83\u8981\u7d20\u90fd\u76f8\u540c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"string lookup(const string&);\nbool lookup(const string&); // \u274c \u91cd\u590d\u58f0\u660e\n")),(0,a.kt)("h3",{id:"\u9ed8\u8ba4\u5b9e\u53c2"},"\u9ed8\u8ba4\u5b9e\u53c2"),(0,a.kt)("p",null,"\u901a\u5e38\u5728\u51fd\u6570\u58f0\u660e\u4e2d\u6307\u5b9a\u9ed8\u8ba4\u5b9e\u53c2\uff0c\u5e76\u653e\u5728\u5934\u6587\u4ef6\u4e2d\uff01"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string screen(size_t ht = 24, size_t wid = 80, char backgrnd = ' ');")),(0,a.kt)("p",null,"\u4e00\u65e6\u67d0\u4e2a\u5f62\u53c2\u88ab\u8d4b\u4e88\u4e86\u9ed8\u8ba4\u503c\uff0c\u5b83\u540e\u9762\u7684\u6240\u6709\u5f62\u53c2\u90fd\u8981\u6709\u9ed8\u8ba4\u503c\u3002"),(0,a.kt)("h3",{id:"inline-\u51fd\u6570"},"inline \u51fd\u6570"),(0,a.kt)("p",null,"\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7684\u5de5\u4f5c\uff1a\u8c03\u7528\u524d\u8981\u5148\u4fdd\u5b58\u5bc4\u5b58\u5668\u3001\u5e76\u5728\u8fd4\u56de\u65f6\u6062\u590d\uff1b\u53ef\u80fd\u9700\u8981\u62f7\u8d1d\u5b9e\u53c2\uff1b\u7a0b\u5e8f\u8f6c\u5411\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002"),(0,a.kt)("p",null,"\u5c06\u51fd\u6570\u5b9a\u4e49\u6210\u5185\u8054\u51fd\u6570\uff0c\u5c31\u662f\u5c06\u5b83\u5728\u6bcf\u4e2a\u8c03\u7528\u70b9\u4e0a\u50cf\u8868\u8fbe\u5f0f\u4e00\u6837\u5730\u5c55\u5f00\uff0c\u4ece\u800c\u6d88\u9664\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const string& shorterString(const string &s1, const string &s2) {\n    return s1.size() <= s2.size() ? s1 : s2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"inline")," \u662f\u5411\u7f16\u8bd1\u5668\u53d1\u51fa\u7684\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"inline")," \u9002\u7528\u4e8e\u89c4\u6a21\u8f83\u5c0f\u3001\u6d41\u7a0b\u76f4\u63a5\u3001\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\u3002"),(0,a.kt)("h3",{id:"constexpr-\u51fd\u6570"},"constexpr \u51fd\u6570"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u51fd\u6570\u662f\u6307\u80fd\u7528\u4e8e\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u3001\u6240\u6709\u5f62\u53c2\u90fd\u5fc5\u987b\u662f\u5b57\u9762\u503c\uff0c\u4e14\u51fd\u6570\u4f53\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u6761 ",(0,a.kt)("inlineCode",{parentName:"p"},"return")," \u8bed\u53e5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr int new_sz() { return 42; }\nconstexpr int foo = new_sz();\n")),(0,a.kt)("p",null,"\u521d\u59cb\u5316\u53d8\u91cf ",(0,a.kt)("inlineCode",{parentName:"p"},"foo")," \u65f6\uff0c\u7f16\u8bd1\u5668\u628a\u5bf9 ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u51fd\u6570\u7684\u8c03\u7528\u66ff\u6362\u6210\u5176\u7ed3\u679c\u503c\u3002\u4e3a\u4e86\u80fd\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u968f\u65f6\u5c55\u5f00\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u51fd\u6570\u90fd\u662f\u9690\u5f0f\u5185\u8054\u7684\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u51fd\u6570\u4e0d\u4e00\u5b9a\u8fd4\u56de\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr size_t scale(size_t cnt) {\n    return new_sz() * cnt; // \u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u4e0d\u662f constexpr\n}\n\nconstexpr int a1[scale(2)]{1, 2};\nint i = 2;\nconstexpr int a2[scale(i)]{1, 2}; // \u274c \u5f53\u51fd\u6570\u7528\u5728 constexpr \u4e0a\u4e0b\u6587\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u8d1f\u8d23\u68c0\u67e5\uff0c\u5982\u679c\u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u4e0d\u662f constexpr\uff0c\u5219\u4f1a\u62a5\u9519\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"inline")," \u51fd\u6570\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"constexpr")," \u51fd\u6570\u90fd\u8981\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u4e2d\u3002"),(0,a.kt)("h3",{id:"\u8c03\u8bd5\u5e2e\u52a9"},"\u8c03\u8bd5\u5e2e\u52a9"),(0,a.kt)("p",null,"\u7a0b\u5e8f\u4e2d\u6709\u4e00\u4e9b\u4ee3\u7801\u53ea\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528\uff0c\u53d1\u5e03\u65f6\u9700\u8981\u5c4f\u853d\u8fd9\u4e9b\u4ee3\u7801\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"assert")," \u662f\u4e00\u79cd\u9884\u5904\u7406\u5b8f (preprocessor marco)\uff0c\u4e5f\u5c31\u662f\u9884\u5904\u7406\u53d8\u91cf\uff0c\u7531\u9884\u5904\u7406\u5668\u800c\u975e\u7f16\u8bd1\u5668\u7ba1\u7406\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"assert")," \u7684\u884c\u4e3a\u4f9d\u8d56\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"NDEBUG")," \u9884\u5904\u7406\u53d8\u91cf\uff0c\u5982\u679c\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u53d8\u91cf\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"assert")," \u5c06\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002\u547d\u4ee4\u884c\u63d0\u4f9b ",(0,a.kt)("inlineCode",{parentName:"p"},"NDEBUG")," \u7684\u65b9\u6cd5\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"clang++ -D NDEBUG main.cpp")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int main() {\n    // assert 0 \u6216 false \u4f1a\u8f93\u51fa\u4fe1\u606f\u5e76\u7ec8\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\n    assert(0);\n    assert(false);\n    #ifdef NDEBUG\n        cout << __func__ << endl; // C++ \u7f16\u8bd1\u5668\u4e3a\u6bcf\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e86 __func__\uff0c\u5b58\u653e\u51fd\u6570\u7684\u540d\u5b57\n        // \u9884\u5904\u7406\u5668\u8fd8\u5b9a\u4e49\u4e86 4 \u4e2a\u5bf9\u8c03\u8bd5\u5f88\u6709\u7528\u7684\u540d\u5b57\n        cout << __FILE__ << endl; // \u6587\u4ef6\u540d\n        cout << __LINE__ << endl; // \u884c\u53f7\n        cout << __TIME__ << endl; // \u7f16\u8bd1\u65f6\u95f4\n        cout << __DATE__ << endl; // \u7f16\u8bd1\u65e5\u671f\n    #endif\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u51fd\u6570\u6307\u9488"},"\u51fd\u6570\u6307\u9488"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u662f\u51fd\u6570\uff0c\u800c\u975e\u5bf9\u8c61\u3002")),(0,a.kt)("p",null,"\u51fd\u6570\u7684\u7c7b\u578b\u7531\u5b83\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u5f62\u53c2\u7c7b\u578b\u5171\u540c\u51b3\u5b9a\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bool lengthCompare(const string &, const string &) { return true; };")),(0,a.kt)("p",null,"\u8981\u60f3\u58f0\u660e\u6307\u5411\u8fd9\u4e2a\u51fd\u6570\u7684\u6307\u9488\uff0c\u53ea\u9700\u7528\u6307\u9488\u66ff\u6362\u51fd\u6570\u540d\u5373\u53ef\uff1a"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bool (*pt)(const string &, const string &);")),(0,a.kt)("p",null,"\u6ce8\u610f\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"(*pt)")," \u5706\u62ec\u53f7\u5fc5\u4e0d\u53ef\u5c11\uff0c\u5426\u5219\u7684\u8bdd\uff0c\u58f0\u660e\u7684\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578b\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"bool*")," \u7684\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u5f53\u6211\u4eec\u628a\u51fd\u6570\u540d\u4f5c\u4e3a\u4e00\u4e2a\u503c\u4f7f\u7528\u65f6\uff0c\u5b83\u81ea\u52a8\u8f6c\u6362\u4e3a\u6307\u9488\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"bool (*pt)(const string &, const string &) = lengthCompare;\n// \u7b49\u4ef7\u4e8e\nbool (*pt)(const string &, const string &) = &lengthCompare; // \u53d6\u5730\u5740\u7b26\u662f\u53ef\u9009\u7684\n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570\uff0c\u800c\u65e0\u987b\u89e3\u5f15\u7528\u6307\u9488\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'bool b1 = pt("hello", "goodbye");\n// \u7b49\u4ef7\u4e8e\nbool b2 = (*pt)("hello", "goodbye");\n// \u7b49\u4ef7\u4e8e\nbool b3 = lengthCompare("hello", "goodbye");\n')),(0,a.kt)("p",null,"\u867d\u7136\u5f62\u53c2\u4e0d\u53ef\u4ee5\u662f\u51fd\u6570\u7c7b\u578b\uff0c\u4f46\u5374\u53ef\u4ee5\u662f\u51fd\u6570\u6307\u9488\u3002\u4ee5\u4e0b\u7684\u58f0\u660e\uff0c\u5f62\u53c2\u770b\u4e0a\u53bb\u662f\u51fd\u6570\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a\u662f\u6307\u9488\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void useBigger(const string &s1, const string &s2, bool pf(const string &, const string &));\n// \u7b49\u4ef7\u4e8e\nvoid useBigger(const string &s1, const string &s2, bool (*pf)(const string &, const string &));\n")),(0,a.kt)("p",null,"\u8fd9\u6837\u7684\u58f0\u660e\u770b\u4e0a\u53bb\u8fc7\u4e8e\u5197\u957f\uff0c\u540c\u6837\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u522b\u540d\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef bool Func(const string &, const string &);\n// \u7b49\u4ef7\u4e8e\ntypedef bool (*FuncP)(const string &, const string &);\n\nvoid useBigger(const string &s1, const string &s2, Func);\n// \u7b49\u4ef7\u4e8e\nvoid useBigger(const string &s1, const string &s2, FuncP);\n")),(0,a.kt)("p",null,"\u867d\u7136\u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u80fd\u8fd4\u56de\u51fd\u6570\u6307\u9488\u3002\u7136\u800c\uff0c\u5fc5\u987b\u628a\u8fd4\u56de\u7c7b\u578b\u5199\u51fa\u6307\u9488\u7c7b\u578b\uff0c\u4e0d\u53ef\u4ee5\u5199\u51fd\u6570\u7c7b\u578b\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u7c7b\u578b\u522b\u540d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"using PF = int (*)(int *, int);\nPF f1(int);\n")),(0,a.kt)("h2",{id:"\u52a8\u6001\u5185\u5b58"},"\u52a8\u6001\u5185\u5b58"),(0,a.kt)("p",null,"\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5b66\u4e60\u7684\u5bf9\u8c61\u90fd\u6709\u4e25\u683c\u5b9a\u4e49\u7684\u751f\u5b58\u671f\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5168\u5c40\u5bf9\u8c61\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u5206\u914d\u3001\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u9500\u6bc1\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5c40\u90e8\u81ea\u52a8\u5bf9\u8c61\u5728\u7a0b\u5e8f\u5757\u5185\u88ab\u521b\u5efa\u3001\u5728\u79bb\u5f00\u5757\u65f6\u88ab\u9500\u6bc1\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5c40\u90e8 static \u5bf9\u8c61\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u524d\u5206\u914d\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u9500\u6bc1\u3002")),(0,a.kt)("p",null,"\u9759\u6001\u5185\u5b58\u7528\u6765\u4fdd\u5b58\u5b9a\u4e49\u5728\u4efb\u4f55\u51fd\u6570\u4e4b\u5916\u7684\u53d8\u91cf\u3001\u5c40\u90e8 static \u5bf9\u8c61\u3001\u7c7b\u7684 static \u6570\u636e\u6210\u5458\uff1b\u6808\u5185\u5b58\u7528\u6765\u4fdd\u5b58\u5b9a\u4e49\u5728\u51fd\u6570\u5185\u7684\u975e static \u5bf9\u8c61\uff1b\u5806\u5185\u5b58\u7528\u6765\u5b58\u50a8\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\uff0c\u52a8\u6001\u5bf9\u8c61\u7684\u751f\u547d\u671f\u7531\u7a0b\u5e8f\u6765\u663e\u5f0f\u5730\u63a7\u5236\u3002"),(0,a.kt)("h3",{id:"\u76f4\u63a5\u7ba1\u7406\u5185\u5b58"},"\u76f4\u63a5\u7ba1\u7406\u5185\u5b58"),(0,a.kt)("p",null,"C++ \u5b9a\u4e49\u4e86\u4e24\u4e2a\u8fd0\u7b97\u7b26\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u5728\u52a8\u6001\u5185\u5b58\u4e2d\u4e3a\u5bf9\u8c61\u5206\u914d\u7a7a\u95f4\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u5bf9\u8c61\u7684\u6307\u9488\uff1b",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," \u63a5\u53d7\u4e00\u4e2a\u52a8\u6001\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u9500\u6bc1\u8be5\u5bf9\u8c61\uff0c\u5e76\u91ca\u653e\u4e0e\u4e4b\u76f8\u5173\u7684\u5185\u5b58\u3002"),(0,a.kt)("p",null,"\u76f8\u5bf9\u4e8e\u667a\u80fd\u6307\u9488\uff0c\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u6765\u7ba1\u7406\u5185\u5b58\u975e\u5e38\u5bb9\u6613\u51fa\u9519\uff1b\u800c\u4e14\uff0c\u81ea\u5df1\u76f4\u63a5\u7ba1\u7406\u5185\u5b58\u7684\u7c7b\u4e0e\u4f7f\u7528\u667a\u80fd\u6307\u9488\u7684\u7c7b\u4e0d\u540c\uff0c\u5b83\u4eec\u4e0d\u80fd\u4f9d\u8d56\u7c7b\u5bf9\u8c61\u62f7\u8d1d\u3001\u8d4b\u503c\u3001\u9500\u6bc1\u64cd\u4f5c\u7684\u4efb\u4f55\u9ed8\u8ba4\u5b9a\u4e49\u3002"),(0,a.kt)("p",null,"\u786e\u4fdd\u5728\u6b63\u786e\u7684\u65f6\u95f4\u91ca\u653e\u5185\u5b58\u662f\u975e\u5e38\u5173\u952e\u3001\u4f46\u53c8\u6781\u5176\u56f0\u96be\u7684\u3002\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\uff1b\u5728\u5c1a\u6709\u6307\u9488\u5f15\u7528\u5185\u5b58\u65f6\u5c31\u91ca\u653e\u4e86\u5b83\uff0c\u53c8\u4f1a\u4ea7\u751f\u5f15\u7528\u975e\u6cd5\u5185\u5b58\u7684\u6307\u9488\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int main() {\n    // \u5728\u5806\u533a\u5206\u914d\u7684\u5185\u5b58\u662f\u65e0\u540d\u7684\uff0cnew \u65e0\u6cd5\u4e3a\u5176\u5206\u914d\u7684\u5bf9\u8c61\u547d\u540d\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u5bf9\u8c61\u7684\u6307\u9488\n    int *p1 = new int;\n    // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u662f\u9ed8\u8ba4\u521d\u59cb\u5316\u7684\n    // \u4e5f\u5c31\u662f\u8bf4\uff0c\u5185\u7f6e\u7c7b\u578b\u6216\u7ec4\u5408\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff1b\u7c7b\u7c7b\u578b\u5bf9\u8c61\u5c06\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\n\n    // \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f4\u63a5\u521d\u59cb\u5316\u3001\u6216\u8005 C++11 \u7684\u5217\u8868\u521d\u59cb\u5316\n    int *p2 = new int(1024);\n    string *ps = new string(10, 'c');\n    vector<int> *pv = new vector<int>{0, 1, 2, 3, 4, 5};\n\n    // pointer to const\n    const string *pcs = new const string(\"hello\");\n\n    // delete \u6267\u884c\u4e24\u4e2a\u52a8\u4f5c\uff1a\u9500\u6bc1\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u91ca\u653e\u5bf9\u5e94\u5185\u5b58\n    delete p1; // pi \u5fc5\u987b\u6307\u5411\u4e00\u4e2a\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u6216\u662f\u7a7a\u6307\u9488\uff0c\u91ca\u653e\u975e new \u5206\u914d\u7684\u5185\u5b58\u3001\u6216\u662f\u76f8\u540c\u7684\u6307\u9488\u503c\u88ab\u91ca\u653e\u591a\u6b21\uff0c\u5176\u884c\u4e3a\u90fd\u662f\u672a\u5b9a\u4e49\u7684\uff01\n    delete p2;\n    delete ps;\n    delete pv; // frees the memory for the vector, which also destroys the elements in that vector\n\n    // \u5f53\u6211\u4eec delete \u4e00\u4e2a\u6307\u9488\u540e\uff0c\u6307\u9488\u503c\u5c31\u53d8\u4e3a\u65e0\u6548\u4e86\n    // \u867d\u7136\u6307\u9488\u5df2\u7ecf\u65e0\u6548\uff0c\u4f46\u5728\u5f88\u591a\u673a\u5668\u4e0a\uff0c\u6307\u9488\u4ecd\u7136\u4fdd\u5b58\u7740\uff08\u5df2\u7ecf\u91ca\u653e\u4e86\u7684\uff09\u52a8\u6001\u5185\u5b58\u7684\u5730\u5740\n    // delete \u4e4b\u540e\u7684\u6307\u9488\u53d8\u6210\u4e86\u4eba\u4eec\u6240\u8bf4\u7684\u7a7a\u60ac\u6307\u9488 (dangling pinter)\uff0c\u5373\u6307\u5411\u4e00\u5757\u66fe\u7ecf\u4fdd\u5b58\u6570\u636e\u5bf9\u8c61\u4f46\u73b0\u5728\u5df2\u7ecf\u65e0\u6548\u7684\u5185\u5b58\u7684\u6307\u9488\n    cout << pcs << endl;\n    delete pcs;\n    cout << pcs << endl;\n    cout << *pcs << endl;\n\n    // \u5982\u679c\u6211\u4eec\u9700\u8981\u4fdd\u7559\u6307\u9488\uff0c\u53ef\u4ee5\u5728 delete \u4e4b\u540e\u8d4b\u4e88 nullptr\uff0c\u6e05\u695a\u5730\u6307\u51fa\u6307\u9488\u4e0d\u6307\u5411\u4efb\u4f55\u5bf9\u8c61\n    pcs = nullptr;\n    cout << pcs << endl;\n\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u4e00\u65e6\u7a0b\u5e8f\u7528\u5149\u4e86\u5806\u5185\u5b58\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u8868\u8fbe\u5f0f\u5c31\u4f1a\u5931\u8d25\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int *p1 = new int; // if allocation fails, new throws std::bad_alloc\nint *p2 = new (nothrow) int; // if allocation fails, new returns a null pointer\n")),(0,a.kt)("p",null,"\u8fd4\u56de\u6307\u5411\u52a8\u6001\u5185\u5b58\u7684\u6307\u9488\uff08\u800c\u4e0d\u662f\u667a\u80fd\u6307\u9488\uff09\u7684\u51fd\u6570\uff0c\u8c03\u7528\u8005\u5fc5\u987b\u8d1f\u8d23\u91ca\u653e\u5185\u5b58\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// factory returns a pointer to a dynamically allocated object\nFoo *factory(T arg) {\n    // process arg as appropriate\n    return new Foo(arg); // caller is responsible for deleting this memory\n}\n")),(0,a.kt)("p",null,"\u51fd\u6570\u7684\u9000\u51fa\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u6b63\u5e38\u7ed3\u675f\u8fd4\u56de\u6216\u8005\u53d1\u751f\u4e86\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u65e6\u53d1\u751f\u5f02\u5e38\uff0cip \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u6c38\u8fdc\u4e5f\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'void f() {\n    int *ip = new int(42);\n    throw runtime_error("error");\n    delete ip; // \u51fd\u6570 f \u4ee5\u5916\u6ca1\u6709\u6307\u9488\u6307\u5411\u8fd9\u5757\u5185\u5b58\n}\n')),(0,a.kt)("p",null,"\u4e00\u79cd\u7b80\u5355\u800c\u6709\u6548\u7684\u786e\u4fdd\u8d44\u6e90\u88ab\u91ca\u653e\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u667a\u80fd\u6307\u9488\u3002"),(0,a.kt)("h3",{id:"\u667a\u80fd\u6307\u9488"},"\u667a\u80fd\u6307\u9488"),(0,a.kt)("p",null,"\u4e3a\u4e86\u66f4\u5bb9\u6613\u3001\u66f4\u5b89\u5168\u5730\u4f7f\u7528\u52a8\u6001\u5185\u5b58\uff0cC++11 \u65b0\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e24\u79cd\u667a\u80fd\u6307\u9488\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u5141\u8bb8\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1b",(0,a.kt)("inlineCode",{parentName:"p"},"unique_ptr")," \u201c\u72ec\u5360\u201d\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5b83\u4eec\u90fd\u5b9a\u4e49\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"memory")," \u5934\u6587\u4ef6\u4e2d\u3002\u667a\u80fd\u6307\u9488\u7684\u884c\u4e3a\u7c7b\u4f3c\u5e38\u89c4\u6307\u9488\uff0c\u91cd\u8981\u7684\u533a\u522b\u662f\u5b83\u8d1f\u8d23\u81ea\u52a8\u91ca\u653e\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff01"),(0,a.kt)("p",null,"\u53e6\u5916\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"weak_ptr")," \u662f\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u5b83\u6307\u5411 ",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u6240\u7ba1\u7406\u7684\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,"C++11 \u4e2d\uff0c\u6700\u5b89\u5168\u7684\u5206\u914d\u548c\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u7684\u65b9\u6cd5\u662f\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"make_shared"),"\uff0c\u5728\u52a8\u6001\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u5bf9\u8c61\u5e76\u521d\u59cb\u5316\u5b83\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr<int> p1 = make_shared<int>(42);")),(0,a.kt)("p",null,"\u7c7b\u4f3c ",(0,a.kt)("inlineCode",{parentName:"p"},"vector"),"\uff0c\u667a\u80fd\u6307\u9488\u4e5f\u662f\u7c7b\u6a21\u677f\u3002\u53ef\u4ee5\u8ba4\u4e3a\u6bcf\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u90fd\u6709\u4e0e\u4e4b\u5173\u8054\u7684\u201c\u5f15\u7528\u8ba1\u6570\u5668\u201d\u3002\u62f7\u8d1d\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u4f1a\u4f7f\u5f15\u7528\u8ba1\u6570\u589e\u52a0\uff1b",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u7684\u6790\u6784\u51fd\u6570\u4f1a\u9012\u51cf\u6240\u6307\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u4e00\u65e6\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a 0\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u7684\u6790\u6784\u51fd\u6570\u5c31\u4f1a\u9500\u6bc1\u5bf9\u8c61\uff0c\u5e76\u91ca\u653e\u5b83\u5360\u7528\u7684\u5185\u5b58\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u8fd4\u56de\u7684\u5185\u7f6e\u6307\u9488\uff0c\u6765\u521d\u59cb\u5316\u667a\u80fd\u6307\u9488\u3002\u4f46\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u662f explicit \u7684\uff0c\u610f\u5473\u7740\u5b83\u4e0d\u63a5\u53d7\u9690\u5f0f\u8f6c\u6362\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"shared_ptr<int> p1(new int(42));\nshared_ptr<int> p2 = new int(42); // \u274c\n")),(0,a.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7528\u6765\u521d\u59cb\u5316\u667a\u80fd\u6307\u9488\u7684\u666e\u901a\u6307\u9488\uff0c\u5fc5\u987b\u662f\u6307\u5411\u52a8\u6001\u5185\u5b58\u7684\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u9ed8\u8ba4\u4e5f\u662f\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," \u8fd0\u7b97\u7b26\u6765\u91ca\u653e\u5b83\u5173\u8054\u7684\u5bf9\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u667a\u80fd\u6307\u9488\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6307\u5411\u5176\u5b83\u7c7b\u578b\u7684\u8d44\u6e90\u7684\u6307\u9488\u4e0a\uff0c\u4f46\u8981\u8fd9\u4e48\u505a\uff0c\u5fc5\u987b\u63d0\u4f9b\u81ea\u5df1\u7684\u64cd\u4f5c\u6765\u4ee3\u66ff ",(0,a.kt)("inlineCode",{parentName:"p"},"delete"),"\uff08\u4f8b\u5982\u4e0b\u9762\u63d0\u5230\u7684\u52a8\u6001\u6570\u7ec4\uff09\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"unique_ptr")," \u4e0e ",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u4e0d\u540c\uff0c\u6ca1\u6709\u7c7b\u4f3c ",(0,a.kt)("inlineCode",{parentName:"p"},"make_shared")," \u7684\u6807\u51c6\u5e93\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff0c\u5f53\u6211\u4eec\u5b9a\u4e49 ",(0,a.kt)("inlineCode",{parentName:"p"},"unique_ptr")," \u65f6\uff0c\u9700\u8981\u5c06\u5176\u7ed1\u5b9a\u5230\u4e00\u4e2a new \u8fd4\u56de\u7684\u6307\u9488\u4e0a\u3002\u7c7b\u4f3c ",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr"),"\uff0c\u521d\u59cb\u5316 ",(0,a.kt)("inlineCode",{parentName:"p"},"unique_ptr")," \u5fc5\u987b\u91c7\u7528\u76f4\u63a5\u521d\u59cb\u5316\u7684\u5f62\u5f0f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"unique_ptr<double> p;\nunique_ptr<string> p1(new string(\"Stegosaurus\"));\nunique_ptr<int> p2(new int(42));\n\nstring *s = p1.get(); // Pointer to the managed object or nullptr if no object is owned.\ncout << *s << '\\n';\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"unique_ptr")," \u201c\u5360\u6709\u201d\u5b83\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u4e0d\u652f\u6301\u8d4b\u503c\u3001\u62f7\u8d1d\u64cd\u4f5c\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"release")," \u6216 ",(0,a.kt)("inlineCode",{parentName:"p"},"reset")," \u5c06\u6307\u9488\u7684\u6240\u6709\u6743\u8f6c\u79fb\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'unique_ptr<string> p3(p1.release()); // p1 \u653e\u5f03\u5bf9\u6307\u9488\u7684\u63a7\u5236\u6743\uff0c\u8fd4\u56de\u6307\u9488\uff0c\u5e76\u5c06 p1 \u7f6e\u4e3a\u7a7a\nunique_ptr<string> p4(new string("Trex"));\np3.reset(p4.release()); // \u91ca\u653e p3 \u6307\u5411\u7684\u5185\u5b58\uff1bp3 \u6307\u5411 p4 \u6307\u5411\u7684\u5185\u5b58\uff0cp4 \u7f6e\u4e3a\u7a7a\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"reset")," is a member function of ",(0,a.kt)("inlineCode",{parentName:"p"},"std::shared_ptr")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"std::unique_ptr")," used to release ownership of the current allocated memory (if any) and set the smart pointer to manage a new object (if provided)."),(0,a.kt)("p",null,"\u521b\u5efa ",(0,a.kt)("inlineCode",{parentName:"p"},"weak_ptr")," \u8981\u7528\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u6765\u521d\u59cb\u5316\u5b83\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"shared_ptr<int> p = make_shared<int>(42);\nweak_ptr<int> wp(p);\n// \u8bbf\u95ee\u5f31\u5f15\u7528\u5bf9\u8c61\nif (shared_ptr<int> np = wp.lock()) {\n    cout << *np << endl;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(90843).Z,width:"769",height:"614"})),(0,a.kt)("h3",{id:"\u52a8\u6001\u6570\u7ec4"},"\u52a8\u6001\u6570\u7ec4"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," \u8fd0\u7b97\u7b26\u4e00\u6b21\u5206\u914d/\u91ca\u653e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"vector")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," \u90fd\u662f\u5728\u8fde\u7eed\u5185\u5b58\u4e2d\u4fdd\u5b58\u5143\u7d20\uff0c\u5f53\u5bb9\u5668\u9700\u8981\u91cd\u65b0\u5206\u914d\u5185\u5b58\u65f6\uff0c\u5fc5\u987b\u4e00\u6b21\u6027\u4e3a\u5f88\u591a\u5143\u7d20\u5206\u914d\u5185\u5b58\u3002"),(0,a.kt)("p",null,"\u6ce8\u610f\uff0c\u7edd\u5927\u591a\u6570\u5e94\u7528\u90fd\u6ca1\u6709\u76f4\u63a5\u8bbf\u95ee\u52a8\u6001\u6570\u7ec4\u7684\u9700\u6c42\uff0c\u4f7f\u7528\u6807\u51c6\u5e93\u7684\u5bb9\u5668\u662f\u66f4\u7b80\u5355\u3001\u66f4\u5b89\u5168\u7684\u9009\u62e9\uff01"),(0,a.kt)("p",null,"C++ \u8bed\u8a00\u548c\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e24\u79cd\u4e00\u6b21\u6027\u5206\u914d\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u5206\u522b\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u8868\u8fbe\u5f0f\u8bed\u6cd5\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"allocator")," \u7c7b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int *pia = new int[42]; // pia points to the first of these ints\ndelete [] pia; // brackets used to delete pointer to element in an array\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"unique_ptr")," \u53ef\u4ee5\u7528\u4e8e\u7ba1\u7406 ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u5206\u914d\u7684\u6570\u7ec4\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// up points to an array of ten uninitialized ints\nunique_ptr<int[]> up(new int[10]);\nfor (size_t i = 0; i != 10; ++i)\n    up[i] = i;  // assign a new value to each of the elements\nup.release();   // automatically uses delete[] to destroy its pointer\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"shared_ptr")," \u4e0d\u76f4\u63a5\u652f\u6301\u7ba1\u7406\u52a8\u6001\u6570\u7ec4\uff0c\u5982\u679c\u5e0c\u671b\u5982\u6b64\uff0c\u5fc5\u987b\u5b9a\u4e49\u81ea\u5df1\u7684\u5220\u9664\u5668\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void deleter(int *p) { delete[] p; }\n// to use a shared_ptr we must supply a deleter\nshared_ptr<int> sp(new int[10], deleter);\n// shared_ptrs don't have subscript operator\n// and don't support pointer arithmetic\nfor (size_t i = 0; i != 10; ++i)\n    *(sp.get() + i) = i;  // use get to get a built-in pointer\nsp.reset(); // uses the function we supplied\n            // that uses delete[] to free the array\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"new")," \u8fd0\u7b97\u7b26\u5c06\u5206\u914d\u5185\u5b58\u548c\u5bf9\u8c61\u6784\u9020\u7ec4\u5408\u5728\u4e86\u4e00\u8d77\uff1b",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," \u5c06\u5bf9\u8c61\u6790\u6784\u548c\u5185\u5b58\u91ca\u653e\u7ec4\u5408\u5728\u4e86\u4e00\u8d77\u3002\u5728\u5206\u914d\u52a8\u6001\u6570\u7ec4\u7684\u5185\u5b58\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u5e0c\u671b\u5c06\u5185\u5b58\u5206\u914d\u548c\u5bf9\u8c61\u6784\u9020\u5206\u79bb\uff0c\u6807\u51c6\u5e93 ",(0,a.kt)("inlineCode",{parentName:"p"},"allocator")," \u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5b83\u63d0\u4f9b\u4e00\u79cd\u7c7b\u578b\u611f\u77e5\u7684\u5185\u5b58\u5206\u914d\u65b9\u6cd5\uff0c\u5b83\u5206\u914d\u7684\u5185\u5b58\u662f\u539f\u59cb\u7684\u3001\u672a\u6784\u9020\u7684\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const size_t n = 100;\nallocator<string> alloc;      // object that can allocate strings\nstring *p = alloc.allocate(n);   // allocate n unconstructed strings\n\nstring *q = p; // q now points to the first element\n// pre-C++ 11 alloc.construct must be explicitly passed an object of\n// the allocated type, so, we pass an empty string() explicitly\nalloc.construct(q++, string()); // *q is the empty string\n\n// C++ 11, pass string constructor\nalloc.construct(q++, string("hi"));    // *q is hi!\n\n// \u7528\u5b8c\u4e4b\u540e\u8981\u5bf9\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528 `destroy` \u6765\u6790\u6784\uff0c\u7136\u540e\u91ca\u653e\u5185\u5b58\nfor (q = p + size - 1; q != p; --q)\n    alloc.destroy(q);         // free the strings we allocated\nalloc.deallocate(p, n);       // return the memory we allocated\n')),(0,a.kt)("h2",{id:"\u64cd\u4f5c\u7b26\u91cd\u8f7d"},"\u64cd\u4f5c\u7b26\u91cd\u8f7d"),(0,a.kt)("p",null,"\u91cd\u8f7d\u7684\u64cd\u4f5c\u7b26\u662f\u5177\u6709\u7279\u6b8a\u540d\u5b57\u7684\u51fd\u6570\uff1a\u5b83\u4eec\u7684\u540d\u5b57\u7531\u5173\u952e\u5b57 ",(0,a.kt)("inlineCode",{parentName:"p"},"operator")," \u548c\u540e\u9762\u8ddf\u7740\u7684\u8fd0\u7b97\u7b26\u53f7\u5171\u540c\u7ec4\u6210\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u4e8c\u5143\u8fd0\u7b97\u7b26\u6765\u8bf4\uff0c\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u4f20\u9012\u7ed9\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u4f20\u9012\u7ed9\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u58f0\u660e\nfriend std::ostream& operator<<(std::ostream&, const Sales_item&);\n// \u4f7f\u7528\nstd::cout << item;\n")),(0,a.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u8fd0\u7b97\u7b26\u662f\u6210\u5458\u51fd\u6570\uff0c\u5219\u8fd0\u7b97\u7b26\u7684\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u7ed1\u5b9a\u5230\u9690\u5f0f\u7684 this \u6307\u9488\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"Sales_item& operator+=(const Sales_item&);\n")),(0,a.kt)("p",null,"\u6ce8\u610f\uff0c\u8fd0\u7b97\u7b26\u51fd\u6570\u6216\u8005\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6216\u8005\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u7c7b\u7c7b\u578b\u7684\u53c2\u6570\u3002\u4e0d\u80fd\u91cd\u5b9a\u4e49\u4e24\u4e2a\u5185\u7f6e\u7c7b\u578b\u4f8b\u5982 int \u7684\u8fd0\u7b97\u7b26\uff01"),(0,a.kt)("h3",{id:"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26"},"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'struct absInt {\n    int operator()(int val) const {\n        return val < 0 ? -val : val;\n    }\n};\n\nint main() {\n    int i = -42;\n    absInt absObj;           // object that has a function-call operator\n    unsigned ui = absObj(i); // passes i to absObj.operator()\n    cout << i << " " << ui << endl;\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"\u547d\u540d\u7a7a\u95f4"},"\u547d\u540d\u7a7a\u95f4"),(0,a.kt)("p",null,"\u5185\u8054\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u53ef\u4ee5\u88ab\u5916\u5c42\u547d\u540d\u7a7a\u95f4\u76f4\u63a5\u4f7f\u7528\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace cpp_primer {\n    inline namespace FifthEd {\n\n    }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"namespace")," \u5173\u952e\u5b57\u540e\u7d27\u8ddf\u82b1\u62ec\u53f7\u7684\u662f\u672a\u547d\u540d\u7684\u547d\u540d\u7a7a\u95f4\u3002"),(0,a.kt)("p",null,"\u672a\u547d\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5177\u6709\u9759\u6001\u751f\u547d\u5468\u671f\u2014\u2014\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521b\u5efa\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u9500\u6bc1\u3002"),(0,a.kt)("p",null,"\u672a\u547d\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4ec5\u5728\u7279\u5b9a\u7684\u6587\u4ef6\u5185\u90e8\u6709\u6548\uff0c\u4e0d\u80fd\u8de8\u8d8a\u591a\u4e2a\u6587\u4ef6\uff0c\u4f46\u5728\u6587\u4ef6\u5185\u53ef\u4ee5\u4e0d\u8fde\u7eed\u3002"),(0,a.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u5934\u6587\u4ef6\u5b9a\u4e49\u4e86\u672a\u547d\u540d\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5219\u8be5\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\uff0c\u5c06\u5728\u6bcf\u4e2a\u5305\u542b\u4e86\u8be5\u5934\u6587\u4ef6\u7684\u6587\u4ef6\u4e2d\u5bf9\u5e94\u4e0d\u540c\u7684\u5b9e\u4f53\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"using")," \u58f0\u660e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing std::cin;\nusing std::cout;\nusing std::endl;\n")),(0,a.kt)("h2",{id:"\u7279\u6b8a\u5de5\u5177"},"\u7279\u6b8a\u5de5\u5177"),(0,a.kt)("h3",{id:"\u679a\u4e3e"},"\u679a\u4e3e"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"enum color {red, yellow, green};")),(0,a.kt)("h3",{id:"union"},"union"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"union"),"\uff08\u5171\u7528\u4f53\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u3002\u5b83\u7684\u6240\u6709\u6570\u636e\u6210\u5458\u90fd\u5171\u7528\u540c\u4e00\u5757\u5185\u5b58\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"union")," \u7684\u5b58\u50a8\u7a7a\u95f4\u81f3\u5c11\u8981\u80fd\u5bb9\u7eb3\u5b83\u7684\u6700\u5927\u7684\u6570\u636e\u6210\u5458\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"union")," \u4e0d\u80fd\u542b\u6709\u5f15\u7528\u7c7b\u578b\u7684\u6210\u5458\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'union Date {\n    int year;\n    char month;\n    char day;\n}; // \u5171\u7528\u4e00\u57574\u5b57\u8282\u5185\u5b58\n\nint main(int argc, const char * argv[]) {\n    union Date date;\n\n    date.year = 2012;\n    printf("%d\\n", date.year); // 2012\n\n    date.month = 12;\n    printf("%d\\n", date.month); // 12\n\n    date.day = 12;\n    printf("%d\\n", date.day); // 12\n\n    printf("%d\\n", date.year); // 1804\uff0c\u601d\u8003\u4e0b\u4e3a\u4ec0\u4e48\uff1f\u2014\u2014\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u88ab\u5199\u5165\u4e86 12\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u56fa\u6709\u7684\u4e0d\u53ef\u79fb\u690d\u7684\u7279\u6027"},"\u56fa\u6709\u7684\u4e0d\u53ef\u79fb\u690d\u7684\u7279\u6027"),(0,a.kt)("p",null,"To support low-level programming, C++ defines some features that are inherently ",(0,a.kt)("strong",{parentName:"p"},"nonportable"),"."),(0,a.kt)("p",null,"A nonportable feature is one that is ",(0,a.kt)("strong",{parentName:"p"},"machine specific"),". Programs that use nonportable features often require reprogramming when they are moved from one machine to another. The fact that the sizes of the arithmetic types vary across machines (\xa7 2.1.1, p. 32) is one such nonportable feature that we have already used."),(0,a.kt)("p",null,"In this section we\u2019ll cover two additional nonportable features that C++ ",(0,a.kt)("em",{parentName:"p"},"inherits from C"),": ",(0,a.kt)("strong",{parentName:"p"},"bit-fields")," and the ",(0,a.kt)("strong",{parentName:"p"},"volatile qualifier"),". We\u2019ll also cover ",(0,a.kt)("strong",{parentName:"p"},"linkage directives"),"\uff08\u94fe\u63a5\u6307\u4ee4\uff09, which is a nonportable feature that C++ adds to those that it inherits from C."),(0,a.kt)("h3",{id:"bit-field"},"bit-field"),(0,a.kt)("p",null,"A class can define a (non static) data member as a bit-field. A bit-field holds a specified number of bits."),(0,a.kt)("p",null,"Ordinarily, we use an unsigned type to hold a bit-field."),(0,a.kt)("p",null,"We indicate that a member is a bit-field by following the member name with a colon and a constant expression specifying the number of bits:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef unsigned int Bit; // Bit \u8fd9\u79cd\u7c7b\u578b\u5360 64 \u4f4d\nclass File {\n    Bit mode: 2; // mode has 2 bits\n    Bit modified: 1; // modified has 1 bit\n    Bit prot_owner: 3; // prot_owner has 3 bits\n    Bit prot_group: 3; // prot_group has 3 bits\n    Bit prot_world: 3; // prot_world has 3 bits\n}\n")),(0,a.kt)("p",null,"Bit-fields defined in consecutive order within the class body are, if possible, packed within adjacent bits of the same integer, thereby providing for storage compaction."),(0,a.kt)("p",null,"For example, in the preceding declaration, the five bit-fields will (probably) be stored in a single ",(0,a.kt)("inlineCode",{parentName:"p"},"unsigned int"),". Whether and how the bits are packed into the integer is machine dependent."),(0,a.kt)("p",null,"The address-of operator (",(0,a.kt)("inlineCode",{parentName:"p"},"&"),") cannot be applied to a bit-field, so there can be no pointers referring to class bit-fields."),(0,a.kt)("p",null,"\u53c2\u8003\u8d44\u6599\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/cpp/cpp/cpp-bit-fields?view=msvc-170"},"C++ Bit Fields | Microsoft Docs")),(0,a.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u5b57\u8282\u7684\u7c7b\u578b\uff0c\u6309\u4f4d\u5b58\u653e\u5e03\u5c14\u503c\uff0c\u7136\u540e\u901a\u8fc7\u4f4d\u8fd0\u7b97\u6765\u5b58/\u53d6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#define ZERO_MASK (1 << 0) // \u8868\u793a\u6700\u4f4e\u4f4d\n#define ONE_MASK (1 << 1)\n#define TWO_MASK (1 << 2)\n#define THREE_FOUR_MASK (0b11 << 3) // \u5982\u679c\u4e00\u4e2a\u6570\u636e\u9700\u5360 2 bits\uff0c\u90a3\u4e48\u5b83\u7684\u63a9\u7801\u8981\u76f8\u5e94\u5730\u7528\u4e24\u4f4d\n\n// \u5c06\u5e03\u5c14\u503c\u6253\u5370\u6210\u5b57\u7b26\u4e32\nvoid printb(bool b) {\n    printf("%s\\n", b ? "true" : "false");\n}\n\nint main(int argc, const char * argv[]) {\n    // \u6309\u4f4d\u5b58\u653e\uff0c\u6700\u591a\u53ef\u5b58\u653e8\u4e2a\u5e03\u5c14\u503c\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u5b583\u4e2a\uff0c\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u5b58\n    char bits = 0b00000000;\n\n    // \u53d6\u503c\n    // !! \u8868\u793a\u8f6c\u4e3a bool \u7c7b\u578b\n    bool b2 = !!(bits & TWO_MASK);\n    printb(b2); // false\n\n    // \u8bbe\u4e3atrue\n    bits |= TWO_MASK; // \u4f4d\u6216\u8fd0\u7b97\uff0c\u4f1a\u628a\u5bf9\u5e94\u4f4d\u53d8\u62101\n    b2 = !!(bits & TWO_MASK); // \u4f4d\u4e0e\u7684\u7ed3\u679c\u662f4\uff0c\u6309\u7167\u5e03\u5c14\u503c\u7684\u5b9a\u4e49\uff0c\u975e0\u4e3atrue\uff0c\u53ea\u6709\u5168\u4e3a0\u624d\u4e3afalse\n    printb(b2); // true\n\n    // \u8bbe\u4e3afalse\n    bits &= ~TWO_MASK; // \u63a9\u7801\u53d6\u53cd\uff0c\u518d\u8fdb\u884c\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u4f1a\u628a\u6240\u6709\u4f4d\u90fd\u53d8\u62100\n    b2 = !!(bits & TWO_MASK); // \u6240\u6709\u4f4d\u90fd\u662f0\n    printb(b2); // false\n\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u8f83\u5dee\uff0c\u56e0\u4e3a\u5176\u4ed6\u4eba\u4e0d\u77e5\u9053\u6bcf\u4e00\u4f4d\u5b58\u50a8\u7684\u5e03\u5c14\u503c\u4ee3\u8868\u4ec0\u4e48\u542b\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 union \u548c bit-field \u7ed3\u5408\u7684\u65b9\u5f0f\uff0c\u6765\u589e\u52a0\u53ef\u8bfb\u6027\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"union {\n    char bits;\n    struct {\n        unsigned char isRed : 1;\n        unsigned char isGreen : 1;\n        unsigned char isBlue : 1;\n    }; // \u76f8\u5f53\u4e8e\u589e\u52a0\u4e86\u53ef\u8bfb\u6027\uff0c\u901a\u8fc7\u53d8\u91cf\u540d\u544a\u8bc9\u8bfb\u8005\u6bcf\u4e00\u4f4d\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u628a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5220\u6389\u4e5f\u5b8c\u5168\u6ca1\u6709\u5f71\u54cd\n} bits_u;\n\nint main(int argc, const char * argv[]) {\n    bits_u.bits = 0b00000000; // \u6ce8\u610f\uff0c\u8c03\u7528\u65f6\u8fd8\u662f\u7528bits\n\n    bool b2 = !!(bits_u.bits & TWO_MASK);\n    printb(b2); // false\n\n    // \u8bbe\u4e3atrue\n    bits_u.bits |= TWO_MASK;\n    b2 = !!(bits_u.bits & TWO_MASK);\n    printb(b2); // true\n\n    // \u8bbe\u4e3afalse\n    bits_u.bits &= ~TWO_MASK;\n    b2 = !!(bits_u.bits & TWO_MASK);\n    printb(b2); // false\n\n    return 0;\n}\n")))}u.isMDXComponent=!0},90843:(n,e,t)=>{t.d(e,{Z:()=>l});const l=t.p+"assets/images/22874ADD-68BB-40D1-9DAC-633689A72621-6cf77c78c1994d7b5ef4daea140cdc06.jpg"}}]);